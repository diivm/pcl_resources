{
  "TRANSLATION_UNIT:'/pcl/registration/include/pcl/registration/icp.h'": {
    "children": [
      "INCLUSION_DIRECTIVE:'pcl/memory.h'",
      "INCLUSION_DIRECTIVE:'pcl/registration/correspondence_estimation.h'",
      "INCLUSION_DIRECTIVE:'pcl/registration/default_convergence_criteria.h'",
      "INCLUSION_DIRECTIVE:'pcl/registration/impl/icp.hpp'",
      "INCLUSION_DIRECTIVE:'pcl/registration/registration.h'",
      "INCLUSION_DIRECTIVE:'pcl/registration/transformation_estimation_point_to_plane_lls.h'",
      "INCLUSION_DIRECTIVE:'pcl/registration/transformation_estimation_svd.h'",
      "INCLUSION_DIRECTIVE:'pcl/registration/transformation_estimation_symmetric_point_to_plane_lls.h'",
      {
        "NAMESPACE:'pcl'": {
          "children": [
            {
              "CLASS_TEMPLATE:'IterativeClosestPoint'": {
                "children": [
                  {
                    "CONSTRUCTOR:'IterativeClosestPoint<PointSource, PointTarget, Scalar>'": {
                      "children": [
                        "COMPOUND_STMT:''",
                        "CXX_NULL_PTR_LITERAL_EXPR:''",
                        "CXX_NULL_PTR_LITERAL_EXPR:''",
                        "CXX_NULL_PTR_LITERAL_EXPR:''",
                        "MEMBER_REF:'source_has_normals_'",
                        "MEMBER_REF:'target_has_normals_'",
                        "MEMBER_REF:'use_reciprocal_correspondence_'"
                      ]
                    }
                  },
                  {
                    "CONSTRUCTOR:'IterativeClosestPoint<PointSource, PointTarget, Scalar>'": {
                      "children": [
                        {
                          "PARM_DECL:''": {
                            "children": [
                              "TYPE_REF:'IterativeClosestPoint<PointSource, PointTarget, Scalar>'"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "CONSTRUCTOR:'IterativeClosestPoint<PointSource, PointTarget, Scalar>'": {
                      "children": [
                        {
                          "PARM_DECL:''": {
                            "children": [
                              "TYPE_REF:'IterativeClosestPoint<PointSource, PointTarget, Scalar>'"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "CXX_ACCESS_SPEC_DECL:''",
                  {
                    "CXX_METHOD:'computeTransformation'": {
                      "children": [
                        "CXX_OVERRIDE_ATTR:''",
                        "PARM_DECL:'guess'",
                        "PARM_DECL:'output'"
                      ]
                    }
                  },
                  "CXX_METHOD:'determineRequiredBlobData'",
                  {
                    "CXX_METHOD:'operator='": {
                      "children": [
                        {
                          "PARM_DECL:''": {
                            "children": [
                              "TYPE_REF:'IterativeClosestPoint<PointSource, PointTarget, Scalar>'"
                            ]
                          }
                        },
                        "TYPE_REF:'IterativeClosestPoint<PointSource, PointTarget, Scalar>'"
                      ]
                    }
                  },
                  {
                    "CXX_METHOD:'operator='": {
                      "children": [
                        {
                          "PARM_DECL:''": {
                            "children": [
                              "TYPE_REF:'IterativeClosestPoint<PointSource, PointTarget, Scalar>'"
                            ]
                          }
                        },
                        "TYPE_REF:'IterativeClosestPoint<PointSource, PointTarget, Scalar>'"
                      ]
                    }
                  },
                  {
                    "DESTRUCTOR:'~IterativeClosestPoint<PointSource, PointTarget, Scalar>'": {
                      "children": [
                        "COMPOUND_STMT:''"
                      ]
                    }
                  },
                  "FIELD_DECL:'need_source_blob_'",
                  "FIELD_DECL:'need_target_blob_'",
                  "FIELD_DECL:'nx_idx_offset_'",
                  "FIELD_DECL:'ny_idx_offset_'",
                  "FIELD_DECL:'nz_idx_offset_'",
                  "FIELD_DECL:'source_has_normals_'",
                  "FIELD_DECL:'target_has_normals_'",
                  "FIELD_DECL:'use_reciprocal_correspondence_'",
                  "FIELD_DECL:'x_idx_offset_'",
                  "FIELD_DECL:'y_idx_offset_'",
                  "FIELD_DECL:'z_idx_offset_'",
                  "TEMPLATE_TYPE_PARAMETER:'PointSource'",
                  "TEMPLATE_TYPE_PARAMETER:'PointTarget'",
                  "TEMPLATE_TYPE_PARAMETER:'Scalar'"
                ]
              }
            },
            {
              "CLASS_TEMPLATE:'IterativeClosestPointWithNormals'": {
                "children": [
                  {
                    "CONSTRUCTOR:'IterativeClosestPointWithNormals<PointSource, PointTarget, Scalar>'": {
                      "children": [
                        {
                          "COMPOUND_STMT:''": {
                            "children": [
                              {
                                "BINARY_OPERATOR:''": {
                                  "children": [
                                    {
                                      "MEMBER_REF_EXPR:''": {
                                        "children": [
                                          "OVERLOADED_DECL_REF:'reg_name_'"
                                        ]
                                      }
                                    },
                                    "STRING_LITERAL:'\"IterativeClosestPointWithNormals\"'"
                                  ]
                                }
                              },
                              {
                                "CALL_EXPR:'setEnforceSameDirectionNormals'": {
                                  "children": [
                                    "CXX_NULL_PTR_LITERAL_EXPR:''",
                                    "MEMBER_REF_EXPR:'setEnforceSameDirectionNormals'"
                                  ]
                                }
                              },
                              {
                                "CALL_EXPR:'setUseSymmetricObjective'": {
                                  "children": [
                                    "CXX_NULL_PTR_LITERAL_EXPR:''",
                                    "MEMBER_REF_EXPR:'setUseSymmetricObjective'"
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "CXX_ACCESS_SPEC_DECL:''",
                  "CXX_ACCESS_SPEC_DECL:''",
                  {
                    "CXX_BASE_SPECIFIER:'IterativeClosestPoint<PointSource, PointTarget, Scalar>'": {
                      "children": [
                        "TEMPLATE_REF:'IterativeClosestPoint'",
                        "TYPE_REF:'PointSource'",
                        "TYPE_REF:'PointTarget'",
                        "TYPE_REF:'Scalar'"
                      ]
                    }
                  },
                  {
                    "CXX_METHOD:'getEnforceSameDirectionNormals'": {
                      "children": [
                        {
                          "COMPOUND_STMT:''": {
                            "children": [
                              {
                                "RETURN_STMT:''": {
                                  "children": [
                                    {
                                      "UNEXPOSED_EXPR:'enforce_same_direction_normals_'": {
                                        "children": [
                                          "MEMBER_REF_EXPR:'enforce_same_direction_normals_'"
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "CXX_METHOD:'getUseSymmetricObjective'": {
                      "children": [
                        {
                          "COMPOUND_STMT:''": {
                            "children": [
                              {
                                "RETURN_STMT:''": {
                                  "children": [
                                    {
                                      "UNEXPOSED_EXPR:'use_symmetric_objective_'": {
                                        "children": [
                                          "MEMBER_REF_EXPR:'use_symmetric_objective_'"
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "CXX_METHOD:'setEnforceSameDirectionNormals'": {
                      "children": [
                        {
                          "COMPOUND_STMT:''": {
                            "children": [
                              {
                                "BINARY_OPERATOR:''": {
                                  "children": [
                                    "MEMBER_REF_EXPR:'enforce_same_direction_normals_'",
                                    {
                                      "UNEXPOSED_EXPR:'enforce_same_direction_normals'": {
                                        "children": [
                                          "DECL_REF_EXPR:'enforce_same_direction_normals'"
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "DECL_STMT:''": {
                                  "children": [
                                    "VAR_DECL:'symmetric_transformation_estimation'"
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "PARM_DECL:'enforce_same_direction_normals'"
                      ]
                    }
                  },
                  {
                    "CXX_METHOD:'setUseSymmetricObjective'": {
                      "children": [
                        {
                          "COMPOUND_STMT:''": {
                            "children": [
                              {
                                "BINARY_OPERATOR:''": {
                                  "children": [
                                    "MEMBER_REF_EXPR:'use_symmetric_objective_'",
                                    {
                                      "UNEXPOSED_EXPR:'use_symmetric_objective'": {
                                        "children": [
                                          "DECL_REF_EXPR:'use_symmetric_objective'"
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "IF_STMT:''": {
                                  "children": [
                                    {
                                      "COMPOUND_STMT:''": {
                                        "children": [
                                          {
                                            "DECL_STMT:''": {
                                              "children": [
                                                "VAR_DECL:'PointTarget'",
                                                "VAR_DECL:'symmetric_transformation_estimation'"
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "COMPOUND_STMT:''",
                                    {
                                      "UNEXPOSED_EXPR:'use_symmetric_objective_'": {
                                        "children": [
                                          "MEMBER_REF_EXPR:'use_symmetric_objective_'"
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "PARM_DECL:'use_symmetric_objective'"
                      ]
                    }
                  },
                  {
                    "CXX_METHOD:'transformCloud'": {
                      "children": [
                        {
                          "PARM_DECL:'input'": {
                            "children": [
                              "TYPE_REF:'pcl::IterativeClosestPointWithNormals::PointCloudSource'"
                            ]
                          }
                        },
                        {
                          "PARM_DECL:'output'": {
                            "children": [
                              "TYPE_REF:'pcl::IterativeClosestPointWithNormals::PointCloudSource'"
                            ]
                          }
                        },
                        {
                          "PARM_DECL:'transform'": {
                            "children": [
                              "TYPE_REF:'pcl::IterativeClosestPointWithNormals::Matrix4'"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "DESTRUCTOR:'~IterativeClosestPointWithNormals<PointSource, PointTarget, Scalar>'": {
                      "children": [
                        "COMPOUND_STMT:''"
                      ]
                    }
                  },
                  "FIELD_DECL:'enforce_same_direction_normals_'",
                  "FIELD_DECL:'use_symmetric_objective_'",
                  "TEMPLATE_TYPE_PARAMETER:'PointSource'",
                  "TEMPLATE_TYPE_PARAMETER:'PointTarget'",
                  "TEMPLATE_TYPE_PARAMETER:'Scalar'",
                  {
                    "TYPE_ALIAS_DECL:'Matrix4'": {
                      "children": [
                        "TEMPLATE_REF:'IterativeClosestPoint'",
                        "TYPE_REF:'PointSource'",
                        "TYPE_REF:'PointTarget'",
                        "TYPE_REF:'Scalar'"
                      ]
                    }
                  },
                  {
                    "TYPE_ALIAS_DECL:'PointCloudSource'": {
                      "children": [
                        "TEMPLATE_REF:'IterativeClosestPoint'",
                        "TYPE_REF:'PointSource'",
                        "TYPE_REF:'PointTarget'",
                        "TYPE_REF:'Scalar'"
                      ]
                    }
                  },
                  {
                    "TYPE_ALIAS_DECL:'PointCloudTarget'": {
                      "children": [
                        "TEMPLATE_REF:'IterativeClosestPoint'",
                        "TYPE_REF:'PointSource'",
                        "TYPE_REF:'PointTarget'",
                        "TYPE_REF:'Scalar'"
                      ]
                    }
                  },
                  {
                    "USING_DECLARATION:'correspondence_rejectors_'": {
                      "children": [
                        "TEMPLATE_REF:'IterativeClosestPoint'",
                        "TYPE_REF:'PointSource'",
                        "TYPE_REF:'PointTarget'",
                        "TYPE_REF:'Scalar'"
                      ]
                    }
                  },
                  {
                    "USING_DECLARATION:'reg_name_'": {
                      "children": [
                        "TEMPLATE_REF:'IterativeClosestPoint'",
                        "TYPE_REF:'PointSource'",
                        "TYPE_REF:'PointTarget'",
                        "TYPE_REF:'Scalar'"
                      ]
                    }
                  },
                  {
                    "USING_DECLARATION:'transformation_estimation_'": {
                      "children": [
                        "TEMPLATE_REF:'IterativeClosestPoint'",
                        "TYPE_REF:'PointSource'",
                        "TYPE_REF:'PointTarget'",
                        "TYPE_REF:'Scalar'"
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    ]
  }
}