TRANSLATION_UNIT:'/pcl/io/include/pcl/io/ply/byte_order.h'
├── INCLUSION_DIRECTIVE:'boost/predef/other/endian.h'
├── INCLUSION_DIRECTIVE:'cstddef'
├── INCLUSION_DIRECTIVE:'utility'
├── MACRO_INSTANTIATION:'BOOST_ENDIAN_BIG_BYTE'
├── MACRO_INSTANTIATION:'BOOST_ENDIAN_LITTLE_BYTE'
└── NAMESPACE:'pcl'
    └── NAMESPACE:'io'
        └── NAMESPACE:'ply'
            ├── ENUM_DECL:'byte_order'
            │   ├── ENUM_CONSTANT_DECL:'big_endian_byte_order'
            │   ├── ENUM_CONSTANT_DECL:'host_byte_order'
            │   │   └── UNEXPOSED_EXPR:''
            │   │       └── DECL_REF_EXPR:'little_endian_byte_order'
            │   ├── ENUM_CONSTANT_DECL:'little_endian_byte_order'
            │   └── ENUM_CONSTANT_DECL:'network_byte_order'
            │       └── UNEXPOSED_EXPR:''
            │           └── DECL_REF_EXPR:'big_endian_byte_order'
            ├── FUNCTION_DECL:'swap_byte_order'
            │   ├── COMPOUND_STMT:''
            │   └── PARM_DECL:''
            ├── FUNCTION_DECL:'swap_byte_order'
            │   ├── COMPOUND_STMT:''
            │   └── PARM_DECL:'bytes'
            ├── FUNCTION_DECL:'swap_byte_order'
            │   ├── COMPOUND_STMT:''
            │   └── PARM_DECL:'bytes'
            ├── FUNCTION_DECL:'swap_byte_order'
            │   ├── COMPOUND_STMT:''
            │   └── PARM_DECL:'bytes'
            ├── FUNCTION_TEMPLATE:'swap_byte_order'
            │   ├── PARM_DECL:'bytes'
            │   └── TEMPLATE_NON_TYPE_PARAMETER:'N'
            └── FUNCTION_TEMPLATE:'swap_byte_order'
                ├── COMPOUND_STMT:''
                │   └── CALL_EXPR:''
                │       ├── CXX_REINTERPRET_CAST_EXPR:''
                │       │   └── UNARY_OPERATOR:''
                │       │       └── DECL_REF_EXPR:'value'
                │       └── DECL_REF_EXPR:''
                │           ├── OBJC_STRING_LITERAL:''
                │           │   └── TYPE_REF:'T'
                │           └── OVERLOADED_DECL_REF:'swap_byte_order'
                ├── PARM_DECL:'value'
                │   └── TYPE_REF:'T'
                └── TEMPLATE_TYPE_PARAMETER:'T'
