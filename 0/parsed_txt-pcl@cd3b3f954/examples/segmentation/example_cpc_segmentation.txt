TRANSLATION_UNIT:'/pcl/examples/segmentation/example_cpc_segmentation.cpp'
├── FUNCTION_DECL:'keyboardEventOccurred'
│   ├── COMPOUND_STMT:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'key'
│   │   └── IF_STMT:''
│   │       └── SWITCH_STMT:''
│   │           ├── COMPOUND_STMT:''
│   │           │   ├── BINARY_OPERATOR:''
│   │           │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
│   │           │   │   └── DECL_REF_EXPR:'normals_changed'
│   │           │   ├── BINARY_OPERATOR:''
│   │           │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
│   │           │   │   └── DECL_REF_EXPR:'normals_changed'
│   │           │   ├── BINARY_OPERATOR:''
│   │           │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
│   │           │   │   └── DECL_REF_EXPR:'normals_changed'
│   │           │   ├── BINARY_OPERATOR:''
│   │           │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
│   │           │   │   └── DECL_REF_EXPR:'line_changed'
│   │           │   ├── BINARY_OPERATOR:''
│   │           │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
│   │           │   │   └── DECL_REF_EXPR:'line_changed'
│   │           │   ├── BREAK_STMT:''
│   │           │   ├── BREAK_STMT:''
│   │           │   ├── BREAK_STMT:''
│   │           │   ├── BREAK_STMT:''
│   │           │   ├── BREAK_STMT:''
│   │           │   ├── BREAK_STMT:''
│   │           │   ├── BREAK_STMT:''
│   │           │   ├── BREAK_STMT:''
│   │           │   ├── BREAK_STMT:''
│   │           │   ├── CASE_STMT:''
│   │           │   │   ├── BINARY_OPERATOR:''
│   │           │   │   │   ├── DECL_REF_EXPR:'show_normals'
│   │           │   │   │   └── UNARY_OPERATOR:''
│   │           │   │   │       └── UNEXPOSED_EXPR:'show_normals'
│   │           │   │   │           └── DECL_REF_EXPR:'show_normals'
│   │           │   │   └── CSTYLE_CAST_EXPR:''
│   │           │   │       └── UNEXPOSED_EXPR:''
│   │           │   │           └── CHARACTER_LITERAL:''
│   │           │   ├── CASE_STMT:''
│   │           │   │   ├── BINARY_OPERATOR:''
│   │           │   │   │   ├── DECL_REF_EXPR:'show_adjacency'
│   │           │   │   │   └── UNARY_OPERATOR:''
│   │           │   │   │       └── UNEXPOSED_EXPR:'show_adjacency'
│   │           │   │   │           └── DECL_REF_EXPR:'show_adjacency'
│   │           │   │   └── CSTYLE_CAST_EXPR:''
│   │           │   │       └── UNEXPOSED_EXPR:''
│   │           │   │           └── CHARACTER_LITERAL:''
│   │           │   ├── CASE_STMT:''
│   │           │   │   ├── BINARY_OPERATOR:''
│   │           │   │   │   ├── DECL_REF_EXPR:'show_supervoxels'
│   │           │   │   │   └── UNARY_OPERATOR:''
│   │           │   │   │       └── UNEXPOSED_EXPR:'show_supervoxels'
│   │           │   │   │           └── DECL_REF_EXPR:'show_supervoxels'
│   │           │   │   └── CSTYLE_CAST_EXPR:''
│   │           │   │       └── UNEXPOSED_EXPR:''
│   │           │   │           └── CHARACTER_LITERAL:''
│   │           │   ├── CASE_STMT:''
│   │           │   │   ├── BINARY_OPERATOR:''
│   │           │   │   │   ├── DECL_REF_EXPR:'show_segmentation'
│   │           │   │   │   └── UNARY_OPERATOR:''
│   │           │   │   │       └── UNEXPOSED_EXPR:'show_segmentation'
│   │           │   │   │           └── DECL_REF_EXPR:'show_segmentation'
│   │           │   │   └── CSTYLE_CAST_EXPR:''
│   │           │   │       └── UNEXPOSED_EXPR:''
│   │           │   │           └── CHARACTER_LITERAL:''
│   │           │   ├── CASE_STMT:''
│   │           │   │   ├── COMPOUND_ASSIGNMENT_OPERATOR:''
│   │           │   │   │   ├── DECL_REF_EXPR:'normals_scale'
│   │           │   │   │   └── FLOATING_LITERAL:''
│   │           │   │   └── CSTYLE_CAST_EXPR:''
│   │           │   │       └── UNEXPOSED_EXPR:''
│   │           │   │           └── CHARACTER_LITERAL:''
│   │           │   ├── CASE_STMT:''
│   │           │   │   ├── COMPOUND_ASSIGNMENT_OPERATOR:''
│   │           │   │   │   ├── DECL_REF_EXPR:'normals_scale'
│   │           │   │   │   └── FLOATING_LITERAL:''
│   │           │   │   └── CSTYLE_CAST_EXPR:''
│   │           │   │       └── UNEXPOSED_EXPR:''
│   │           │   │           └── CHARACTER_LITERAL:''
│   │           │   ├── CASE_STMT:''
│   │           │   │   ├── COMPOUND_ASSIGNMENT_OPERATOR:''
│   │           │   │   │   ├── DECL_REF_EXPR:'line_width'
│   │           │   │   │   └── FLOATING_LITERAL:''
│   │           │   │   └── CSTYLE_CAST_EXPR:''
│   │           │   │       └── UNEXPOSED_EXPR:''
│   │           │   │           └── CHARACTER_LITERAL:''
│   │           │   ├── CASE_STMT:''
│   │           │   │   ├── CSTYLE_CAST_EXPR:''
│   │           │   │   │   └── UNEXPOSED_EXPR:''
│   │           │   │   │       └── CHARACTER_LITERAL:''
│   │           │   │   └── IF_STMT:''
│   │           │   │       ├── BINARY_OPERATOR:''
│   │           │   │       │   ├── UNEXPOSED_EXPR:''
│   │           │   │       │   │   └── INTEGER_LITERAL:''
│   │           │   │       │   └── UNEXPOSED_EXPR:'line_width'
│   │           │   │       │       └── DECL_REF_EXPR:'line_width'
│   │           │   │       └── BREAK_STMT:''
│   │           │   ├── CASE_STMT:''
│   │           │   │   ├── CASE_STMT:''
│   │           │   │   │   ├── BINARY_OPERATOR:''
│   │           │   │   │   │   ├── DECL_REF_EXPR:'show_help'
│   │           │   │   │   │   └── UNARY_OPERATOR:''
│   │           │   │   │   │       └── UNEXPOSED_EXPR:'show_help'
│   │           │   │   │   │           └── DECL_REF_EXPR:'show_help'
│   │           │   │   │   └── CSTYLE_CAST_EXPR:''
│   │           │   │   │       └── UNEXPOSED_EXPR:''
│   │           │   │   │           └── CHARACTER_LITERAL:''
│   │           │   │   └── CSTYLE_CAST_EXPR:''
│   │           │   │       └── UNEXPOSED_EXPR:''
│   │           │   │           └── CHARACTER_LITERAL:''
│   │           │   ├── COMPOUND_ASSIGNMENT_OPERATOR:''
│   │           │   │   ├── DECL_REF_EXPR:'line_width'
│   │           │   │   └── FLOATING_LITERAL:''
│   │           │   └── DEFAULT_STMT:''
│   │           │       └── BREAK_STMT:''
│   │           └── UNEXPOSED_EXPR:'key'
│   │               └── DECL_REF_EXPR:'key'
│   ├── PARM_DECL:''
│   └── PARM_DECL:'event_arg'
├── FUNCTION_DECL:'main'
│   ├── COMPOUND_STMT:''
│   │   ├── BINARY_OPERATOR:''
│   │   │   ├── DECL_REF_EXPR:'normals_scale'
│   │   │   └── UNEXPOSED_EXPR:''
│   │   │       └── BINARY_OPERATOR:''
│   │   │           ├── FLOATING_LITERAL:''
│   │   │           └── UNEXPOSED_EXPR:'seed_resolution'
│   │   │               └── UNEXPOSED_EXPR:'seed_resolution'
│   │   │                   └── DECL_REF_EXPR:'seed_resolution'
│   │   ├── BINARY_OPERATOR:''
│   │   │   ├── DECL_REF_EXPR:'textcolor'
│   │   │   └── UNEXPOSED_EXPR:''
│   │   │       └── CONDITIONAL_OPERATOR:''
│   │   │           ├── INTEGER_LITERAL:''
│   │   │           ├── INTEGER_LITERAL:''
│   │   │           └── UNEXPOSED_EXPR:'bg_white'
│   │   │               └── DECL_REF_EXPR:'bg_white'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'sv_output_specified'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'show_visualization'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'ignore_provided_normals'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'add_label_field'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'save_binary_pcd'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'outputname'
│   │   │       ├── NAMESPACE_REF:'std'
│   │   │       └── TYPE_REF:'std::string'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'has_normals'
│   │   │       └── CXX_NULL_PTR_LITERAL_EXPR:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'pcd_filename'
│   │   │       ├── NAMESPACE_REF:'std'
│   │   │       └── TYPE_REF:'std::string'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'input_pointcloud2'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'output_specified'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'voxel_resolution'
│   │   │       └── FLOATING_LITERAL:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'seed_resolution'
│   │   │       └── FLOATING_LITERAL:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'color_importance'
│   │   │       └── FLOATING_LITERAL:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'spatial_importance'
│   │   │       └── FLOATING_LITERAL:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'normal_importance'
│   │   │       └── FLOATING_LITERAL:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'use_single_cam_transform'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'use_supervoxel_refinement'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'concavity_tolerance_threshold'
│   │   │       └── UNEXPOSED_EXPR:''
│   │   │           └── INTEGER_LITERAL:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'smoothness_threshold'
│   │   │       └── UNEXPOSED_EXPR:''
│   │   │           └── FLOATING_LITERAL:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'min_segment_size'
│   │   │       ├── NAMESPACE_REF:'std'
│   │   │       ├── TYPE_REF:'uint32_t'
│   │   │       └── UNEXPOSED_EXPR:''
│   │   │           └── INTEGER_LITERAL:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'use_extended_convexity'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'use_sanity_criterion'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'min_cut_score'
│   │   │       └── UNEXPOSED_EXPR:''
│   │   │           └── FLOATING_LITERAL:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'max_cuts'
│   │   │       └── UNEXPOSED_EXPR:''
│   │   │           └── INTEGER_LITERAL:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'cutting_min_segments'
│   │   │       └── UNEXPOSED_EXPR:''
│   │   │           └── INTEGER_LITERAL:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'use_local_constrain'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'use_directed_cutting'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'use_clean_cutting'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'ransac_iterations'
│   │   │       └── UNEXPOSED_EXPR:''
│   │   │           └── INTEGER_LITERAL:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'k_factor'
│   │   │       └── UNEXPOSED_EXPR:''
│   │   │           └── INTEGER_LITERAL:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'temp'
│   │   │       ├── NAMESPACE_REF:'std'
│   │   │       └── TYPE_REF:'std::stringstream'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'sv_adjacency_list'
│   │   ├── IF_STMT:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── INTEGER_LITERAL:''
│   │   │   │   └── UNEXPOSED_EXPR:'argc'
│   │   │   │       └── DECL_REF_EXPR:'argc'
│   │   │   └── COMPOUND_STMT:''
│   │   │       └── RETURN_STMT:''
│   │   │           └── PAREN_EXPR:''
│   │   │               └── INTEGER_LITERAL:''
│   │   ├── IF_STMT:''
│   │   │   └── COMPOUND_STMT:''
│   │   │       └── RETURN_STMT:''
│   │   │           └── PAREN_EXPR:''
│   │   │               └── INTEGER_LITERAL:''
│   │   ├── IF_STMT:''
│   │   │   ├── COMPOUND_STMT:''
│   │   │   │   └── IF_STMT:''
│   │   │   │       ├── COMPOUND_STMT:''
│   │   │   │       │   ├── BINARY_OPERATOR:''
│   │   │   │       │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
│   │   │   │       │   │   └── DECL_REF_EXPR:'has_normals'
│   │   │   │       │   └── IF_STMT:''
│   │   │   │       │       └── COMPOUND_STMT:''
│   │   │   │       └── NULL_STMT:''
│   │   │   └── UNARY_OPERATOR:''
│   │   │       └── UNEXPOSED_EXPR:'ignore_provided_normals'
│   │   │           └── DECL_REF_EXPR:'ignore_provided_normals'
│   │   ├── IF_STMT:''
│   │   │   ├── COMPOUND_STMT:''
│   │   │   │   └── IF_STMT:''
│   │   │   │       └── COMPOUND_STMT:''
│   │   │   │           ├── BINARY_OPERATOR:''
│   │   │   │           │   ├── DECL_REF_EXPR:'outputname'
│   │   │   │           │   └── UNEXPOSED_EXPR:'pcd_filename'
│   │   │   │           │       └── DECL_REF_EXPR:'pcd_filename'
│   │   │   │           ├── DECL_STMT:''
│   │   │   │           │   └── VAR_DECL:'sep'
│   │   │   │           │       ├── NAMESPACE_REF:'std'
│   │   │   │           │       └── TYPE_REF:'std::size_t'
│   │   │   │           └── DECL_STMT:''
│   │   │   │               └── VAR_DECL:'dot'
│   │   │   │                   ├── NAMESPACE_REF:'std'
│   │   │   │                   └── TYPE_REF:'std::size_t'
│   │   │   └── UNEXPOSED_EXPR:'output_specified'
│   │   │       └── DECL_REF_EXPR:'output_specified'
│   │   ├── IF_STMT:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── DECL_REF_EXPR:'k_factor'
│   │   │   │   └── UNEXPOSED_EXPR:''
│   │   │   │       └── INTEGER_LITERAL:''
│   │   │   └── UNEXPOSED_EXPR:'use_extended_convexity'
│   │   │       └── DECL_REF_EXPR:'use_extended_convexity'
│   │   ├── IF_STMT:''
│   │   │   ├── COMPOUND_STMT:''
│   │   │   │   ├── DECL_STMT:''
│   │   │   │   │   └── VAR_DECL:'a'
│   │   │   │   └── IF_STMT:''
│   │   │   │       └── COMPOUND_STMT:''
│   │   │   │           └── IF_STMT:''
│   │   │   │               └── COMPOUND_STMT:''
│   │   │   └── COMPOUND_STMT:''
│   │   │       └── BINARY_OPERATOR:''
│   │   │           ├── DECL_REF_EXPR:'max_cuts'
│   │   │           └── UNEXPOSED_EXPR:''
│   │   │               └── INTEGER_LITERAL:''
│   │   ├── IF_STMT:''
│   │   │   ├── COMPOUND_STMT:''
│   │   │   └── UNEXPOSED_EXPR:'use_supervoxel_refinement'
│   │   │       └── DECL_REF_EXPR:'use_supervoxel_refinement'
│   │   ├── IF_STMT:''
│   │   │   ├── COMPOUND_STMT:''
│   │   │   │   └── IF_STMT:''
│   │   │   │       ├── COMPOUND_STMT:''
│   │   │   │       │   ├── IF_STMT:''
│   │   │   │       │   │   ├── COMPOUND_STMT:''
│   │   │   │       │   │   │   └── DECL_STMT:''
│   │   │   │       │   │   │       └── VAR_DECL:'output_label_cloud2'
│   │   │   │       │   │   ├── NULL_STMT:''
│   │   │   │       │   │   └── UNEXPOSED_EXPR:'add_label_field'
│   │   │   │       │   │       └── DECL_REF_EXPR:'add_label_field'
│   │   │   │       │   └── IF_STMT:''
│   │   │   │       │       ├── COMPOUND_STMT:''
│   │   │   │       │       └── UNEXPOSED_EXPR:'sv_output_specified'
│   │   │   │       │           └── DECL_REF_EXPR:'sv_output_specified'
│   │   │   │       └── UNEXPOSED_EXPR:'output_specified'
│   │   │   │           └── DECL_REF_EXPR:'output_specified'
│   │   │   └── COMPOUND_STMT:''
│   │   ├── IF_STMT:''
│   │   │   ├── COMPOUND_STMT:''
│   │   │   │   ├── DECL_STMT:''
│   │   │   │   │   └── VAR_DECL:'black_color'
│   │   │   │   │       ├── INIT_LIST_EXPR:''
│   │   │   │   │       │   ├── INTEGER_LITERAL:''
│   │   │   │   │       │   ├── INTEGER_LITERAL:''
│   │   │   │   │       │   └── INTEGER_LITERAL:''
│   │   │   │   │       └── INTEGER_LITERAL:''
│   │   │   │   ├── DECL_STMT:''
│   │   │   │   │   └── VAR_DECL:'white_color'
│   │   │   │   │       ├── INIT_LIST_EXPR:''
│   │   │   │   │       │   ├── INTEGER_LITERAL:''
│   │   │   │   │       │   ├── INTEGER_LITERAL:''
│   │   │   │   │       │   └── INTEGER_LITERAL:''
│   │   │   │   │       └── INTEGER_LITERAL:''
│   │   │   │   ├── DECL_STMT:''
│   │   │   │   │   └── VAR_DECL:'concave_color'
│   │   │   │   │       ├── INIT_LIST_EXPR:''
│   │   │   │   │       │   ├── INTEGER_LITERAL:''
│   │   │   │   │       │   ├── INTEGER_LITERAL:''
│   │   │   │   │       │   └── INTEGER_LITERAL:''
│   │   │   │   │       └── INTEGER_LITERAL:''
│   │   │   │   ├── DECL_STMT:''
│   │   │   │   │   └── VAR_DECL:'cut_color'
│   │   │   │   │       ├── INIT_LIST_EXPR:''
│   │   │   │   │       │   ├── INTEGER_LITERAL:''
│   │   │   │   │       │   ├── INTEGER_LITERAL:''
│   │   │   │   │       │   └── INTEGER_LITERAL:''
│   │   │   │   │       └── INTEGER_LITERAL:''
│   │   │   │   ├── DECL_STMT:''
│   │   │   │   │   └── VAR_DECL:'convex_color'
│   │   │   │   │       └── UNEXPOSED_EXPR:''
│   │   │   │   │           └── CONDITIONAL_OPERATOR:''
│   │   │   │   │               ├── DECL_REF_EXPR:'black_color'
│   │   │   │   │               ├── DECL_REF_EXPR:'white_color'
│   │   │   │   │               └── UNEXPOSED_EXPR:'bg_white'
│   │   │   │   │                   └── DECL_REF_EXPR:'bg_white'
│   │   │   │   ├── DECL_STMT:''
│   │   │   │   │   └── VAR_DECL:'color'
│   │   │   │   │       └── UNEXPOSED_EXPR:''
│   │   │   │   │           └── CXX_THIS_EXPR:''
│   │   │   │   ├── DECL_STMT:''
│   │   │   │   │   └── VAR_DECL:'vertex_iterator_range'
│   │   │   │   ├── DECL_STMT:''
│   │   │   │   │   └── VAR_DECL:'points'
│   │   │   │   ├── DECL_STMT:''
│   │   │   │   │   └── VAR_DECL:'cells'
│   │   │   │   ├── DECL_STMT:''
│   │   │   │   │   └── VAR_DECL:'colors'
│   │   │   │   ├── DECL_STMT:''
│   │   │   │   │   └── VAR_DECL:'polyData'
│   │   │   │   └── DECL_STMT:''
│   │   │   │       └── VAR_DECL:'bg_color'
│   │   │   │           └── UNEXPOSED_EXPR:''
│   │   │   │               └── CONDITIONAL_OPERATOR:''
│   │   │   │                   ├── INTEGER_LITERAL:''
│   │   │   │                   ├── INTEGER_LITERAL:''
│   │   │   │                   └── UNEXPOSED_EXPR:'bg_white'
│   │   │   │                       └── DECL_REF_EXPR:'bg_white'
│   │   │   └── UNEXPOSED_EXPR:'show_visualization'
│   │   │       └── DECL_REF_EXPR:'show_visualization'
│   │   └── RETURN_STMT:''
│   │       └── PAREN_EXPR:''
│   │           └── INTEGER_LITERAL:''
│   ├── PARM_DECL:'argc'
│   └── PARM_DECL:'argv'
├── FUNCTION_DECL:'printText'
│   └── PARM_DECL:'viewer_arg'
├── FUNCTION_DECL:'printText'
│   ├── COMPOUND_STMT:''
│   │   ├── COMPOUND_ASSIGNMENT_OPERATOR:''
│   │   │   ├── DECL_REF_EXPR:'top'
│   │   │   └── INTEGER_LITERAL:''
│   │   ├── COMPOUND_ASSIGNMENT_OPERATOR:''
│   │   │   ├── DECL_REF_EXPR:'top'
│   │   │   └── INTEGER_LITERAL:''
│   │   ├── COMPOUND_ASSIGNMENT_OPERATOR:''
│   │   │   ├── DECL_REF_EXPR:'top'
│   │   │   └── INTEGER_LITERAL:''
│   │   ├── COMPOUND_ASSIGNMENT_OPERATOR:''
│   │   │   ├── DECL_REF_EXPR:'top'
│   │   │   └── INTEGER_LITERAL:''
│   │   ├── COMPOUND_ASSIGNMENT_OPERATOR:''
│   │   │   ├── DECL_REF_EXPR:'top'
│   │   │   └── INTEGER_LITERAL:''
│   │   ├── COMPOUND_ASSIGNMENT_OPERATOR:''
│   │   │   ├── DECL_REF_EXPR:'top'
│   │   │   └── INTEGER_LITERAL:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'on_str'
│   │   │       ├── NAMESPACE_REF:'std'
│   │   │       └── TYPE_REF:'std::string'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'off_str'
│   │   │       ├── NAMESPACE_REF:'std'
│   │   │       └── TYPE_REF:'std::string'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'top'
│   │   │       └── INTEGER_LITERAL:''
│   │   └── DECL_STMT:''
│   │       └── VAR_DECL:'temp'
│   │           ├── NAMESPACE_REF:'std'
│   │           └── TYPE_REF:'std::string'
│   └── PARM_DECL:'viewer_arg'
├── FUNCTION_DECL:'removeText'
│   └── PARM_DECL:'viewer_arg'
├── FUNCTION_DECL:'removeText'
│   ├── COMPOUND_STMT:''
│   └── PARM_DECL:'viewer_arg'
├── INCLUSION_DIRECTIVE:'boost/format.hpp'
├── INCLUSION_DIRECTIVE:'pcl/console/parse.h'
├── INCLUSION_DIRECTIVE:'pcl/io/pcd_io.h'
├── INCLUSION_DIRECTIVE:'pcl/segmentation/cpc_segmentation.h'
├── INCLUSION_DIRECTIVE:'pcl/visualization/pcl_visualizer.h'
├── INCLUSION_DIRECTIVE:'thread'
├── INCLUSION_DIRECTIVE:'vtkPolyLine.h'
├── USING_DIRECTIVE:''
│   ├── NAMESPACE_REF:'chrono_literals'
│   └── NAMESPACE_REF:'std'
├── VAR_DECL:'bg_white'
│   └── CXX_NULL_PTR_LITERAL_EXPR:''
├── VAR_DECL:'line_changed'
│   └── CXX_NULL_PTR_LITERAL_EXPR:''
├── VAR_DECL:'line_width'
│   └── FLOATING_LITERAL:''
├── VAR_DECL:'normals_changed'
│   └── CXX_NULL_PTR_LITERAL_EXPR:''
├── VAR_DECL:'normals_scale'
├── VAR_DECL:'show_adjacency'
│   └── CXX_NULL_PTR_LITERAL_EXPR:''
├── VAR_DECL:'show_help'
│   └── CXX_NULL_PTR_LITERAL_EXPR:''
├── VAR_DECL:'show_normals'
│   └── CXX_NULL_PTR_LITERAL_EXPR:''
├── VAR_DECL:'show_segmentation'
│   └── CXX_NULL_PTR_LITERAL_EXPR:''
├── VAR_DECL:'show_supervoxels'
│   └── CXX_NULL_PTR_LITERAL_EXPR:''
└── VAR_DECL:'textcolor'
