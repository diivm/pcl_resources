TRANSLATION_UNIT:'/pcl/test/registration/test_registration.cpp'
├── CLASS_TEMPLATE:'RegistrationWrapper'
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_METHOD:'computeTransformation'
│   │   ├── COMPOUND_STMT:''
│   │   ├── PARM_DECL:''
│   │   └── PARM_DECL:''
│   ├── CXX_METHOD:'findFeatureCorrespondencesTest'
│   │   ├── COMPOUND_STMT:''
│   │   ├── PARM_DECL:'correspondence_indices'
│   │   └── PARM_DECL:'index'
│   ├── CXX_METHOD:'hasValidFeaturesTest'
│   │   └── COMPOUND_STMT:''
│   │       └── RETURN_STMT:''
│   │           └── PAREN_EXPR:''
│   │               └── CALL_EXPR:''
│   │                   └── MEMBER_REF_EXPR:''
│   │                       └── CXX_THROW_EXPR:''
│   ├── TEMPLATE_TYPE_PARAMETER:'PointSource'
│   └── TEMPLATE_TYPE_PARAMETER:'PointTarget'
├── FUNCTION_DECL:'TEST'
│   └── COMPOUND_STMT:''
│       ├── DECL_STMT:''
│       │   └── VAR_DECL:'reg'
│       ├── DECL_STMT:''
│       │   └── VAR_DECL:'feature0'
│       ├── DECL_STMT:''
│       │   └── VAR_DECL:'tree'
│       └── FOR_STMT:''
│           ├── BINARY_OPERATOR:''
│           │   ├── FLOATING_LITERAL:''
│           │   └── UNEXPOSED_EXPR:'x'
│           │       └── DECL_REF_EXPR:'x'
│           ├── COMPOUND_ASSIGNMENT_OPERATOR:''
│           │   ├── DECL_REF_EXPR:'x'
│           │   └── FLOATING_LITERAL:''
│           ├── COMPOUND_STMT:''
│           │   └── FOR_STMT:''
│           │       ├── BINARY_OPERATOR:''
│           │       │   ├── FLOATING_LITERAL:''
│           │       │   └── UNEXPOSED_EXPR:'y'
│           │       │       └── DECL_REF_EXPR:'y'
│           │       ├── COMPOUND_ASSIGNMENT_OPERATOR:''
│           │       │   ├── DECL_REF_EXPR:'y'
│           │       │   └── FLOATING_LITERAL:''
│           │       ├── COMPOUND_STMT:''
│           │       │   └── DECL_STMT:''
│           │       │       └── VAR_DECL:'f'
│           │       └── DECL_STMT:''
│           │           └── VAR_DECL:'y'
│           │               └── UNARY_OPERATOR:''
│           │                   └── FLOATING_LITERAL:''
│           └── DECL_STMT:''
│               └── VAR_DECL:'x'
│                   └── UNARY_OPERATOR:''
│                       └── FLOATING_LITERAL:''
├── FUNCTION_DECL:'TEST'
│   └── COMPOUND_STMT:''
├── FUNCTION_DECL:'TEST'
│   └── COMPOUND_STMT:''
│       ├── DECL_STMT:''
│       │   └── VAR_DECL:'reg'
│       └── DECL_STMT:''
│           └── VAR_DECL:'transformation'
├── FUNCTION_DECL:'TEST'
│   └── COMPOUND_STMT:''
│       ├── DECL_STMT:''
│       │   └── VAR_DECL:'reg_float'
│       └── DECL_STMT:''
│           └── VAR_DECL:'reg_double'
├── FUNCTION_DECL:'TEST'
│   └── COMPOUND_STMT:''
│       ├── DECL_STMT:''
│       │   └── VAR_DECL:'reg'
│       └── DECL_STMT:''
│           └── VAR_DECL:'ntransforms'
├── FUNCTION_DECL:'TEST'
│   └── COMPOUND_STMT:''
│       ├── DECL_STMT:''
│       │   └── VAR_DECL:'reg'
│       └── DECL_STMT:''
│           └── VAR_DECL:'ntransforms'
├── FUNCTION_DECL:'TEST'
│   └── COMPOUND_STMT:''
│       ├── DECL_STMT:''
│       │   └── VAR_DECL:'output'
│       ├── DECL_STMT:''
│       │   └── VAR_DECL:'reg'
│       └── FOR_STMT:''
│           ├── BINARY_OPERATOR:''
│           │   ├── INTEGER_LITERAL:''
│           │   └── UNEXPOSED_EXPR:'iter'
│           │       └── DECL_REF_EXPR:'iter'
│           ├── COMPOUND_STMT:''
│           │   ├── DECL_STMT:''
│           │   │   └── VAR_DECL:'force_cache'
│           │   │       └── CXX_STATIC_CAST_EXPR:''
│           │   │           └── UNEXPOSED_EXPR:''
│           │   │               └── BINARY_OPERATOR:''
│           │   │                   ├── INTEGER_LITERAL:''
│           │   │                   └── UNEXPOSED_EXPR:'iter'
│           │   │                       └── DECL_REF_EXPR:'iter'
│           │   └── DECL_STMT:''
│           │       └── VAR_DECL:'force_cache_reciprocal'
│           │           └── CXX_STATIC_CAST_EXPR:''
│           │               └── UNEXPOSED_EXPR:''
│           │                   └── BINARY_OPERATOR:''
│           │                       ├── INTEGER_LITERAL:''
│           │                       └── UNEXPOSED_EXPR:'iter'
│           │                           └── DECL_REF_EXPR:'iter'
│           ├── DECL_STMT:''
│           │   └── VAR_DECL:'iter'
│           │       └── INTEGER_LITERAL:''
│           └── UNARY_OPERATOR:''
│               └── DECL_REF_EXPR:'iter'
├── FUNCTION_DECL:'TEST'
│   └── COMPOUND_STMT:''
│       ├── DECL_STMT:''
│       │   └── VAR_DECL:'output'
│       └── DECL_STMT:''
│           └── VAR_DECL:'norm_est'
├── FUNCTION_DECL:'sampleRandomTransform'
│   ├── COMPOUND_STMT:''
│   │   └── DECL_STMT:''
│   │       └── VAR_DECL:'angle'
│   ├── PARM_DECL:'max_angle'
│   ├── PARM_DECL:'max_trans'
│   └── PARM_DECL:'trans'
├── INCLUSION_DIRECTIVE:'pcl/features/normal_3d.h'
├── INCLUSION_DIRECTIVE:'pcl/features/ppf.h'
├── INCLUSION_DIRECTIVE:'pcl/filters/voxel_grid.h'
├── INCLUSION_DIRECTIVE:'pcl/io/pcd_io.h'
├── INCLUSION_DIRECTIVE:'pcl/kdtree/impl/kdtree_flann.hpp'
├── INCLUSION_DIRECTIVE:'pcl/point_types.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/correspondence_estimation_normal_shooting.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/correspondence_rejection_median_distance.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/correspondence_rejection_sample_consensus.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/correspondence_rejection_surface_normal.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/gicp.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/gicp6d.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/icp.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/icp_nl.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/joint_icp.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/ppf_registration.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/pyramid_feature_matching.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/registration.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/transformation_estimation_point_to_plane.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/transformation_validation_euclidean.h'
├── INCLUSION_DIRECTIVE:'pcl/test/gtest.h'
├── VAR_DECL:'cloud_source'
└── VAR_DECL:'cloud_with_color'
