TRANSLATION_UNIT:'/pcl/doc/tutorials/content/sources/template_alignment/template_alignment.cpp'
├── CLASS_DECL:'FeatureCloud'
│   ├── CONSTRUCTOR:'FeatureCloud'
│   │   ├── COMPOUND_STMT:''
│   │   ├── FLOATING_LITERAL:''
│   │   ├── FLOATING_LITERAL:''
│   │   ├── MEMBER_REF:'feature_radius_'
│   │   └── MEMBER_REF:'normal_radius_'
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_METHOD:'computeLocalFeatures'
│   │   └── COMPOUND_STMT:''
│   ├── CXX_METHOD:'computeSurfaceNormals'
│   │   └── COMPOUND_STMT:''
│   ├── CXX_METHOD:'getLocalFeatures'
│   │   └── COMPOUND_STMT:''
│   ├── CXX_METHOD:'getPointCloud'
│   │   └── COMPOUND_STMT:''
│   ├── CXX_METHOD:'getSurfaceNormals'
│   │   └── COMPOUND_STMT:''
│   ├── CXX_METHOD:'loadInputCloud'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── CALL_EXPR:'processInput'
│   │   │       └── MEMBER_REF_EXPR:'processInput'
│   │   └── PARM_DECL:'pcd_file'
│   │       ├── NAMESPACE_REF:'std'
│   │       └── TYPE_REF:'std::string'
│   ├── CXX_METHOD:'processInput'
│   │   └── COMPOUND_STMT:''
│   │       ├── CALL_EXPR:'computeLocalFeatures'
│   │       │   └── MEMBER_REF_EXPR:'computeLocalFeatures'
│   │       └── CALL_EXPR:'computeSurfaceNormals'
│   │           └── MEMBER_REF_EXPR:'computeSurfaceNormals'
│   ├── CXX_METHOD:'setInputCloud'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── CALL_EXPR:'processInput'
│   │   │       └── MEMBER_REF_EXPR:'processInput'
│   │   └── PARM_DECL:'xyz'
│   ├── DESTRUCTOR:'~FeatureCloud'
│   │   └── COMPOUND_STMT:''
│   ├── FIELD_DECL:'feature_radius_'
│   ├── FIELD_DECL:'features_'
│   ├── FIELD_DECL:'normal_radius_'
│   ├── FIELD_DECL:'normals_'
│   ├── FIELD_DECL:'search_method_xyz_'
│   ├── FIELD_DECL:'xyz_'
│   ├── TYPEDEF_DECL:'LocalFeatures'
│   ├── TYPEDEF_DECL:'PointCloud'
│   ├── TYPEDEF_DECL:'SearchMethod'
│   └── TYPEDEF_DECL:'SurfaceNormals'
├── CLASS_DECL:'TemplateAlignment'
│   ├── CONSTRUCTOR:'TemplateAlignment'
│   │   ├── BINARY_OPERATOR:''
│   │   │   ├── FLOATING_LITERAL:''
│   │   │   └── FLOATING_LITERAL:''
│   │   ├── COMPOUND_STMT:''
│   │   ├── FLOATING_LITERAL:''
│   │   ├── INTEGER_LITERAL:''
│   │   ├── MEMBER_REF:'max_correspondence_distance_'
│   │   ├── MEMBER_REF:'min_sample_distance_'
│   │   └── MEMBER_REF:'nr_iterations_'
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_METHOD:'addTemplateCloud'
│   │   ├── COMPOUND_STMT:''
│   │   └── PARM_DECL:'template_cloud'
│   │       └── TYPE_REF:'class FeatureCloud'
│   ├── CXX_METHOD:'align'
│   │   ├── COMPOUND_STMT:''
│   │   ├── PARM_DECL:'result'
│   │   │   ├── TYPE_REF:'class TemplateAlignment'
│   │   │   └── TYPE_REF:'struct TemplateAlignment::Result'
│   │   └── PARM_DECL:'template_cloud'
│   │       └── TYPE_REF:'class FeatureCloud'
│   ├── CXX_METHOD:'alignAll'
│   │   ├── COMPOUND_STMT:''
│   │   └── PARM_DECL:'results'
│   │       ├── NAMESPACE_REF:'Eigen'
│   │       ├── NAMESPACE_REF:'std'
│   │       ├── TEMPLATE_REF:'aligned_allocator'
│   │       ├── TEMPLATE_REF:'vector'
│   │       ├── TYPE_REF:'class TemplateAlignment'
│   │       ├── TYPE_REF:'struct TemplateAlignment::Result'
│   │       └── TYPE_REF:'struct TemplateAlignment::Result'
│   ├── CXX_METHOD:'findBestAlignment'
│   │   ├── COMPOUND_STMT:''
│   │   │   ├── DECL_STMT:''
│   │   │   │   └── VAR_DECL:'results'
│   │   │   │       ├── NAMESPACE_REF:'Eigen'
│   │   │   │       ├── NAMESPACE_REF:'std'
│   │   │   │       ├── TEMPLATE_REF:'aligned_allocator'
│   │   │   │       ├── TEMPLATE_REF:'vector'
│   │   │   │       ├── TYPE_REF:'struct TemplateAlignment::Result'
│   │   │   │       └── TYPE_REF:'struct TemplateAlignment::Result'
│   │   │   ├── DECL_STMT:''
│   │   │   │   └── VAR_DECL:'lowest_score'
│   │   │   │       └── CALL_EXPR:'infinity'
│   │   │   │           └── UNEXPOSED_EXPR:'infinity'
│   │   │   │               └── DECL_REF_EXPR:'infinity'
│   │   │   │                   ├── NAMESPACE_REF:'std'
│   │   │   │                   └── TEMPLATE_REF:'numeric_limits'
│   │   │   ├── DECL_STMT:''
│   │   │   │   └── VAR_DECL:'best_template'
│   │   │   │       └── INTEGER_LITERAL:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── UNEXPOSED_EXPR:''
│   │   │           └── PAREN_EXPR:''
│   │   │               └── DECL_REF_EXPR:'best_template'
│   │   └── PARM_DECL:'result'
│   │       ├── TYPE_REF:'class TemplateAlignment'
│   │       └── TYPE_REF:'struct TemplateAlignment::Result'
│   ├── CXX_METHOD:'setTargetCloud'
│   │   ├── COMPOUND_STMT:''
│   │   └── PARM_DECL:'target_cloud'
│   │       └── TYPE_REF:'class FeatureCloud'
│   ├── DESTRUCTOR:'~TemplateAlignment'
│   │   └── COMPOUND_STMT:''
│   ├── FIELD_DECL:'max_correspondence_distance_'
│   ├── FIELD_DECL:'min_sample_distance_'
│   ├── FIELD_DECL:'nr_iterations_'
│   ├── FIELD_DECL:'sac_ia_'
│   ├── FIELD_DECL:'target_'
│   │   └── TYPE_REF:'class FeatureCloud'
│   ├── FIELD_DECL:'templates_'
│   └── STRUCT_DECL:'Result'
│       ├── FIELD_DECL:'final_transformation'
│       │   ├── NAMESPACE_REF:'Eigen'
│       │   └── TYPE_REF:'Eigen::Matrix4f'
│       └── FIELD_DECL:'fitness_score'
├── FUNCTION_DECL:'main'
│   ├── COMPOUND_STMT:''
│   │   ├── CALL_EXPR:'printf'
│   │   │   ├── UNEXPOSED_EXPR:''
│   │   │   │   └── STRING_LITERAL:'"Best fitness score: %f\n"'
│   │   │   ├── UNEXPOSED_EXPR:'fitness_score'
│   │   │   │   └── UNEXPOSED_EXPR:'fitness_score'
│   │   │   │       └── MEMBER_REF_EXPR:'fitness_score'
│   │   │   │           └── DECL_REF_EXPR:'best_alignment'
│   │   │   └── UNEXPOSED_EXPR:'printf'
│   │   │       └── DECL_REF_EXPR:'printf'
│   │   ├── CALL_EXPR:'printf'
│   │   │   ├── UNEXPOSED_EXPR:''
│   │   │   │   └── STRING_LITERAL:'"\n"'
│   │   │   └── UNEXPOSED_EXPR:'printf'
│   │   │       └── DECL_REF_EXPR:'printf'
│   │   ├── CALL_EXPR:'printf'
│   │   │   ├── UNEXPOSED_EXPR:''
│   │   │   │   └── STRING_LITERAL:'"\n"'
│   │   │   └── UNEXPOSED_EXPR:'printf'
│   │   │       └── DECL_REF_EXPR:'printf'
│   │   ├── CALL_EXPR:'setTargetCloud'
│   │   │   ├── DECL_REF_EXPR:'target_cloud'
│   │   │   └── MEMBER_REF_EXPR:'setTargetCloud'
│   │   │       └── DECL_REF_EXPR:'template_align'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'object_templates'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'input_stream'
│   │   │       ├── NAMESPACE_REF:'std'
│   │   │       └── TYPE_REF:'std::ifstream'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'pcd_filename'
│   │   │       ├── NAMESPACE_REF:'std'
│   │   │       └── TYPE_REF:'std::string'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'depth_limit'
│   │   │       └── UNEXPOSED_EXPR:''
│   │   │           └── FLOATING_LITERAL:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'voxel_grid_size'
│   │   │       └── FLOATING_LITERAL:''
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'target_cloud'
│   │   │       ├── CALL_EXPR:'FeatureCloud'
│   │   │       └── TYPE_REF:'class FeatureCloud'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'template_align'
│   │   │       ├── CALL_EXPR:'TemplateAlignment'
│   │   │       └── TYPE_REF:'class TemplateAlignment'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'best_alignment'
│   │   │       ├── CALL_EXPR:'Result'
│   │   │       ├── TYPE_REF:'class TemplateAlignment'
│   │   │       └── TYPE_REF:'struct TemplateAlignment::Result'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'best_index'
│   │   │       └── CALL_EXPR:'findBestAlignment'
│   │   │           ├── DECL_REF_EXPR:'best_alignment'
│   │   │           └── MEMBER_REF_EXPR:'findBestAlignment'
│   │   │               └── DECL_REF_EXPR:'template_align'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'best_template'
│   │   │       └── TYPE_REF:'class FeatureCloud'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'rotation'
│   │   │       ├── NAMESPACE_REF:'Eigen'
│   │   │       └── TYPE_REF:'Eigen::Matrix3f'
│   │   ├── DECL_STMT:''
│   │   │   └── VAR_DECL:'translation'
│   │   │       ├── NAMESPACE_REF:'Eigen'
│   │   │       └── TYPE_REF:'Eigen::Vector3f'
│   │   ├── IF_STMT:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── INTEGER_LITERAL:''
│   │   │   │   └── UNEXPOSED_EXPR:'argc'
│   │   │   │       └── DECL_REF_EXPR:'argc'
│   │   │   └── COMPOUND_STMT:''
│   │   │       ├── CALL_EXPR:'printf'
│   │   │       │   ├── UNEXPOSED_EXPR:''
│   │   │       │   │   └── STRING_LITERAL:'"No target PCD file given!\n"'
│   │   │       │   └── UNEXPOSED_EXPR:'printf'
│   │   │       │       └── DECL_REF_EXPR:'printf'
│   │   │       └── RETURN_STMT:''
│   │   │           └── PAREN_EXPR:''
│   │   │               └── UNARY_OPERATOR:''
│   │   │                   └── INTEGER_LITERAL:''
│   │   └── RETURN_STMT:''
│   │       └── PAREN_EXPR:''
│   │           └── INTEGER_LITERAL:''
│   ├── PARM_DECL:'argc'
│   └── PARM_DECL:'argv'
├── INCLUSION_DIRECTIVE:'Eigen/Core'
├── INCLUSION_DIRECTIVE:'fstream'
├── INCLUSION_DIRECTIVE:'limits'
├── INCLUSION_DIRECTIVE:'pcl/features/fpfh.h'
├── INCLUSION_DIRECTIVE:'pcl/features/normal_3d.h'
├── INCLUSION_DIRECTIVE:'pcl/filters/passthrough.h'
├── INCLUSION_DIRECTIVE:'pcl/filters/voxel_grid.h'
├── INCLUSION_DIRECTIVE:'pcl/io/pcd_io.h'
├── INCLUSION_DIRECTIVE:'pcl/kdtree/kdtree_flann.h'
├── INCLUSION_DIRECTIVE:'pcl/memory.h'
├── INCLUSION_DIRECTIVE:'pcl/pcl_macros.h'
├── INCLUSION_DIRECTIVE:'pcl/point_cloud.h'
├── INCLUSION_DIRECTIVE:'pcl/point_types.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/ia_ransac.h'
└── INCLUSION_DIRECTIVE:'vector'
