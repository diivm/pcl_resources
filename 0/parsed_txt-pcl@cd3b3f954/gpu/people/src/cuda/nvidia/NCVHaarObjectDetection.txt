TRANSLATION_UNIT:'/pcl/gpu/people/src/cuda/nvidia/NCVHaarObjectDetection.hpp'
├── ENUM_DECL:''
│   ├── ENUM_CONSTANT_DECL:'NCVPipeObjDet_Default'
│   │   └── UNEXPOSED_EXPR:''
│   │       └── INTEGER_LITERAL:''
│   ├── ENUM_CONSTANT_DECL:'NCVPipeObjDet_FindLargestObject'
│   │   └── UNEXPOSED_EXPR:''
│   │       └── INTEGER_LITERAL:''
│   ├── ENUM_CONSTANT_DECL:'NCVPipeObjDet_UseFairImageScaling'
│   │   └── UNEXPOSED_EXPR:''
│   │       └── INTEGER_LITERAL:''
│   └── ENUM_CONSTANT_DECL:'NCVPipeObjDet_VisualizeInPlace'
│       └── UNEXPOSED_EXPR:''
│           └── INTEGER_LITERAL:''
├── FUNCTION_DECL:'ncvApplyHaarClassifierCascade_device'
│   ├── PARM_DECL:'anchorsRoi'
│   │   └── TYPE_REF:'struct NcvSize32u'
│   ├── PARM_DECL:'bMaskElements'
│   │   └── TYPE_REF:'NcvBool'
│   ├── PARM_DECL:'cpuAllocator'
│   │   └── TYPE_REF:'class INCVMemAllocator'
│   ├── PARM_DECL:'cuStream'
│   ├── PARM_DECL:'d_HaarFeatures'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarFeature64'
│   ├── PARM_DECL:'d_HaarNodes'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarClassifierNode128'
│   ├── PARM_DECL:'d_HaarStages'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarStage64'
│   ├── PARM_DECL:'d_integralImage'
│   │   ├── TEMPLATE_REF:'NCVMatrix'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'d_pixelMask'
│   │   ├── TEMPLATE_REF:'NCVMatrixAlloc'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'d_weights'
│   │   ├── TEMPLATE_REF:'NCVMatrix'
│   │   └── TYPE_REF:'Ncv32f'
│   ├── PARM_DECL:'devProp'
│   ├── PARM_DECL:'gpuAllocator'
│   │   └── TYPE_REF:'class INCVMemAllocator'
│   ├── PARM_DECL:'h_HaarStages'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarStage64'
│   ├── PARM_DECL:'haar'
│   │   └── TYPE_REF:'struct HaarClassifierCascadeDescriptor'
│   ├── PARM_DECL:'numDetections'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'pixelStep'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'scaleArea'
│   │   └── TYPE_REF:'Ncv32f'
│   └── TYPE_REF:'NCVStatus'
├── FUNCTION_DECL:'ncvApplyHaarClassifierCascade_host'
│   ├── PARM_DECL:'anchorsRoi'
│   │   └── TYPE_REF:'struct NcvSize32u'
│   ├── PARM_DECL:'bMaskElements'
│   │   └── TYPE_REF:'NcvBool'
│   ├── PARM_DECL:'h_HaarFeatures'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarFeature64'
│   ├── PARM_DECL:'h_HaarNodes'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarClassifierNode128'
│   ├── PARM_DECL:'h_HaarStages'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarStage64'
│   ├── PARM_DECL:'h_integralImage'
│   │   ├── TEMPLATE_REF:'NCVMatrix'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'h_pixelMask'
│   │   ├── TEMPLATE_REF:'NCVMatrixAlloc'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'h_weights'
│   │   ├── TEMPLATE_REF:'NCVMatrix'
│   │   └── TYPE_REF:'Ncv32f'
│   ├── PARM_DECL:'haar'
│   │   └── TYPE_REF:'struct HaarClassifierCascadeDescriptor'
│   ├── PARM_DECL:'numDetections'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'pixelStep'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'scaleArea'
│   │   └── TYPE_REF:'Ncv32f'
│   └── TYPE_REF:'NCVStatus'
├── FUNCTION_DECL:'ncvDetectObjectsMultiScale_device'
│   ├── PARM_DECL:'cpuAllocator'
│   │   └── TYPE_REF:'class INCVMemAllocator'
│   ├── PARM_DECL:'cuStream'
│   ├── PARM_DECL:'d_HaarFeatures'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarFeature64'
│   ├── PARM_DECL:'d_HaarNodes'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarClassifierNode128'
│   ├── PARM_DECL:'d_HaarStages'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarStage64'
│   ├── PARM_DECL:'d_dstRects'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct NcvRect32u'
│   ├── PARM_DECL:'d_srcImg'
│   │   ├── TEMPLATE_REF:'NCVMatrix'
│   │   └── TYPE_REF:'Ncv8u'
│   ├── PARM_DECL:'devProp'
│   ├── PARM_DECL:'dstNumRects'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'flags'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'gpuAllocator'
│   │   └── TYPE_REF:'class INCVMemAllocator'
│   ├── PARM_DECL:'h_HaarStages'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarStage64'
│   ├── PARM_DECL:'haar'
│   │   └── TYPE_REF:'struct HaarClassifierCascadeDescriptor'
│   ├── PARM_DECL:'minNeighbors'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'minObjSize'
│   │   └── TYPE_REF:'struct NcvSize32u'
│   ├── PARM_DECL:'pixelStep'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'scaleStep'
│   │   └── TYPE_REF:'Ncv32f'
│   ├── PARM_DECL:'srcRoi'
│   │   └── TYPE_REF:'struct NcvSize32u'
│   └── TYPE_REF:'NCVStatus'
├── FUNCTION_DECL:'ncvGrowDetectionsVector_device'
│   ├── PARM_DECL:'cuStream'
│   ├── PARM_DECL:'curScale'
│   │   └── TYPE_REF:'Ncv32f'
│   ├── PARM_DECL:'hypotheses'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct NcvRect32u'
│   ├── PARM_DECL:'numPixelMaskDetections'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'pixelMask'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'rectHeight'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'rectWidth'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'totalDetections'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'totalMaxDetections'
│   │   └── TYPE_REF:'Ncv32u'
│   └── TYPE_REF:'NCVStatus'
├── FUNCTION_DECL:'ncvGrowDetectionsVector_host'
│   ├── PARM_DECL:'curScale'
│   │   └── TYPE_REF:'Ncv32f'
│   ├── PARM_DECL:'hypotheses'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct NcvRect32u'
│   ├── PARM_DECL:'numPixelMaskDetections'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'pixelMask'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'rectHeight'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'rectWidth'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'totalDetections'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'totalMaxDetections'
│   │   └── TYPE_REF:'Ncv32u'
│   └── TYPE_REF:'NCVStatus'
├── FUNCTION_DECL:'ncvHaarGetClassifierSize'
│   ├── PARM_DECL:'filename'
│   │   ├── NAMESPACE_REF:'std'
│   │   └── TYPE_REF:'std::string'
│   ├── PARM_DECL:'numFeatures'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'numNodes'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'numStages'
│   │   └── TYPE_REF:'Ncv32u'
│   └── TYPE_REF:'NCVStatus'
├── FUNCTION_DECL:'ncvHaarLoadFromFile_host'
│   ├── PARM_DECL:'filename'
│   │   ├── NAMESPACE_REF:'std'
│   │   └── TYPE_REF:'std::string'
│   ├── PARM_DECL:'h_HaarFeatures'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarFeature64'
│   ├── PARM_DECL:'h_HaarNodes'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarClassifierNode128'
│   ├── PARM_DECL:'h_HaarStages'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarStage64'
│   ├── PARM_DECL:'haar'
│   │   └── TYPE_REF:'struct HaarClassifierCascadeDescriptor'
│   └── TYPE_REF:'NCVStatus'
├── FUNCTION_DECL:'ncvHaarStoreNVBIN_host'
│   ├── PARM_DECL:'filename'
│   │   ├── NAMESPACE_REF:'std'
│   │   └── TYPE_REF:'std::string'
│   ├── PARM_DECL:'h_HaarFeatures'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarFeature64'
│   ├── PARM_DECL:'h_HaarNodes'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarClassifierNode128'
│   ├── PARM_DECL:'h_HaarStages'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct HaarStage64'
│   ├── PARM_DECL:'haar'
│   │   └── TYPE_REF:'struct HaarClassifierCascadeDescriptor'
│   └── TYPE_REF:'NCVStatus'
├── INCLUSION_DIRECTIVE:'NCV.hpp'
├── INCLUSION_DIRECTIVE:'string'
├── MACRO_DEFINITION:'HAAR_STDDEV_BORDER'
├── MACRO_DEFINITION:'HaarFeature64_CreateCheck_MaxRectField'
├── MACRO_DEFINITION:'HaarFeatureDescriptor32_CreateCheck_MaxFeatureOffset'
├── MACRO_DEFINITION:'HaarFeatureDescriptor32_CreateCheck_MaxNumFeatures'
├── MACRO_DEFINITION:'HaarFeatureDescriptor32_Interpret_MaskFlagLeftNodeLeaf'
├── MACRO_DEFINITION:'HaarFeatureDescriptor32_Interpret_MaskFlagRightNodeLeaf'
├── MACRO_DEFINITION:'HaarFeatureDescriptor32_Interpret_MaskFlagTilted'
├── MACRO_DEFINITION:'HaarFeatureDescriptor32_NumFeatures_Shift'
├── MACRO_DEFINITION:'HaarStage64_Interpret_MaskRootNodeOffset'
├── MACRO_DEFINITION:'HaarStage64_Interpret_MaskRootNodes'
├── MACRO_DEFINITION:'HaarStage64_Interpret_ShiftRootNodeOffset'
├── MACRO_DEFINITION:'OBJDET_MASK_ELEMENT_INVALID_32U'
├── MACRO_DEFINITION:'PCL_GPU_PEOPLE_NCVHAAROBJECTDETECTION_HPP_'
├── MACRO_DEFINITION:'RECT_SIMILARITY_PROPORTION'
├── MACRO_INSTANTIATION:'HaarFeature64_CreateCheck_MaxRectField'
├── MACRO_INSTANTIATION:'HaarFeature64_CreateCheck_MaxRectField'
├── MACRO_INSTANTIATION:'HaarFeatureDescriptor32_CreateCheck_MaxFeatureOffset'
├── MACRO_INSTANTIATION:'HaarFeatureDescriptor32_CreateCheck_MaxFeatureOffset'
├── MACRO_INSTANTIATION:'HaarFeatureDescriptor32_CreateCheck_MaxNumFeatures'
├── MACRO_INSTANTIATION:'HaarFeatureDescriptor32_CreateCheck_MaxNumFeatures'
├── MACRO_INSTANTIATION:'HaarFeatureDescriptor32_Interpret_MaskFlagLeftNodeLeaf'
├── MACRO_INSTANTIATION:'HaarFeatureDescriptor32_Interpret_MaskFlagLeftNodeLeaf'
├── MACRO_INSTANTIATION:'HaarFeatureDescriptor32_Interpret_MaskFlagRightNodeLeaf'
├── MACRO_INSTANTIATION:'HaarFeatureDescriptor32_Interpret_MaskFlagRightNodeLeaf'
├── MACRO_INSTANTIATION:'HaarFeatureDescriptor32_Interpret_MaskFlagTilted'
├── MACRO_INSTANTIATION:'HaarFeatureDescriptor32_Interpret_MaskFlagTilted'
├── MACRO_INSTANTIATION:'HaarFeatureDescriptor32_NumFeatures_Shift'
├── MACRO_INSTANTIATION:'HaarFeatureDescriptor32_NumFeatures_Shift'
├── MACRO_INSTANTIATION:'HaarStage64_Interpret_MaskRootNodeOffset'
├── MACRO_INSTANTIATION:'HaarStage64_Interpret_MaskRootNodeOffset'
├── MACRO_INSTANTIATION:'HaarStage64_Interpret_MaskRootNodes'
├── MACRO_INSTANTIATION:'HaarStage64_Interpret_MaskRootNodes'
├── MACRO_INSTANTIATION:'HaarStage64_Interpret_MaskRootNodes'
├── MACRO_INSTANTIATION:'HaarStage64_Interpret_ShiftRootNodeOffset'
├── MACRO_INSTANTIATION:'HaarStage64_Interpret_ShiftRootNodeOffset'
├── MACRO_INSTANTIATION:'HaarStage64_Interpret_ShiftRootNodeOffset'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'ncvAssertReturn'
├── STRUCT_DECL:'HaarClassifierCascadeDescriptor'
│   ├── FIELD_DECL:'ClassifierSize'
│   │   └── TYPE_REF:'struct NcvSize32u'
│   ├── FIELD_DECL:'NumClassifierRootNodes'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── FIELD_DECL:'NumClassifierTotalNodes'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── FIELD_DECL:'NumFeatures'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── FIELD_DECL:'NumStages'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── FIELD_DECL:'bHasStumpsOnly'
│   │   └── TYPE_REF:'NcvBool'
│   └── FIELD_DECL:'bNeedsTiltedII'
│       └── TYPE_REF:'NcvBool'
├── STRUCT_DECL:'HaarClassifierNode128'
│   ├── FIELD_DECL:'NCVStatus'
│   └── FIELD_DECL:'_ui4'
├── STRUCT_DECL:'HaarClassifierNodeDescriptor32'
│   ├── FIELD_DECL:'NCVStatus'
│   └── FIELD_DECL:'_ui1'
├── STRUCT_DECL:'HaarFeature64'
│   ├── FIELD_DECL:'NCVStatus'
│   └── FIELD_DECL:'_ui2'
├── STRUCT_DECL:'HaarFeatureDescriptor32'
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── FIELD_DECL:'NCVStatus'
│   └── FIELD_DECL:'desc'
│       └── TYPE_REF:'Ncv32u'
├── STRUCT_DECL:'HaarStage64'
│   ├── FIELD_DECL:'NCVStatus'
│   └── FIELD_DECL:'_ui2'
├── TYPEDEF_DECL:'__ct_assert_typedef_305'
├── TYPEDEF_DECL:'__ct_assert_typedef_306'
├── TYPEDEF_DECL:'__ct_assert_typedef_307'
├── TYPEDEF_DECL:'__ct_assert_typedef_308'
└── TYPEDEF_DECL:'__ct_assert_typedef_309'
