TRANSLATION_UNIT:'/pcl/gpu/people/src/cuda/nvidia/NCV.hpp'
├── CLASS_DECL:'INCVMemAllocator'
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_METHOD:'alignment'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── CXX_METHOD:'alloc'
│   │   ├── PARM_DECL:'seg'
│   │   │   └── TYPE_REF:'struct NCVMemSegment'
│   │   ├── PARM_DECL:'size'
│   │   │   ├── NAMESPACE_REF:'std'
│   │   │   └── TYPE_REF:'std::size_t'
│   │   └── TYPE_REF:'NCVStatus'
│   ├── CXX_METHOD:'dealloc'
│   │   ├── PARM_DECL:'seg'
│   │   │   └── TYPE_REF:'struct NCVMemSegment'
│   │   └── TYPE_REF:'NCVStatus'
│   ├── CXX_METHOD:'isCounting'
│   │   └── TYPE_REF:'NcvBool'
│   ├── CXX_METHOD:'isInitialized'
│   │   └── TYPE_REF:'NcvBool'
│   ├── CXX_METHOD:'maxSize'
│   │   ├── NAMESPACE_REF:'std'
│   │   └── TYPE_REF:'std::size_t'
│   ├── CXX_METHOD:'memType'
│   │   └── TYPE_REF:'enum NCVMemoryType'
│   └── DESTRUCTOR:'~INCVMemAllocator'
├── CLASS_DECL:'NCVMemNativeAllocator'
│   ├── CONSTRUCTOR:'NCVMemNativeAllocator'
│   │   ├── PARM_DECL:'alignment'
│   │   │   └── TYPE_REF:'Ncv32u'
│   │   └── PARM_DECL:'memT'
│   │       └── TYPE_REF:'enum NCVMemoryType'
│   ├── CONSTRUCTOR:'NCVMemNativeAllocator'
│   ├── CONSTRUCTOR:'NCVMemNativeAllocator'
│   │   └── PARM_DECL:''
│   │       └── TYPE_REF:'class NCVMemNativeAllocator'
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_BASE_SPECIFIER:'class INCVMemAllocator'
│   │   └── TYPE_REF:'class INCVMemAllocator'
│   ├── CXX_METHOD:'alignment'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── CXX_METHOD:'alloc'
│   │   ├── PARM_DECL:'seg'
│   │   │   └── TYPE_REF:'struct NCVMemSegment'
│   │   ├── PARM_DECL:'size'
│   │   │   ├── NAMESPACE_REF:'std'
│   │   │   └── TYPE_REF:'std::size_t'
│   │   └── TYPE_REF:'NCVStatus'
│   ├── CXX_METHOD:'dealloc'
│   │   ├── PARM_DECL:'seg'
│   │   │   └── TYPE_REF:'struct NCVMemSegment'
│   │   └── TYPE_REF:'NCVStatus'
│   ├── CXX_METHOD:'isCounting'
│   │   └── TYPE_REF:'NcvBool'
│   ├── CXX_METHOD:'isInitialized'
│   │   └── TYPE_REF:'NcvBool'
│   ├── CXX_METHOD:'maxSize'
│   │   ├── NAMESPACE_REF:'std'
│   │   └── TYPE_REF:'std::size_t'
│   ├── CXX_METHOD:'memType'
│   │   └── TYPE_REF:'enum NCVMemoryType'
│   ├── DESTRUCTOR:'~NCVMemNativeAllocator'
│   ├── FIELD_DECL:'_alignment'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── FIELD_DECL:'_maxSize'
│   │   ├── NAMESPACE_REF:'std'
│   │   └── TYPE_REF:'std::size_t'
│   ├── FIELD_DECL:'_memType'
│   │   └── TYPE_REF:'enum NCVMemoryType'
│   └── FIELD_DECL:'currentSize'
│       ├── NAMESPACE_REF:'std'
│       └── TYPE_REF:'std::size_t'
├── CLASS_DECL:'NCVMemStackAllocator'
│   ├── CONSTRUCTOR:'NCVMemStackAllocator'
│   ├── CONSTRUCTOR:'NCVMemStackAllocator'
│   │   └── PARM_DECL:''
│   │       └── TYPE_REF:'class NCVMemStackAllocator'
│   ├── CONSTRUCTOR:'NCVMemStackAllocator'
│   │   └── PARM_DECL:'alignment'
│   │       └── TYPE_REF:'Ncv32u'
│   ├── CONSTRUCTOR:'NCVMemStackAllocator'
│   │   ├── PARM_DECL:'alignment'
│   │   │   └── TYPE_REF:'Ncv32u'
│   │   ├── PARM_DECL:'capacity'
│   │   │   ├── NAMESPACE_REF:'std'
│   │   │   └── TYPE_REF:'std::size_t'
│   │   ├── PARM_DECL:'memT'
│   │   │   └── TYPE_REF:'enum NCVMemoryType'
│   │   └── PARM_DECL:'reusePtr'
│   │       └── UNEXPOSED_EXPR:''
│   │           └── CXX_THIS_EXPR:''
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_BASE_SPECIFIER:'class INCVMemAllocator'
│   │   └── TYPE_REF:'class INCVMemAllocator'
│   ├── CXX_METHOD:'alignment'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── CXX_METHOD:'alloc'
│   │   ├── PARM_DECL:'seg'
│   │   │   └── TYPE_REF:'struct NCVMemSegment'
│   │   ├── PARM_DECL:'size'
│   │   │   ├── NAMESPACE_REF:'std'
│   │   │   └── TYPE_REF:'std::size_t'
│   │   └── TYPE_REF:'NCVStatus'
│   ├── CXX_METHOD:'dealloc'
│   │   ├── PARM_DECL:'seg'
│   │   │   └── TYPE_REF:'struct NCVMemSegment'
│   │   └── TYPE_REF:'NCVStatus'
│   ├── CXX_METHOD:'isCounting'
│   │   └── TYPE_REF:'NcvBool'
│   ├── CXX_METHOD:'isInitialized'
│   │   └── TYPE_REF:'NcvBool'
│   ├── CXX_METHOD:'maxSize'
│   │   ├── NAMESPACE_REF:'std'
│   │   └── TYPE_REF:'std::size_t'
│   ├── CXX_METHOD:'memType'
│   │   └── TYPE_REF:'enum NCVMemoryType'
│   ├── DESTRUCTOR:'~NCVMemStackAllocator'
│   ├── FIELD_DECL:'_alignment'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── FIELD_DECL:'_maxSize'
│   │   ├── NAMESPACE_REF:'std'
│   │   └── TYPE_REF:'std::size_t'
│   ├── FIELD_DECL:'_memType'
│   │   └── TYPE_REF:'enum NCVMemoryType'
│   ├── FIELD_DECL:'allocBegin'
│   │   └── TYPE_REF:'Ncv8u'
│   ├── FIELD_DECL:'bReusesMemory'
│   │   └── TYPE_REF:'NcvBool'
│   ├── FIELD_DECL:'begin'
│   │   └── TYPE_REF:'Ncv8u'
│   ├── FIELD_DECL:'currentSize'
│   │   ├── NAMESPACE_REF:'std'
│   │   └── TYPE_REF:'std::size_t'
│   └── FIELD_DECL:'end'
│       └── TYPE_REF:'Ncv8u'
├── CLASS_TEMPLATE:'NCVMatrix'
│   ├── CONSTRUCTOR:'NCVMatrix<T>'
│   │   └── PARM_DECL:''
│   │       └── TYPE_REF:'NCVMatrix<T>'
│   ├── CONSTRUCTOR:'NCVMatrix<T>'
│   │   └── COMPOUND_STMT:''
│   │       └── CALL_EXPR:'clear'
│   │           └── MEMBER_REF_EXPR:'clear'
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_METHOD:'at'
│   │   ├── COMPOUND_STMT:''
│   │   │   ├── DECL_STMT:''
│   │   │   │   └── VAR_DECL:'bOutRange'
│   │   │   │       ├── PAREN_EXPR:''
│   │   │   │       │   └── BINARY_OPERATOR:''
│   │   │   │       │       ├── BINARY_OPERATOR:''
│   │   │   │       │       │   ├── DECL_REF_EXPR:'x'
│   │   │   │       │       │   └── MEMBER_REF_EXPR:''
│   │   │   │       │       │       └── CXX_THROW_EXPR:''
│   │   │   │       │       └── BINARY_OPERATOR:''
│   │   │   │       │           ├── DECL_REF_EXPR:'y'
│   │   │   │       │           └── MEMBER_REF_EXPR:''
│   │   │   │       │               └── CXX_THROW_EXPR:''
│   │   │   │       └── TYPE_REF:'NcvBool'
│   │   │   ├── DO_STMT:''
│   │   │   │   ├── COMPOUND_STMT:''
│   │   │   │   │   └── IF_STMT:''
│   │   │   │   │       ├── COMPOUND_STMT:''
│   │   │   │   │       │   └── DECL_STMT:''
│   │   │   │   │       │       └── VAR_DECL:'oss'
│   │   │   │   │       │           ├── NAMESPACE_REF:'std'
│   │   │   │   │       │           └── TYPE_REF:'std::ostringstream'
│   │   │   │   │       └── UNARY_OPERATOR:''
│   │   │   │   │           └── PAREN_EXPR:''
│   │   │   │   │               └── UNARY_OPERATOR:''
│   │   │   │   │                   └── UNEXPOSED_EXPR:'bOutRange'
│   │   │   │   │                       └── DECL_REF_EXPR:'bOutRange'
│   │   │   │   └── UNEXPOSED_EXPR:''
│   │   │   │       └── INTEGER_LITERAL:''
│   │   │   ├── IF_STMT:''
│   │   │   │   ├── COMPOUND_STMT:''
│   │   │   │   │   └── RETURN_STMT:''
│   │   │   │   │       └── UNARY_OPERATOR:''
│   │   │   │   │           └── MEMBER_REF_EXPR:''
│   │   │   │   │               └── CXX_THROW_EXPR:''
│   │   │   │   └── UNEXPOSED_EXPR:'bOutRange'
│   │   │   │       └── DECL_REF_EXPR:'bOutRange'
│   │   │   └── RETURN_STMT:''
│   │   │       └── ARRAY_SUBSCRIPT_EXPR:''
│   │   │           ├── DECL_REF_EXPR:'x'
│   │   │           └── PAREN_EXPR:''
│   │   │               └── CSTYLE_CAST_EXPR:''
│   │   │                   ├── PAREN_EXPR:''
│   │   │                   │   └── BINARY_OPERATOR:''
│   │   │                   │       ├── BINARY_OPERATOR:''
│   │   │                   │       │   ├── DECL_REF_EXPR:'y'
│   │   │                   │       │   └── MEMBER_REF_EXPR:''
│   │   │                   │       │       └── CXX_THROW_EXPR:''
│   │   │                   │       └── CSTYLE_CAST_EXPR:''
│   │   │                   │           ├── MEMBER_REF_EXPR:''
│   │   │                   │           │   └── CXX_THROW_EXPR:''
│   │   │                   │           └── TYPE_REF:'Ncv8u'
│   │   │                   └── TYPE_REF:'T'
│   │   ├── PARM_DECL:'x'
│   │   │   └── TYPE_REF:'Ncv32u'
│   │   ├── PARM_DECL:'y'
│   │   │   └── TYPE_REF:'Ncv32u'
│   │   └── TYPE_REF:'T'
│   ├── CXX_METHOD:'clear'
│   │   └── COMPOUND_STMT:''
│   │       ├── BINARY_OPERATOR:''
│   │       │   ├── CXX_THIS_EXPR:''
│   │       │   └── MEMBER_REF_EXPR:'_ptr'
│   │       ├── BINARY_OPERATOR:''
│   │       │   ├── MEMBER_REF_EXPR:'_pitch'
│   │       │   └── UNEXPOSED_EXPR:''
│   │       │       └── INTEGER_LITERAL:''
│   │       ├── BINARY_OPERATOR:''
│   │       │   ├── MEMBER_REF_EXPR:'_width'
│   │       │   └── UNEXPOSED_EXPR:''
│   │       │       └── INTEGER_LITERAL:''
│   │       ├── BINARY_OPERATOR:''
│   │       │   ├── MEMBER_REF_EXPR:'_height'
│   │       │   └── UNEXPOSED_EXPR:''
│   │       │       └── INTEGER_LITERAL:''
│   │       └── BINARY_OPERATOR:''
│   │           ├── DECL_REF_EXPR:'NCVMemoryTypeNone'
│   │           └── MEMBER_REF_EXPR:'_memtype'
│   ├── CXX_METHOD:'copy2D'
│   │   ├── COMPOUND_STMT:''
│   │   │   ├── DECL_STMT:''
│   │   │   │   └── VAR_DECL:'ncvStat'
│   │   │   │       ├── TYPE_REF:'NCVStatus'
│   │   │   │       └── UNEXPOSED_EXPR:'NCV_SUCCESS'
│   │   │   │           └── DECL_REF_EXPR:'NCV_SUCCESS'
│   │   │   ├── DO_STMT:''
│   │   │   │   ├── COMPOUND_STMT:''
│   │   │   │   │   ├── DO_STMT:''
│   │   │   │   │   │   ├── COMPOUND_STMT:''
│   │   │   │   │   │   │   └── IF_STMT:''
│   │   │   │   │   │   │       ├── COMPOUND_STMT:''
│   │   │   │   │   │   │       │   └── DECL_STMT:''
│   │   │   │   │   │   │       │       └── VAR_DECL:'oss'
│   │   │   │   │   │   │       │           ├── NAMESPACE_REF:'std'
│   │   │   │   │   │   │       │           └── TYPE_REF:'std::ostringstream'
│   │   │   │   │   │   │       └── UNARY_OPERATOR:''
│   │   │   │   │   │   │           └── PAREN_EXPR:''
│   │   │   │   │   │   │               └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   ├── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   │   ├── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   │   │   │   ├── CALL_EXPR:''
│   │   │   │   │   │   │                   │   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │   │   │   │                   │   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   │   │   │   │                   │   │   │   └── MEMBER_REF_EXPR:'width'
│   │   │   │   │   │   │                   │   │   │       └── DECL_REF_EXPR:'roi'
│   │   │   │   │   │   │                   │   │   └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   │   │       ├── CALL_EXPR:''
│   │   │   │   │   │   │                   │   │       │   └── MEMBER_REF_EXPR:''
│   │   │   │   │   │   │                   │   │       │       └── CXX_THROW_EXPR:''
│   │   │   │   │   │   │                   │   │       └── MEMBER_REF_EXPR:'height'
│   │   │   │   │   │   │                   │   │           └── DECL_REF_EXPR:'roi'
│   │   │   │   │   │   │                   │   └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   │       ├── CALL_EXPR:''
│   │   │   │   │   │   │                   │       │   └── MEMBER_REF_EXPR:''
│   │   │   │   │   │   │                   │       │       └── DECL_REF_EXPR:'dst'
│   │   │   │   │   │   │                   │       └── MEMBER_REF_EXPR:'width'
│   │   │   │   │   │   │                   │           └── DECL_REF_EXPR:'roi'
│   │   │   │   │   │   │                   └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                       ├── CALL_EXPR:''
│   │   │   │   │   │   │                       │   └── MEMBER_REF_EXPR:''
│   │   │   │   │   │   │                       │       └── DECL_REF_EXPR:'dst'
│   │   │   │   │   │   │                       └── MEMBER_REF_EXPR:'height'
│   │   │   │   │   │   │                           └── DECL_REF_EXPR:'roi'
│   │   │   │   │   │   └── UNEXPOSED_EXPR:''
│   │   │   │   │   │       └── INTEGER_LITERAL:''
│   │   │   │   │   └── IF_STMT:''
│   │   │   │   │       ├── RETURN_STMT:''
│   │   │   │   │       │   └── UNEXPOSED_EXPR:'NCV_MEM_COPY_ERROR'
│   │   │   │   │       │       └── DECL_REF_EXPR:'NCV_MEM_COPY_ERROR'
│   │   │   │   │       └── UNARY_OPERATOR:''
│   │   │   │   │           └── PAREN_EXPR:''
│   │   │   │   │               └── BINARY_OPERATOR:''
│   │   │   │   │                   ├── BINARY_OPERATOR:''
│   │   │   │   │                   │   ├── BINARY_OPERATOR:''
│   │   │   │   │                   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   │                   │   │   │   ├── CALL_EXPR:''
│   │   │   │   │                   │   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │   │                   │   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   │   │                   │   │   │   └── MEMBER_REF_EXPR:'width'
│   │   │   │   │                   │   │   │       └── DECL_REF_EXPR:'roi'
│   │   │   │   │                   │   │   └── BINARY_OPERATOR:''
│   │   │   │   │                   │   │       ├── CALL_EXPR:''
│   │   │   │   │                   │   │       │   └── MEMBER_REF_EXPR:''
│   │   │   │   │                   │   │       │       └── CXX_THROW_EXPR:''
│   │   │   │   │                   │   │       └── MEMBER_REF_EXPR:'height'
│   │   │   │   │                   │   │           └── DECL_REF_EXPR:'roi'
│   │   │   │   │                   │   └── BINARY_OPERATOR:''
│   │   │   │   │                   │       ├── CALL_EXPR:''
│   │   │   │   │                   │       │   └── MEMBER_REF_EXPR:''
│   │   │   │   │                   │       │       └── DECL_REF_EXPR:'dst'
│   │   │   │   │                   │       └── MEMBER_REF_EXPR:'width'
│   │   │   │   │                   │           └── DECL_REF_EXPR:'roi'
│   │   │   │   │                   └── BINARY_OPERATOR:''
│   │   │   │   │                       ├── CALL_EXPR:''
│   │   │   │   │                       │   └── MEMBER_REF_EXPR:''
│   │   │   │   │                       │       └── DECL_REF_EXPR:'dst'
│   │   │   │   │                       └── MEMBER_REF_EXPR:'height'
│   │   │   │   │                           └── DECL_REF_EXPR:'roi'
│   │   │   │   └── UNEXPOSED_EXPR:''
│   │   │   │       └── INTEGER_LITERAL:''
│   │   │   ├── DO_STMT:''
│   │   │   │   ├── COMPOUND_STMT:''
│   │   │   │   │   ├── DO_STMT:''
│   │   │   │   │   │   ├── COMPOUND_STMT:''
│   │   │   │   │   │   │   └── IF_STMT:''
│   │   │   │   │   │   │       └── COMPOUND_STMT:''
│   │   │   │   │   │   │           └── DECL_STMT:''
│   │   │   │   │   │   │               └── VAR_DECL:'oss'
│   │   │   │   │   │   │                   ├── NAMESPACE_REF:'std'
│   │   │   │   │   │   │                   └── TYPE_REF:'std::ostringstream'
│   │   │   │   │   │   └── UNEXPOSED_EXPR:''
│   │   │   │   │   │       └── INTEGER_LITERAL:''
│   │   │   │   │   └── IF_STMT:''
│   │   │   │   │       └── RETURN_STMT:''
│   │   │   │   │           └── UNEXPOSED_EXPR:'NCV_NULL_PTR'
│   │   │   │   │               └── DECL_REF_EXPR:'NCV_NULL_PTR'
│   │   │   │   └── UNEXPOSED_EXPR:''
│   │   │   │       └── INTEGER_LITERAL:''
│   │   │   ├── IF_STMT:''
│   │   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   │   ├── DECL_REF_EXPR:'NCVMemoryTypeNone'
│   │   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   │   └── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── UNEXPOSED_EXPR:'ncvStat'
│   │   │           └── DECL_REF_EXPR:'ncvStat'
│   │   ├── PARM_DECL:'cuStream'
│   │   ├── PARM_DECL:'dst'
│   │   │   ├── TEMPLATE_REF:'NCVMatrix'
│   │   │   └── TYPE_REF:'T'
│   │   ├── PARM_DECL:'roi'
│   │   │   └── TYPE_REF:'struct NcvSize32u'
│   │   └── TYPE_REF:'NCVStatus'
│   ├── CXX_METHOD:'copySolid'
│   │   ├── COMPOUND_STMT:''
│   │   │   ├── DECL_STMT:''
│   │   │   │   └── VAR_DECL:'ncvStat'
│   │   │   │       ├── TYPE_REF:'NCVStatus'
│   │   │   │       └── UNEXPOSED_EXPR:'NCV_SUCCESS'
│   │   │   │           └── DECL_REF_EXPR:'NCV_SUCCESS'
│   │   │   ├── DO_STMT:''
│   │   │   │   ├── COMPOUND_STMT:''
│   │   │   │   │   ├── DO_STMT:''
│   │   │   │   │   │   ├── COMPOUND_STMT:''
│   │   │   │   │   │   │   └── IF_STMT:''
│   │   │   │   │   │   │       ├── COMPOUND_STMT:''
│   │   │   │   │   │   │       │   └── DECL_STMT:''
│   │   │   │   │   │   │       │       └── VAR_DECL:'oss'
│   │   │   │   │   │   │       │           ├── NAMESPACE_REF:'std'
│   │   │   │   │   │   │       │           └── TYPE_REF:'std::ostringstream'
│   │   │   │   │   │   │       └── UNARY_OPERATOR:''
│   │   │   │   │   │   │           └── PAREN_EXPR:''
│   │   │   │   │   │   │               └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   ├── PAREN_EXPR:''
│   │   │   │   │   │   │                   │   └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   │       ├── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   │       │   ├── CXX_THIS_EXPR:''
│   │   │   │   │   │   │                   │       │   └── MEMBER_REF_EXPR:''
│   │   │   │   │   │   │                   │       │       └── CXX_THROW_EXPR:''
│   │   │   │   │   │   │                   │       └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   │           ├── DECL_REF_EXPR:'NCVMemoryTypeNone'
│   │   │   │   │   │   │                   │           └── MEMBER_REF_EXPR:''
│   │   │   │   │   │   │                   │               └── CXX_THROW_EXPR:''
│   │   │   │   │   │   │                   └── PAREN_EXPR:''
│   │   │   │   │   │   │                       └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                           ├── BINARY_OPERATOR:''
│   │   │   │   │   │   │                           │   ├── CXX_THIS_EXPR:''
│   │   │   │   │   │   │                           │   └── MEMBER_REF_EXPR:''
│   │   │   │   │   │   │                           │       └── DECL_REF_EXPR:'dst'
│   │   │   │   │   │   │                           └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                               ├── DECL_REF_EXPR:'NCVMemoryTypeNone'
│   │   │   │   │   │   │                               └── MEMBER_REF_EXPR:''
│   │   │   │   │   │   │                                   └── DECL_REF_EXPR:'dst'
│   │   │   │   │   │   └── UNEXPOSED_EXPR:''
│   │   │   │   │   │       └── INTEGER_LITERAL:''
│   │   │   │   │   └── IF_STMT:''
│   │   │   │   │       ├── RETURN_STMT:''
│   │   │   │   │       │   └── UNEXPOSED_EXPR:'NCV_NULL_PTR'
│   │   │   │   │       │       └── DECL_REF_EXPR:'NCV_NULL_PTR'
│   │   │   │   │       └── UNARY_OPERATOR:''
│   │   │   │   │           └── PAREN_EXPR:''
│   │   │   │   │               └── BINARY_OPERATOR:''
│   │   │   │   │                   ├── PAREN_EXPR:''
│   │   │   │   │                   │   └── BINARY_OPERATOR:''
│   │   │   │   │                   │       ├── BINARY_OPERATOR:''
│   │   │   │   │                   │       │   ├── CXX_THIS_EXPR:''
│   │   │   │   │                   │       │   └── MEMBER_REF_EXPR:''
│   │   │   │   │                   │       │       └── CXX_THROW_EXPR:''
│   │   │   │   │                   │       └── BINARY_OPERATOR:''
│   │   │   │   │                   │           ├── DECL_REF_EXPR:'NCVMemoryTypeNone'
│   │   │   │   │                   │           └── MEMBER_REF_EXPR:''
│   │   │   │   │                   │               └── CXX_THROW_EXPR:''
│   │   │   │   │                   └── PAREN_EXPR:''
│   │   │   │   │                       └── BINARY_OPERATOR:''
│   │   │   │   │                           ├── BINARY_OPERATOR:''
│   │   │   │   │                           │   ├── CXX_THIS_EXPR:''
│   │   │   │   │                           │   └── MEMBER_REF_EXPR:''
│   │   │   │   │                           │       └── DECL_REF_EXPR:'dst'
│   │   │   │   │                           └── BINARY_OPERATOR:''
│   │   │   │   │                               ├── DECL_REF_EXPR:'NCVMemoryTypeNone'
│   │   │   │   │                               └── MEMBER_REF_EXPR:''
│   │   │   │   │                                   └── DECL_REF_EXPR:'dst'
│   │   │   │   └── UNEXPOSED_EXPR:''
│   │   │   │       └── INTEGER_LITERAL:''
│   │   │   ├── IF_STMT:''
│   │   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   │   ├── UNEXPOSED_EXPR:''
│   │   │   │   │   │   └── INTEGER_LITERAL:''
│   │   │   │   │   └── UNEXPOSED_EXPR:'howMuch'
│   │   │   │   │       └── DECL_REF_EXPR:'howMuch'
│   │   │   │   ├── COMPOUND_STMT:''
│   │   │   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │   │   │   │   │   └── CXX_THROW_EXPR:''
│   │   │   │   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   │   │   │   └── DECL_REF_EXPR:'howMuch'
│   │   │   │   │   └── DO_STMT:''
│   │   │   │   │       ├── COMPOUND_STMT:''
│   │   │   │   │       │   ├── DO_STMT:''
│   │   │   │   │       │   │   ├── COMPOUND_STMT:''
│   │   │   │   │       │   │   │   └── IF_STMT:''
│   │   │   │   │       │   │   │       ├── COMPOUND_STMT:''
│   │   │   │   │       │   │   │       │   └── DECL_STMT:''
│   │   │   │   │       │   │   │       │       └── VAR_DECL:'oss'
│   │   │   │   │       │   │   │       │           ├── NAMESPACE_REF:'std'
│   │   │   │   │       │   │   │       │           └── TYPE_REF:'std::ostringstream'
│   │   │   │   │       │   │   │       └── UNARY_OPERATOR:''
│   │   │   │   │       │   │   │           └── PAREN_EXPR:''
│   │   │   │   │       │   │   │               └── BINARY_OPERATOR:''
│   │   │   │   │       │   │   │                   ├── BINARY_OPERATOR:''
│   │   │   │   │       │   │   │                   │   ├── MEMBER_REF_EXPR:''
│   │   │   │   │       │   │   │                   │   │   └── DECL_REF_EXPR:'dst'
│   │   │   │   │       │   │   │                   │   └── MEMBER_REF_EXPR:''
│   │   │   │   │       │   │   │                   │       └── CXX_THROW_EXPR:''
│   │   │   │   │       │   │   │                   └── BINARY_OPERATOR:''
│   │   │   │   │       │   │   │                       ├── MEMBER_REF_EXPR:''
│   │   │   │   │       │   │   │                       │   └── DECL_REF_EXPR:'dst'
│   │   │   │   │       │   │   │                       └── MEMBER_REF_EXPR:''
│   │   │   │   │       │   │   │                           └── CXX_THROW_EXPR:''
│   │   │   │   │       │   │   └── UNEXPOSED_EXPR:''
│   │   │   │   │       │   │       └── INTEGER_LITERAL:''
│   │   │   │   │       │   └── IF_STMT:''
│   │   │   │   │       │       ├── RETURN_STMT:''
│   │   │   │   │       │       │   └── UNEXPOSED_EXPR:'NCV_MEM_COPY_ERROR'
│   │   │   │   │       │       │       └── DECL_REF_EXPR:'NCV_MEM_COPY_ERROR'
│   │   │   │   │       │       └── UNARY_OPERATOR:''
│   │   │   │   │       │           └── PAREN_EXPR:''
│   │   │   │   │       │               └── BINARY_OPERATOR:''
│   │   │   │   │       │                   ├── BINARY_OPERATOR:''
│   │   │   │   │       │                   │   ├── MEMBER_REF_EXPR:''
│   │   │   │   │       │                   │   │   └── DECL_REF_EXPR:'dst'
│   │   │   │   │       │                   │   └── MEMBER_REF_EXPR:''
│   │   │   │   │       │                   │       └── CXX_THROW_EXPR:''
│   │   │   │   │       │                   └── BINARY_OPERATOR:''
│   │   │   │   │       │                       ├── MEMBER_REF_EXPR:''
│   │   │   │   │       │                       │   └── DECL_REF_EXPR:'dst'
│   │   │   │   │       │                       └── MEMBER_REF_EXPR:''
│   │   │   │   │       │                           └── CXX_THROW_EXPR:''
│   │   │   │   │       └── UNEXPOSED_EXPR:''
│   │   │   │   │           └── INTEGER_LITERAL:''
│   │   │   │   └── COMPOUND_STMT:''
│   │   │   │       └── DO_STMT:''
│   │   │   │           ├── COMPOUND_STMT:''
│   │   │   │           │   ├── DO_STMT:''
│   │   │   │           │   │   ├── COMPOUND_STMT:''
│   │   │   │           │   │   │   └── IF_STMT:''
│   │   │   │           │   │   │       ├── COMPOUND_STMT:''
│   │   │   │           │   │   │       │   └── DECL_STMT:''
│   │   │   │           │   │   │       │       └── VAR_DECL:'oss'
│   │   │   │           │   │   │       │           ├── NAMESPACE_REF:'std'
│   │   │   │           │   │   │       │           └── TYPE_REF:'std::ostringstream'
│   │   │   │           │   │   │       └── UNARY_OPERATOR:''
│   │   │   │           │   │   │           └── PAREN_EXPR:''
│   │   │   │           │   │   │               └── BINARY_OPERATOR:''
│   │   │   │           │   │   │                   ├── BINARY_OPERATOR:''
│   │   │   │           │   │   │                   │   ├── BINARY_OPERATOR:''
│   │   │   │           │   │   │                   │   │   ├── BINARY_OPERATOR:''
│   │   │   │           │   │   │                   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │           │   │   │                   │   │   │   │   └── DECL_REF_EXPR:'dst'
│   │   │   │           │   │   │                   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │           │   │   │                   │   │   │       └── DECL_REF_EXPR:'dst'
│   │   │   │           │   │   │                   │   │   └── DECL_REF_EXPR:'howMuch'
│   │   │   │           │   │   │                   │   └── BINARY_OPERATOR:''
│   │   │   │           │   │   │                   │       ├── BINARY_OPERATOR:''
│   │   │   │           │   │   │                   │       │   ├── MEMBER_REF_EXPR:''
│   │   │   │           │   │   │                   │       │   │   └── CXX_THROW_EXPR:''
│   │   │   │           │   │   │                   │       │   └── MEMBER_REF_EXPR:''
│   │   │   │           │   │   │                   │       │       └── CXX_THROW_EXPR:''
│   │   │   │           │   │   │                   │       └── DECL_REF_EXPR:'howMuch'
│   │   │   │           │   │   │                   └── BINARY_OPERATOR:''
│   │   │   │           │   │   │                       ├── UNEXPOSED_EXPR:''
│   │   │   │           │   │   │                       │   └── INTEGER_LITERAL:''
│   │   │   │           │   │   │                       └── UNEXPOSED_EXPR:'howMuch'
│   │   │   │           │   │   │                           └── DECL_REF_EXPR:'howMuch'
│   │   │   │           │   │   └── UNEXPOSED_EXPR:''
│   │   │   │           │   │       └── INTEGER_LITERAL:''
│   │   │   │           │   └── IF_STMT:''
│   │   │   │           │       ├── RETURN_STMT:''
│   │   │   │           │       │   └── UNEXPOSED_EXPR:'NCV_MEM_COPY_ERROR'
│   │   │   │           │       │       └── DECL_REF_EXPR:'NCV_MEM_COPY_ERROR'
│   │   │   │           │       └── UNARY_OPERATOR:''
│   │   │   │           │           └── PAREN_EXPR:''
│   │   │   │           │               └── BINARY_OPERATOR:''
│   │   │   │           │                   ├── BINARY_OPERATOR:''
│   │   │   │           │                   │   ├── BINARY_OPERATOR:''
│   │   │   │           │                   │   │   ├── BINARY_OPERATOR:''
│   │   │   │           │                   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │           │                   │   │   │   │   └── DECL_REF_EXPR:'dst'
│   │   │   │           │                   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │           │                   │   │   │       └── DECL_REF_EXPR:'dst'
│   │   │   │           │                   │   │   └── DECL_REF_EXPR:'howMuch'
│   │   │   │           │                   │   └── BINARY_OPERATOR:''
│   │   │   │           │                   │       ├── BINARY_OPERATOR:''
│   │   │   │           │                   │       │   ├── MEMBER_REF_EXPR:''
│   │   │   │           │                   │       │   │   └── CXX_THROW_EXPR:''
│   │   │   │           │                   │       │   └── MEMBER_REF_EXPR:''
│   │   │   │           │                   │       │       └── CXX_THROW_EXPR:''
│   │   │   │           │                   │       └── DECL_REF_EXPR:'howMuch'
│   │   │   │           │                   └── BINARY_OPERATOR:''
│   │   │   │           │                       ├── UNEXPOSED_EXPR:''
│   │   │   │           │                       │   └── INTEGER_LITERAL:''
│   │   │   │           │                       └── UNEXPOSED_EXPR:'howMuch'
│   │   │   │           │                           └── DECL_REF_EXPR:'howMuch'
│   │   │   │           └── UNEXPOSED_EXPR:''
│   │   │   │               └── INTEGER_LITERAL:''
│   │   │   ├── IF_STMT:''
│   │   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   │   ├── DECL_REF_EXPR:'NCVMemoryTypeNone'
│   │   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   │   └── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── UNEXPOSED_EXPR:'ncvStat'
│   │   │           └── DECL_REF_EXPR:'ncvStat'
│   │   ├── PARM_DECL:'cuStream'
│   │   ├── PARM_DECL:'dst'
│   │   │   ├── TEMPLATE_REF:'NCVMatrix'
│   │   │   └── TYPE_REF:'T'
│   │   ├── PARM_DECL:'howMuch'
│   │   │   ├── NAMESPACE_REF:'std'
│   │   │   ├── TYPE_REF:'std::size_t'
│   │   │   └── UNEXPOSED_EXPR:''
│   │   │       └── INTEGER_LITERAL:''
│   │   └── TYPE_REF:'NCVStatus'
│   ├── CXX_METHOD:'height'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── MEMBER_REF_EXPR:''
│   │   │           └── CXX_THROW_EXPR:''
│   │   └── TYPE_REF:'Ncv32u'
│   ├── CXX_METHOD:'memType'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── MEMBER_REF_EXPR:''
│   │   │           └── CXX_THROW_EXPR:''
│   │   └── TYPE_REF:'enum NCVMemoryType'
│   ├── CXX_METHOD:'pitch'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── MEMBER_REF_EXPR:''
│   │   │           └── CXX_THROW_EXPR:''
│   │   └── TYPE_REF:'Ncv32u'
│   ├── CXX_METHOD:'ptr'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── MEMBER_REF_EXPR:''
│   │   │           └── CXX_THROW_EXPR:''
│   │   └── TYPE_REF:'T'
│   ├── CXX_METHOD:'size'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── UNEXPOSED_EXPR:''
│   │   │           └── CALL_EXPR:''
│   │   │               └── UNEXPOSED_EXPR:''
│   │   │                   └── CALL_EXPR:''
│   │   │                       ├── MEMBER_REF_EXPR:''
│   │   │                       │   └── CXX_THROW_EXPR:''
│   │   │                       ├── MEMBER_REF_EXPR:''
│   │   │                       │   └── CXX_THROW_EXPR:''
│   │   │                       └── TYPE_REF:'struct NcvSize32u'
│   │   └── TYPE_REF:'struct NcvSize32u'
│   ├── CXX_METHOD:'stride'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── UNEXPOSED_EXPR:''
│   │   │           └── BINARY_OPERATOR:''
│   │   │               ├── OBJC_STRING_LITERAL:''
│   │   │               │   └── TYPE_REF:'T'
│   │   │               └── UNEXPOSED_EXPR:'_pitch'
│   │   │                   └── UNEXPOSED_EXPR:'_pitch'
│   │   │                       └── MEMBER_REF_EXPR:'_pitch'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── CXX_METHOD:'width'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── MEMBER_REF_EXPR:''
│   │   │           └── CXX_THROW_EXPR:''
│   │   └── TYPE_REF:'Ncv32u'
│   ├── DESTRUCTOR:'~NCVMatrix<T>'
│   │   └── COMPOUND_STMT:''
│   ├── FIELD_DECL:'_height'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── FIELD_DECL:'_memtype'
│   │   └── TYPE_REF:'enum NCVMemoryType'
│   ├── FIELD_DECL:'_pitch'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── FIELD_DECL:'_ptr'
│   │   └── TYPE_REF:'T'
│   ├── FIELD_DECL:'_width'
│   │   └── TYPE_REF:'Ncv32u'
│   └── TEMPLATE_TYPE_PARAMETER:'T'
├── CLASS_TEMPLATE:'NCVMatrixAlloc'
│   ├── CONSTRUCTOR:'NCVMatrixAlloc<T>'
│   ├── CONSTRUCTOR:'NCVMatrixAlloc<T>'
│   │   └── PARM_DECL:''
│   │       └── TYPE_REF:'NCVMatrixAlloc<T>'
│   ├── CONSTRUCTOR:'NCVMatrixAlloc<T>'
│   │   ├── COMPOUND_STMT:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CALL_EXPR:'alloc'
│   │   │   │   │   ├── DECL_REF_EXPR:'requiredAllocSize'
│   │   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │   │   │   └── CXX_THROW_EXPR:''
│   │   │   │   │   └── MEMBER_REF_EXPR:'alloc'
│   │   │   │   │       └── DECL_REF_EXPR:'allocator'
│   │   │   │   └── DECL_REF_EXPR:'ncvStat'
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CSTYLE_CAST_EXPR:''
│   │   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │   │   │       └── MEMBER_REF_EXPR:''
│   │   │   │   │   │           └── CXX_THROW_EXPR:''
│   │   │   │   │   └── TYPE_REF:'T'
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── DECL_REF_EXPR:'width'
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── DECL_REF_EXPR:'height'
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── DECL_REF_EXPR:'pitchBytes'
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │   │   └── CXX_THROW_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── MEMBER_REF_EXPR:''
│   │   │   │           └── MEMBER_REF_EXPR:''
│   │   │   │               └── CXX_THROW_EXPR:''
│   │   │   ├── CALL_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── CALL_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── MEMBER_REF_EXPR:''
│   │   │   │           └── CXX_THROW_EXPR:''
│   │   │   ├── DECL_STMT:''
│   │   │   │   └── VAR_DECL:'ncvStat'
│   │   │   │       └── TYPE_REF:'NCVStatus'
│   │   │   ├── DECL_STMT:''
│   │   │   │   └── VAR_DECL:'widthBytes'
│   │   │   │       ├── TYPE_REF:'Ncv32u'
│   │   │   │       └── UNEXPOSED_EXPR:''
│   │   │   │           └── BINARY_OPERATOR:''
│   │   │   │               ├── OBJC_STRING_LITERAL:''
│   │   │   │               │   └── TYPE_REF:'T'
│   │   │   │               └── UNEXPOSED_EXPR:'width'
│   │   │   │                   └── UNEXPOSED_EXPR:'width'
│   │   │   │                       └── DECL_REF_EXPR:'width'
│   │   │   ├── DECL_STMT:''
│   │   │   │   └── VAR_DECL:'pitchBytes'
│   │   │   │       ├── CALL_EXPR:'alignUp'
│   │   │   │       │   ├── CALL_EXPR:'alignment'
│   │   │   │       │   │   └── MEMBER_REF_EXPR:'alignment'
│   │   │   │       │   │       └── UNEXPOSED_EXPR:'allocator'
│   │   │   │       │   │           └── DECL_REF_EXPR:'allocator'
│   │   │   │       │   ├── UNEXPOSED_EXPR:'alignUp'
│   │   │   │       │   │   └── DECL_REF_EXPR:'alignUp'
│   │   │   │       │   └── UNEXPOSED_EXPR:'widthBytes'
│   │   │   │       │       └── DECL_REF_EXPR:'widthBytes'
│   │   │   │       └── TYPE_REF:'Ncv32u'
│   │   │   ├── DECL_STMT:''
│   │   │   │   └── VAR_DECL:'requiredAllocSize'
│   │   │   │       ├── BINARY_OPERATOR:''
│   │   │   │       │   ├── UNEXPOSED_EXPR:'height'
│   │   │   │       │   │   └── DECL_REF_EXPR:'height'
│   │   │   │       │   └── UNEXPOSED_EXPR:'pitchBytes'
│   │   │   │       │       └── DECL_REF_EXPR:'pitchBytes'
│   │   │   │       └── TYPE_REF:'Ncv32u'
│   │   │   ├── DO_STMT:''
│   │   │   │   ├── COMPOUND_STMT:''
│   │   │   │   │   ├── DO_STMT:''
│   │   │   │   │   │   ├── COMPOUND_STMT:''
│   │   │   │   │   │   │   └── IF_STMT:''
│   │   │   │   │   │   │       ├── COMPOUND_STMT:''
│   │   │   │   │   │   │       │   └── DECL_STMT:''
│   │   │   │   │   │   │       │       └── VAR_DECL:'oss'
│   │   │   │   │   │   │       │           ├── NAMESPACE_REF:'std'
│   │   │   │   │   │   │       │           └── TYPE_REF:'std::ostringstream'
│   │   │   │   │   │   │       └── UNARY_OPERATOR:''
│   │   │   │   │   │   │           └── PAREN_EXPR:''
│   │   │   │   │   │   │               └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   ├── UNEXPOSED_EXPR:'NCV_SUCCESS'
│   │   │   │   │   │   │                   │   └── DECL_REF_EXPR:'NCV_SUCCESS'
│   │   │   │   │   │   │                   └── UNEXPOSED_EXPR:'ncvStat'
│   │   │   │   │   │   │                       └── DECL_REF_EXPR:'ncvStat'
│   │   │   │   │   │   └── UNEXPOSED_EXPR:''
│   │   │   │   │   │       └── INTEGER_LITERAL:''
│   │   │   │   │   └── IF_STMT:''
│   │   │   │   │       ├── RETURN_STMT:''
│   │   │   │   │       └── UNARY_OPERATOR:''
│   │   │   │   │           └── PAREN_EXPR:''
│   │   │   │   │               └── BINARY_OPERATOR:''
│   │   │   │   │                   ├── UNEXPOSED_EXPR:'NCV_SUCCESS'
│   │   │   │   │                   │   └── DECL_REF_EXPR:'NCV_SUCCESS'
│   │   │   │   │                   └── UNEXPOSED_EXPR:'ncvStat'
│   │   │   │   │                       └── DECL_REF_EXPR:'ncvStat'
│   │   │   │   └── UNEXPOSED_EXPR:''
│   │   │   │       └── INTEGER_LITERAL:''
│   │   │   └── IF_STMT:''
│   │   │       ├── BINARY_OPERATOR:''
│   │   │       │   ├── UNEXPOSED_EXPR:''
│   │   │       │   │   └── INTEGER_LITERAL:''
│   │   │       │   └── UNEXPOSED_EXPR:'pitch'
│   │   │       │       └── DECL_REF_EXPR:'pitch'
│   │   │       └── COMPOUND_STMT:''
│   │   │           ├── BINARY_OPERATOR:''
│   │   │           │   ├── DECL_REF_EXPR:'pitchBytes'
│   │   │           │   └── UNEXPOSED_EXPR:'pitch'
│   │   │           │       └── DECL_REF_EXPR:'pitch'
│   │   │           └── DO_STMT:''
│   │   │               ├── COMPOUND_STMT:''
│   │   │               │   ├── DO_STMT:''
│   │   │               │   │   ├── COMPOUND_STMT:''
│   │   │               │   │   │   └── IF_STMT:''
│   │   │               │   │   │       ├── COMPOUND_STMT:''
│   │   │               │   │   │       │   └── DECL_STMT:''
│   │   │               │   │   │       │       └── VAR_DECL:'oss'
│   │   │               │   │   │       │           ├── NAMESPACE_REF:'std'
│   │   │               │   │   │       │           └── TYPE_REF:'std::ostringstream'
│   │   │               │   │   │       └── UNARY_OPERATOR:''
│   │   │               │   │   │           └── PAREN_EXPR:''
│   │   │               │   │   │               └── BINARY_OPERATOR:''
│   │   │               │   │   │                   ├── BINARY_OPERATOR:''
│   │   │               │   │   │                   │   ├── UNEXPOSED_EXPR:'pitch'
│   │   │               │   │   │                   │   │   └── DECL_REF_EXPR:'pitch'
│   │   │               │   │   │                   │   └── UNEXPOSED_EXPR:'pitchBytes'
│   │   │               │   │   │                   │       └── DECL_REF_EXPR:'pitchBytes'
│   │   │               │   │   │                   └── BINARY_OPERATOR:''
│   │   │               │   │   │                       ├── PAREN_EXPR:''
│   │   │               │   │   │                       │   └── BINARY_OPERATOR:''
│   │   │               │   │   │                       │       ├── PAREN_EXPR:''
│   │   │               │   │   │                       │       │   └── BINARY_OPERATOR:''
│   │   │               │   │   │                       │       │       ├── CALL_EXPR:'alignment'
│   │   │               │   │   │                       │       │       │   └── MEMBER_REF_EXPR:'alignment'
│   │   │               │   │   │                       │       │       │       └── UNEXPOSED_EXPR:'allocator'
│   │   │               │   │   │                       │       │       │           └── DECL_REF_EXPR:'allocator'
│   │   │               │   │   │                       │       │       └── UNEXPOSED_EXPR:''
│   │   │               │   │   │                       │       │           └── INTEGER_LITERAL:''
│   │   │               │   │   │                       │       └── UNEXPOSED_EXPR:'pitch'
│   │   │               │   │   │                       │           └── DECL_REF_EXPR:'pitch'
│   │   │               │   │   │                       └── UNEXPOSED_EXPR:''
│   │   │               │   │   │                           └── INTEGER_LITERAL:''
│   │   │               │   │   └── UNEXPOSED_EXPR:''
│   │   │               │   │       └── INTEGER_LITERAL:''
│   │   │               │   └── IF_STMT:''
│   │   │               │       ├── RETURN_STMT:''
│   │   │               │       └── UNARY_OPERATOR:''
│   │   │               │           └── PAREN_EXPR:''
│   │   │               │               └── BINARY_OPERATOR:''
│   │   │               │                   ├── BINARY_OPERATOR:''
│   │   │               │                   │   ├── UNEXPOSED_EXPR:'pitch'
│   │   │               │                   │   │   └── DECL_REF_EXPR:'pitch'
│   │   │               │                   │   └── UNEXPOSED_EXPR:'pitchBytes'
│   │   │               │                   │       └── DECL_REF_EXPR:'pitchBytes'
│   │   │               │                   └── BINARY_OPERATOR:''
│   │   │               │                       ├── PAREN_EXPR:''
│   │   │               │                       │   └── BINARY_OPERATOR:''
│   │   │               │                       │       ├── PAREN_EXPR:''
│   │   │               │                       │       │   └── BINARY_OPERATOR:''
│   │   │               │                       │       │       ├── CALL_EXPR:'alignment'
│   │   │               │                       │       │       │   └── MEMBER_REF_EXPR:'alignment'
│   │   │               │                       │       │       │       └── UNEXPOSED_EXPR:'allocator'
│   │   │               │                       │       │       │           └── DECL_REF_EXPR:'allocator'
│   │   │               │                       │       │       └── UNEXPOSED_EXPR:''
│   │   │               │                       │       │           └── INTEGER_LITERAL:''
│   │   │               │                       │       └── UNEXPOSED_EXPR:'pitch'
│   │   │               │                       │           └── DECL_REF_EXPR:'pitch'
│   │   │               │                       └── UNEXPOSED_EXPR:''
│   │   │               │                           └── INTEGER_LITERAL:''
│   │   │               └── UNEXPOSED_EXPR:''
│   │   │                   └── INTEGER_LITERAL:''
│   │   ├── DECL_REF_EXPR:'allocator'
│   │   ├── MEMBER_REF:'allocator'
│   │   ├── PARM_DECL:'allocator'
│   │   │   └── TYPE_REF:'class INCVMemAllocator'
│   │   ├── PARM_DECL:'height'
│   │   │   └── TYPE_REF:'Ncv32u'
│   │   ├── PARM_DECL:'pitch'
│   │   │   ├── TYPE_REF:'Ncv32u'
│   │   │   └── UNEXPOSED_EXPR:''
│   │   │       └── INTEGER_LITERAL:''
│   │   └── PARM_DECL:'width'
│   │       └── TYPE_REF:'Ncv32u'
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_BASE_SPECIFIER:'NCVMatrix<T>'
│   │   ├── TEMPLATE_REF:'NCVMatrix'
│   │   └── TYPE_REF:'T'
│   ├── CXX_METHOD:'getAllocatorsAlignment'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── CALL_EXPR:'alignment'
│   │   │           └── MEMBER_REF_EXPR:'alignment'
│   │   │               └── UNEXPOSED_EXPR:'allocator'
│   │   │                   └── MEMBER_REF_EXPR:'allocator'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── CXX_METHOD:'getSegment'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── CALL_EXPR:'NCVMemSegment'
│   │   │           └── MEMBER_REF_EXPR:'allocatedMem'
│   │   └── TYPE_REF:'struct NCVMemSegment'
│   ├── CXX_METHOD:'isMemAllocated'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── BINARY_OPERATOR:''
│   │   │           ├── PAREN_EXPR:''
│   │   │           │   └── BINARY_OPERATOR:''
│   │   │           │       ├── CXX_THIS_EXPR:''
│   │   │           │       └── MEMBER_REF_EXPR:''
│   │   │           │           └── MEMBER_REF_EXPR:''
│   │   │           │               └── MEMBER_REF_EXPR:''
│   │   │           │                   └── CXX_THROW_EXPR:''
│   │   │           └── PAREN_EXPR:''
│   │   │               └── CALL_EXPR:''
│   │   │                   └── MEMBER_REF_EXPR:''
│   │   │                       └── MEMBER_REF_EXPR:''
│   │   │                           └── CXX_THROW_EXPR:''
│   │   └── TYPE_REF:'NcvBool'
│   ├── CXX_METHOD:'operator='
│   │   ├── PARM_DECL:''
│   │   │   └── TYPE_REF:'NCVMatrixAlloc<T>'
│   │   └── TYPE_REF:'NCVMatrixAlloc<T>'
│   ├── DESTRUCTOR:'~NCVMatrixAlloc<T>'
│   │   └── COMPOUND_STMT:''
│   │       ├── BINARY_OPERATOR:''
│   │       │   ├── CALL_EXPR:'dealloc'
│   │       │   │   ├── MEMBER_REF_EXPR:''
│   │       │   │   │   └── CXX_THROW_EXPR:''
│   │       │   │   └── MEMBER_REF_EXPR:'dealloc'
│   │       │   │       └── MEMBER_REF_EXPR:'allocator'
│   │       │   └── DECL_REF_EXPR:'ncvStat'
│   │       ├── CALL_EXPR:''
│   │       │   └── MEMBER_REF_EXPR:''
│   │       │       └── CXX_THROW_EXPR:''
│   │       ├── DECL_STMT:''
│   │       │   └── VAR_DECL:'ncvStat'
│   │       │       └── TYPE_REF:'NCVStatus'
│   │       └── DO_STMT:''
│   │           ├── COMPOUND_STMT:''
│   │           │   └── IF_STMT:''
│   │           │       ├── COMPOUND_STMT:''
│   │           │       │   └── DECL_STMT:''
│   │           │       │       └── VAR_DECL:'oss'
│   │           │       │           ├── NAMESPACE_REF:'std'
│   │           │       │           └── TYPE_REF:'std::ostringstream'
│   │           │       └── UNARY_OPERATOR:''
│   │           │           └── PAREN_EXPR:''
│   │           │               └── BINARY_OPERATOR:''
│   │           │                   ├── UNEXPOSED_EXPR:'NCV_SUCCESS'
│   │           │                   │   └── DECL_REF_EXPR:'NCV_SUCCESS'
│   │           │                   └── UNEXPOSED_EXPR:'ncvStat'
│   │           │                       └── DECL_REF_EXPR:'ncvStat'
│   │           └── UNEXPOSED_EXPR:''
│   │               └── INTEGER_LITERAL:''
│   ├── FIELD_DECL:'allocatedMem'
│   │   └── TYPE_REF:'struct NCVMemSegment'
│   ├── FIELD_DECL:'allocator'
│   │   └── TYPE_REF:'class INCVMemAllocator'
│   └── TEMPLATE_TYPE_PARAMETER:'T'
├── CLASS_TEMPLATE:'NCVMatrixReuse'
│   ├── CONSTRUCTOR:'NCVMatrixReuse<T>'
│   ├── CONSTRUCTOR:'NCVMatrixReuse<T>'
│   │   └── PARM_DECL:''
│   │       └── TYPE_REF:'NCVMatrixReuse<T>'
│   ├── CONSTRUCTOR:'NCVMatrixReuse<T>'
│   │   ├── COMPOUND_STMT:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── DECL_REF_EXPR:'width'
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── DECL_REF_EXPR:'height'
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── DECL_REF_EXPR:'pitchBytes'
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CSTYLE_CAST_EXPR:''
│   │   │   │   │   ├── MEMBER_REF_EXPR:'ptr'
│   │   │   │   │   │   └── MEMBER_REF_EXPR:'begin'
│   │   │   │   │   │       └── DECL_REF_EXPR:'memSegment'
│   │   │   │   │   └── TYPE_REF:'T'
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │   │   └── CXX_THROW_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:'memtype'
│   │   │   │       └── MEMBER_REF_EXPR:'begin'
│   │   │   │           └── DECL_REF_EXPR:'memSegment'
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── CALL_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── DECL_STMT:''
│   │   │   │   └── VAR_DECL:'widthBytes'
│   │   │   │       ├── TYPE_REF:'Ncv32u'
│   │   │   │       └── UNEXPOSED_EXPR:''
│   │   │   │           └── BINARY_OPERATOR:''
│   │   │   │               ├── OBJC_STRING_LITERAL:''
│   │   │   │               │   └── TYPE_REF:'T'
│   │   │   │               └── UNEXPOSED_EXPR:'width'
│   │   │   │                   └── UNEXPOSED_EXPR:'width'
│   │   │   │                       └── DECL_REF_EXPR:'width'
│   │   │   ├── DECL_STMT:''
│   │   │   │   └── VAR_DECL:'pitchBytes'
│   │   │   │       ├── CALL_EXPR:'alignUp'
│   │   │   │       │   ├── UNEXPOSED_EXPR:'alignUp'
│   │   │   │       │   │   └── DECL_REF_EXPR:'alignUp'
│   │   │   │       │   ├── UNEXPOSED_EXPR:'alignment'
│   │   │   │       │   │   └── DECL_REF_EXPR:'alignment'
│   │   │   │       │   └── UNEXPOSED_EXPR:'widthBytes'
│   │   │   │       │       └── DECL_REF_EXPR:'widthBytes'
│   │   │   │       └── TYPE_REF:'Ncv32u'
│   │   │   ├── DO_STMT:''
│   │   │   │   ├── COMPOUND_STMT:''
│   │   │   │   │   ├── DO_STMT:''
│   │   │   │   │   │   ├── COMPOUND_STMT:''
│   │   │   │   │   │   │   └── IF_STMT:''
│   │   │   │   │   │   │       ├── COMPOUND_STMT:''
│   │   │   │   │   │   │       │   └── DECL_STMT:''
│   │   │   │   │   │   │       │       └── VAR_DECL:'oss'
│   │   │   │   │   │   │       │           ├── NAMESPACE_REF:'std'
│   │   │   │   │   │   │       │           └── TYPE_REF:'std::ostringstream'
│   │   │   │   │   │   │       └── UNARY_OPERATOR:''
│   │   │   │   │   │   │           └── PAREN_EXPR:''
│   │   │   │   │   │   │               └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   ├── UNEXPOSED_EXPR:''
│   │   │   │   │   │   │                   │   └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   │       ├── UNEXPOSED_EXPR:'height'
│   │   │   │   │   │   │                   │       │   └── DECL_REF_EXPR:'height'
│   │   │   │   │   │   │                   │       └── UNEXPOSED_EXPR:'pitchBytes'
│   │   │   │   │   │   │                   │           └── DECL_REF_EXPR:'pitchBytes'
│   │   │   │   │   │   │                   └── UNEXPOSED_EXPR:'size'
│   │   │   │   │   │   │                       └── MEMBER_REF_EXPR:'size'
│   │   │   │   │   │   │                           └── DECL_REF_EXPR:'memSegment'
│   │   │   │   │   │   └── UNEXPOSED_EXPR:''
│   │   │   │   │   │       └── INTEGER_LITERAL:''
│   │   │   │   │   └── IF_STMT:''
│   │   │   │   │       ├── RETURN_STMT:''
│   │   │   │   │       └── UNARY_OPERATOR:''
│   │   │   │   │           └── PAREN_EXPR:''
│   │   │   │   │               └── BINARY_OPERATOR:''
│   │   │   │   │                   ├── UNEXPOSED_EXPR:''
│   │   │   │   │                   │   └── BINARY_OPERATOR:''
│   │   │   │   │                   │       ├── UNEXPOSED_EXPR:'height'
│   │   │   │   │                   │       │   └── DECL_REF_EXPR:'height'
│   │   │   │   │                   │       └── UNEXPOSED_EXPR:'pitchBytes'
│   │   │   │   │                   │           └── DECL_REF_EXPR:'pitchBytes'
│   │   │   │   │                   └── UNEXPOSED_EXPR:'size'
│   │   │   │   │                       └── MEMBER_REF_EXPR:'size'
│   │   │   │   │                           └── DECL_REF_EXPR:'memSegment'
│   │   │   │   └── UNEXPOSED_EXPR:''
│   │   │   │       └── INTEGER_LITERAL:''
│   │   │   └── IF_STMT:''
│   │   │       ├── BINARY_OPERATOR:''
│   │   │       │   ├── UNEXPOSED_EXPR:''
│   │   │       │   │   └── INTEGER_LITERAL:''
│   │   │       │   └── UNEXPOSED_EXPR:'pitch'
│   │   │       │       └── DECL_REF_EXPR:'pitch'
│   │   │       └── COMPOUND_STMT:''
│   │   │           ├── BINARY_OPERATOR:''
│   │   │           │   ├── DECL_REF_EXPR:'pitchBytes'
│   │   │           │   └── UNEXPOSED_EXPR:'pitch'
│   │   │           │       └── DECL_REF_EXPR:'pitch'
│   │   │           └── IF_STMT:''
│   │   │               ├── COMPOUND_STMT:''
│   │   │               │   └── DO_STMT:''
│   │   │               │       ├── COMPOUND_STMT:''
│   │   │               │       │   ├── DO_STMT:''
│   │   │               │       │   │   ├── COMPOUND_STMT:''
│   │   │               │       │   │   │   └── IF_STMT:''
│   │   │               │       │   │   │       ├── COMPOUND_STMT:''
│   │   │               │       │   │   │       │   └── DECL_STMT:''
│   │   │               │       │   │   │       │       └── VAR_DECL:'oss'
│   │   │               │       │   │   │       │           ├── NAMESPACE_REF:'std'
│   │   │               │       │   │   │       │           └── TYPE_REF:'std::ostringstream'
│   │   │               │       │   │   │       └── UNARY_OPERATOR:''
│   │   │               │       │   │   │           └── PAREN_EXPR:''
│   │   │               │       │   │   │               └── BINARY_OPERATOR:''
│   │   │               │       │   │   │                   ├── BINARY_OPERATOR:''
│   │   │               │       │   │   │                   │   ├── UNEXPOSED_EXPR:'pitch'
│   │   │               │       │   │   │                   │   │   └── DECL_REF_EXPR:'pitch'
│   │   │               │       │   │   │                   │   └── UNEXPOSED_EXPR:'pitchBytes'
│   │   │               │       │   │   │                   │       └── DECL_REF_EXPR:'pitchBytes'
│   │   │               │       │   │   │                   └── BINARY_OPERATOR:''
│   │   │               │       │   │   │                       ├── PAREN_EXPR:''
│   │   │               │       │   │   │                       │   └── BINARY_OPERATOR:''
│   │   │               │       │   │   │                       │       ├── PAREN_EXPR:''
│   │   │               │       │   │   │                       │       │   └── BINARY_OPERATOR:''
│   │   │               │       │   │   │                       │       │       ├── UNEXPOSED_EXPR:''
│   │   │               │       │   │   │                       │       │       │   └── INTEGER_LITERAL:''
│   │   │               │       │   │   │                       │       │       └── UNEXPOSED_EXPR:'alignment'
│   │   │               │       │   │   │                       │       │           └── DECL_REF_EXPR:'alignment'
│   │   │               │       │   │   │                       │       └── UNEXPOSED_EXPR:'pitch'
│   │   │               │       │   │   │                       │           └── DECL_REF_EXPR:'pitch'
│   │   │               │       │   │   │                       └── UNEXPOSED_EXPR:''
│   │   │               │       │   │   │                           └── INTEGER_LITERAL:''
│   │   │               │       │   │   └── UNEXPOSED_EXPR:''
│   │   │               │       │   │       └── INTEGER_LITERAL:''
│   │   │               │       │   └── IF_STMT:''
│   │   │               │       │       ├── RETURN_STMT:''
│   │   │               │       │       └── UNARY_OPERATOR:''
│   │   │               │       │           └── PAREN_EXPR:''
│   │   │               │       │               └── BINARY_OPERATOR:''
│   │   │               │       │                   ├── BINARY_OPERATOR:''
│   │   │               │       │                   │   ├── UNEXPOSED_EXPR:'pitch'
│   │   │               │       │                   │   │   └── DECL_REF_EXPR:'pitch'
│   │   │               │       │                   │   └── UNEXPOSED_EXPR:'pitchBytes'
│   │   │               │       │                   │       └── DECL_REF_EXPR:'pitchBytes'
│   │   │               │       │                   └── BINARY_OPERATOR:''
│   │   │               │       │                       ├── PAREN_EXPR:''
│   │   │               │       │                       │   └── BINARY_OPERATOR:''
│   │   │               │       │                       │       ├── PAREN_EXPR:''
│   │   │               │       │                       │       │   └── BINARY_OPERATOR:''
│   │   │               │       │                       │       │       ├── UNEXPOSED_EXPR:''
│   │   │               │       │                       │       │       │   └── INTEGER_LITERAL:''
│   │   │               │       │                       │       │       └── UNEXPOSED_EXPR:'alignment'
│   │   │               │       │                       │       │           └── DECL_REF_EXPR:'alignment'
│   │   │               │       │                       │       └── UNEXPOSED_EXPR:'pitch'
│   │   │               │       │                       │           └── DECL_REF_EXPR:'pitch'
│   │   │               │       │                       └── UNEXPOSED_EXPR:''
│   │   │               │       │                           └── INTEGER_LITERAL:''
│   │   │               │       └── UNEXPOSED_EXPR:''
│   │   │               │           └── INTEGER_LITERAL:''
│   │   │               ├── COMPOUND_STMT:''
│   │   │               │   └── DO_STMT:''
│   │   │               │       ├── COMPOUND_STMT:''
│   │   │               │       │   ├── DO_STMT:''
│   │   │               │       │   │   ├── COMPOUND_STMT:''
│   │   │               │       │   │   │   └── IF_STMT:''
│   │   │               │       │   │   │       ├── COMPOUND_STMT:''
│   │   │               │       │   │   │       │   └── DECL_STMT:''
│   │   │               │       │   │   │       │       └── VAR_DECL:'oss'
│   │   │               │       │   │   │       │           ├── NAMESPACE_REF:'std'
│   │   │               │       │   │   │       │           └── TYPE_REF:'std::ostringstream'
│   │   │               │       │   │   │       └── UNARY_OPERATOR:''
│   │   │               │       │   │   │           └── PAREN_EXPR:''
│   │   │               │       │   │   │               └── BINARY_OPERATOR:''
│   │   │               │       │   │   │                   ├── UNEXPOSED_EXPR:'pitch'
│   │   │               │       │   │   │                   │   └── DECL_REF_EXPR:'pitch'
│   │   │               │       │   │   │                   └── UNEXPOSED_EXPR:'widthBytes'
│   │   │               │       │   │   │                       └── DECL_REF_EXPR:'widthBytes'
│   │   │               │       │   │   └── UNEXPOSED_EXPR:''
│   │   │               │       │   │       └── INTEGER_LITERAL:''
│   │   │               │       │   └── IF_STMT:''
│   │   │               │       │       ├── RETURN_STMT:''
│   │   │               │       │       └── UNARY_OPERATOR:''
│   │   │               │       │           └── PAREN_EXPR:''
│   │   │               │       │               └── BINARY_OPERATOR:''
│   │   │               │       │                   ├── UNEXPOSED_EXPR:'pitch'
│   │   │               │       │                   │   └── DECL_REF_EXPR:'pitch'
│   │   │               │       │                   └── UNEXPOSED_EXPR:'widthBytes'
│   │   │               │       │                       └── DECL_REF_EXPR:'widthBytes'
│   │   │               │       └── UNEXPOSED_EXPR:''
│   │   │               │           └── INTEGER_LITERAL:''
│   │   │               └── UNARY_OPERATOR:''
│   │   │                   └── UNEXPOSED_EXPR:'bSkipPitchCheck'
│   │   │                       └── DECL_REF_EXPR:'bSkipPitchCheck'
│   │   ├── PARM_DECL:'alignment'
│   │   │   └── TYPE_REF:'Ncv32u'
│   │   ├── PARM_DECL:'bSkipPitchCheck'
│   │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
│   │   │   └── TYPE_REF:'NcvBool'
│   │   ├── PARM_DECL:'height'
│   │   │   └── TYPE_REF:'Ncv32u'
│   │   ├── PARM_DECL:'memSegment'
│   │   │   └── TYPE_REF:'struct NCVMemSegment'
│   │   ├── PARM_DECL:'pitch'
│   │   │   ├── TYPE_REF:'Ncv32u'
│   │   │   └── UNEXPOSED_EXPR:''
│   │   │       └── INTEGER_LITERAL:''
│   │   └── PARM_DECL:'width'
│   │       └── TYPE_REF:'Ncv32u'
│   ├── CONSTRUCTOR:'NCVMatrixReuse<T>'
│   │   ├── COMPOUND_STMT:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │   │   └── CXX_THROW_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:'width'
│   │   │   │       └── DECL_REF_EXPR:'roi'
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │   │   └── CXX_THROW_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:'height'
│   │   │   │       └── DECL_REF_EXPR:'roi'
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CALL_EXPR:''
│   │   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │   │       └── DECL_REF_EXPR:'mat'
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │   │   └── CXX_THROW_EXPR:''
│   │   │   │   └── UNARY_OPERATOR:''
│   │   │   │       └── CALL_EXPR:''
│   │   │   │           ├── MEMBER_REF_EXPR:''
│   │   │   │           │   └── DECL_REF_EXPR:'mat'
│   │   │   │           ├── MEMBER_REF_EXPR:'x'
│   │   │   │           │   └── DECL_REF_EXPR:'roi'
│   │   │   │           └── MEMBER_REF_EXPR:'y'
│   │   │   │               └── DECL_REF_EXPR:'roi'
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CALL_EXPR:''
│   │   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │   │       └── DECL_REF_EXPR:'mat'
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── CALL_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   └── DO_STMT:''
│   │   │       ├── COMPOUND_STMT:''
│   │   │       │   ├── DO_STMT:''
│   │   │       │   │   ├── COMPOUND_STMT:''
│   │   │       │   │   │   └── IF_STMT:''
│   │   │       │   │   │       ├── COMPOUND_STMT:''
│   │   │       │   │   │       │   └── DECL_STMT:''
│   │   │       │   │   │       │       └── VAR_DECL:'oss'
│   │   │       │   │   │       │           ├── NAMESPACE_REF:'std'
│   │   │       │   │   │       │           └── TYPE_REF:'std::ostringstream'
│   │   │       │   │   │       └── UNARY_OPERATOR:''
│   │   │       │   │   │           └── PAREN_EXPR:''
│   │   │       │   │   │               └── BINARY_OPERATOR:''
│   │   │       │   │   │                   ├── BINARY_OPERATOR:''
│   │   │       │   │   │                   │   ├── BINARY_OPERATOR:''
│   │   │       │   │   │                   │   │   ├── BINARY_OPERATOR:''
│   │   │       │   │   │                   │   │   │   ├── CALL_EXPR:''
│   │   │       │   │   │                   │   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │       │   │   │                   │   │   │   │       └── DECL_REF_EXPR:'mat'
│   │   │       │   │   │                   │   │   │   └── MEMBER_REF_EXPR:'x'
│   │   │       │   │   │                   │   │   │       └── DECL_REF_EXPR:'roi'
│   │   │       │   │   │                   │   │   └── BINARY_OPERATOR:''
│   │   │       │   │   │                   │   │       ├── CALL_EXPR:''
│   │   │       │   │   │                   │   │       │   └── MEMBER_REF_EXPR:''
│   │   │       │   │   │                   │   │       │       └── DECL_REF_EXPR:'mat'
│   │   │       │   │   │                   │   │       └── MEMBER_REF_EXPR:'y'
│   │   │       │   │   │                   │   │           └── DECL_REF_EXPR:'roi'
│   │   │       │   │   │                   │   └── BINARY_OPERATOR:''
│   │   │       │   │   │                   │       ├── BINARY_OPERATOR:''
│   │   │       │   │   │                   │       │   ├── UNEXPOSED_EXPR:'width'
│   │   │       │   │   │                   │       │   │   └── MEMBER_REF_EXPR:'width'
│   │   │       │   │   │                   │       │   │       └── DECL_REF_EXPR:'roi'
│   │   │       │   │   │                   │       │   └── UNEXPOSED_EXPR:'x'
│   │   │       │   │   │                   │       │       └── MEMBER_REF_EXPR:'x'
│   │   │       │   │   │                   │       │           └── DECL_REF_EXPR:'roi'
│   │   │       │   │   │                   │       └── CALL_EXPR:''
│   │   │       │   │   │                   │           └── MEMBER_REF_EXPR:''
│   │   │       │   │   │                   │               └── DECL_REF_EXPR:'mat'
│   │   │       │   │   │                   └── BINARY_OPERATOR:''
│   │   │       │   │   │                       ├── BINARY_OPERATOR:''
│   │   │       │   │   │                       │   ├── UNEXPOSED_EXPR:'height'
│   │   │       │   │   │                       │   │   └── MEMBER_REF_EXPR:'height'
│   │   │       │   │   │                       │   │       └── DECL_REF_EXPR:'roi'
│   │   │       │   │   │                       │   └── UNEXPOSED_EXPR:'y'
│   │   │       │   │   │                       │       └── MEMBER_REF_EXPR:'y'
│   │   │       │   │   │                       │           └── DECL_REF_EXPR:'roi'
│   │   │       │   │   │                       └── CALL_EXPR:''
│   │   │       │   │   │                           └── MEMBER_REF_EXPR:''
│   │   │       │   │   │                               └── DECL_REF_EXPR:'mat'
│   │   │       │   │   └── UNEXPOSED_EXPR:''
│   │   │       │   │       └── INTEGER_LITERAL:''
│   │   │       │   └── IF_STMT:''
│   │   │       │       ├── RETURN_STMT:''
│   │   │       │       └── UNARY_OPERATOR:''
│   │   │       │           └── PAREN_EXPR:''
│   │   │       │               └── BINARY_OPERATOR:''
│   │   │       │                   ├── BINARY_OPERATOR:''
│   │   │       │                   │   ├── BINARY_OPERATOR:''
│   │   │       │                   │   │   ├── BINARY_OPERATOR:''
│   │   │       │                   │   │   │   ├── CALL_EXPR:''
│   │   │       │                   │   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │       │                   │   │   │   │       └── DECL_REF_EXPR:'mat'
│   │   │       │                   │   │   │   └── MEMBER_REF_EXPR:'x'
│   │   │       │                   │   │   │       └── DECL_REF_EXPR:'roi'
│   │   │       │                   │   │   └── BINARY_OPERATOR:''
│   │   │       │                   │   │       ├── CALL_EXPR:''
│   │   │       │                   │   │       │   └── MEMBER_REF_EXPR:''
│   │   │       │                   │   │       │       └── DECL_REF_EXPR:'mat'
│   │   │       │                   │   │       └── MEMBER_REF_EXPR:'y'
│   │   │       │                   │   │           └── DECL_REF_EXPR:'roi'
│   │   │       │                   │   └── BINARY_OPERATOR:''
│   │   │       │                   │       ├── BINARY_OPERATOR:''
│   │   │       │                   │       │   ├── UNEXPOSED_EXPR:'width'
│   │   │       │                   │       │   │   └── MEMBER_REF_EXPR:'width'
│   │   │       │                   │       │   │       └── DECL_REF_EXPR:'roi'
│   │   │       │                   │       │   └── UNEXPOSED_EXPR:'x'
│   │   │       │                   │       │       └── MEMBER_REF_EXPR:'x'
│   │   │       │                   │       │           └── DECL_REF_EXPR:'roi'
│   │   │       │                   │       └── CALL_EXPR:''
│   │   │       │                   │           └── MEMBER_REF_EXPR:''
│   │   │       │                   │               └── DECL_REF_EXPR:'mat'
│   │   │       │                   └── BINARY_OPERATOR:''
│   │   │       │                       ├── BINARY_OPERATOR:''
│   │   │       │                       │   ├── UNEXPOSED_EXPR:'height'
│   │   │       │                       │   │   └── MEMBER_REF_EXPR:'height'
│   │   │       │                       │   │       └── DECL_REF_EXPR:'roi'
│   │   │       │                       │   └── UNEXPOSED_EXPR:'y'
│   │   │       │                       │       └── MEMBER_REF_EXPR:'y'
│   │   │       │                       │           └── DECL_REF_EXPR:'roi'
│   │   │       │                       └── CALL_EXPR:''
│   │   │       │                           └── MEMBER_REF_EXPR:''
│   │   │       │                               └── DECL_REF_EXPR:'mat'
│   │   │       └── UNEXPOSED_EXPR:''
│   │   │           └── INTEGER_LITERAL:''
│   │   ├── PARM_DECL:'mat'
│   │   │   ├── TEMPLATE_REF:'NCVMatrix'
│   │   │   └── TYPE_REF:'T'
│   │   └── PARM_DECL:'roi'
│   │       └── TYPE_REF:'struct NcvRect32u'
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_BASE_SPECIFIER:'NCVMatrix<T>'
│   │   ├── TEMPLATE_REF:'NCVMatrix'
│   │   └── TYPE_REF:'T'
│   ├── CXX_METHOD:'isMemReused'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── MEMBER_REF_EXPR:''
│   │   │           └── CXX_THROW_EXPR:''
│   │   └── TYPE_REF:'NcvBool'
│   ├── FIELD_DECL:'bReused'
│   │   └── TYPE_REF:'NcvBool'
│   └── TEMPLATE_TYPE_PARAMETER:'T'
├── CLASS_TEMPLATE:'NCVVector'
│   ├── CONSTRUCTOR:'NCVVector<T>'
│   │   └── PARM_DECL:''
│   │       └── TYPE_REF:'NCVVector<T>'
│   ├── CONSTRUCTOR:'NCVVector<T>'
│   │   └── COMPOUND_STMT:''
│   │       └── CALL_EXPR:'clear'
│   │           └── MEMBER_REF_EXPR:'clear'
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_METHOD:'clear'
│   │   └── COMPOUND_STMT:''
│   │       ├── BINARY_OPERATOR:''
│   │       │   ├── CXX_THIS_EXPR:''
│   │       │   └── MEMBER_REF_EXPR:'_ptr'
│   │       ├── BINARY_OPERATOR:''
│   │       │   ├── MEMBER_REF_EXPR:'_length'
│   │       │   └── UNEXPOSED_EXPR:''
│   │       │       └── INTEGER_LITERAL:''
│   │       └── BINARY_OPERATOR:''
│   │           ├── DECL_REF_EXPR:'NCVMemoryTypeNone'
│   │           └── MEMBER_REF_EXPR:'_memtype'
│   ├── CXX_METHOD:'copySolid'
│   │   ├── COMPOUND_STMT:''
│   │   │   ├── DECL_STMT:''
│   │   │   │   └── VAR_DECL:'ncvStat'
│   │   │   │       ├── TYPE_REF:'NCVStatus'
│   │   │   │       └── UNEXPOSED_EXPR:'NCV_SUCCESS'
│   │   │   │           └── DECL_REF_EXPR:'NCV_SUCCESS'
│   │   │   ├── DO_STMT:''
│   │   │   │   ├── COMPOUND_STMT:''
│   │   │   │   │   ├── DO_STMT:''
│   │   │   │   │   │   ├── COMPOUND_STMT:''
│   │   │   │   │   │   │   └── IF_STMT:''
│   │   │   │   │   │   │       ├── COMPOUND_STMT:''
│   │   │   │   │   │   │       │   └── DECL_STMT:''
│   │   │   │   │   │   │       │       └── VAR_DECL:'oss'
│   │   │   │   │   │   │       │           ├── NAMESPACE_REF:'std'
│   │   │   │   │   │   │       │           └── TYPE_REF:'std::ostringstream'
│   │   │   │   │   │   │       └── UNARY_OPERATOR:''
│   │   │   │   │   │   │           └── PAREN_EXPR:''
│   │   │   │   │   │   │               └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   ├── PAREN_EXPR:''
│   │   │   │   │   │   │                   │   └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   │       ├── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   │       │   ├── CXX_THIS_EXPR:''
│   │   │   │   │   │   │                   │       │   └── MEMBER_REF_EXPR:''
│   │   │   │   │   │   │                   │       │       └── CXX_THROW_EXPR:''
│   │   │   │   │   │   │                   │       └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                   │           ├── DECL_REF_EXPR:'NCVMemoryTypeNone'
│   │   │   │   │   │   │                   │           └── MEMBER_REF_EXPR:''
│   │   │   │   │   │   │                   │               └── CXX_THROW_EXPR:''
│   │   │   │   │   │   │                   └── PAREN_EXPR:''
│   │   │   │   │   │   │                       └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                           ├── BINARY_OPERATOR:''
│   │   │   │   │   │   │                           │   ├── CXX_THIS_EXPR:''
│   │   │   │   │   │   │                           │   └── MEMBER_REF_EXPR:''
│   │   │   │   │   │   │                           │       └── DECL_REF_EXPR:'dst'
│   │   │   │   │   │   │                           └── BINARY_OPERATOR:''
│   │   │   │   │   │   │                               ├── DECL_REF_EXPR:'NCVMemoryTypeNone'
│   │   │   │   │   │   │                               └── MEMBER_REF_EXPR:''
│   │   │   │   │   │   │                                   └── DECL_REF_EXPR:'dst'
│   │   │   │   │   │   └── UNEXPOSED_EXPR:''
│   │   │   │   │   │       └── INTEGER_LITERAL:''
│   │   │   │   │   └── IF_STMT:''
│   │   │   │   │       ├── RETURN_STMT:''
│   │   │   │   │       │   └── UNEXPOSED_EXPR:'NCV_NULL_PTR'
│   │   │   │   │       │       └── DECL_REF_EXPR:'NCV_NULL_PTR'
│   │   │   │   │       └── UNARY_OPERATOR:''
│   │   │   │   │           └── PAREN_EXPR:''
│   │   │   │   │               └── BINARY_OPERATOR:''
│   │   │   │   │                   ├── PAREN_EXPR:''
│   │   │   │   │                   │   └── BINARY_OPERATOR:''
│   │   │   │   │                   │       ├── BINARY_OPERATOR:''
│   │   │   │   │                   │       │   ├── CXX_THIS_EXPR:''
│   │   │   │   │                   │       │   └── MEMBER_REF_EXPR:''
│   │   │   │   │                   │       │       └── CXX_THROW_EXPR:''
│   │   │   │   │                   │       └── BINARY_OPERATOR:''
│   │   │   │   │                   │           ├── DECL_REF_EXPR:'NCVMemoryTypeNone'
│   │   │   │   │                   │           └── MEMBER_REF_EXPR:''
│   │   │   │   │                   │               └── CXX_THROW_EXPR:''
│   │   │   │   │                   └── PAREN_EXPR:''
│   │   │   │   │                       └── BINARY_OPERATOR:''
│   │   │   │   │                           ├── BINARY_OPERATOR:''
│   │   │   │   │                           │   ├── CXX_THIS_EXPR:''
│   │   │   │   │                           │   └── MEMBER_REF_EXPR:''
│   │   │   │   │                           │       └── DECL_REF_EXPR:'dst'
│   │   │   │   │                           └── BINARY_OPERATOR:''
│   │   │   │   │                               ├── DECL_REF_EXPR:'NCVMemoryTypeNone'
│   │   │   │   │                               └── MEMBER_REF_EXPR:''
│   │   │   │   │                                   └── DECL_REF_EXPR:'dst'
│   │   │   │   └── UNEXPOSED_EXPR:''
│   │   │   │       └── INTEGER_LITERAL:''
│   │   │   ├── IF_STMT:''
│   │   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   │   ├── UNEXPOSED_EXPR:''
│   │   │   │   │   │   └── INTEGER_LITERAL:''
│   │   │   │   │   └── UNEXPOSED_EXPR:'howMuch'
│   │   │   │   │       └── DECL_REF_EXPR:'howMuch'
│   │   │   │   ├── COMPOUND_STMT:''
│   │   │   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │   │   │   │   │   └── CXX_THROW_EXPR:''
│   │   │   │   │   │   │   └── OBJC_STRING_LITERAL:''
│   │   │   │   │   │   │       └── TYPE_REF:'T'
│   │   │   │   │   │   └── DECL_REF_EXPR:'howMuch'
│   │   │   │   │   └── DO_STMT:''
│   │   │   │   │       ├── COMPOUND_STMT:''
│   │   │   │   │       │   ├── DO_STMT:''
│   │   │   │   │       │   │   ├── COMPOUND_STMT:''
│   │   │   │   │       │   │   │   └── IF_STMT:''
│   │   │   │   │       │   │   │       ├── COMPOUND_STMT:''
│   │   │   │   │       │   │   │       │   └── DECL_STMT:''
│   │   │   │   │       │   │   │       │       └── VAR_DECL:'oss'
│   │   │   │   │       │   │   │       │           ├── NAMESPACE_REF:'std'
│   │   │   │   │       │   │   │       │           └── TYPE_REF:'std::ostringstream'
│   │   │   │   │       │   │   │       └── UNARY_OPERATOR:''
│   │   │   │   │       │   │   │           └── PAREN_EXPR:''
│   │   │   │   │       │   │   │               └── BINARY_OPERATOR:''
│   │   │   │   │       │   │   │                   ├── MEMBER_REF_EXPR:''
│   │   │   │   │       │   │   │                   │   └── DECL_REF_EXPR:'dst'
│   │   │   │   │       │   │   │                   └── MEMBER_REF_EXPR:''
│   │   │   │   │       │   │   │                       └── CXX_THROW_EXPR:''
│   │   │   │   │       │   │   └── UNEXPOSED_EXPR:''
│   │   │   │   │       │   │       └── INTEGER_LITERAL:''
│   │   │   │   │       │   └── IF_STMT:''
│   │   │   │   │       │       ├── RETURN_STMT:''
│   │   │   │   │       │       │   └── UNEXPOSED_EXPR:'NCV_MEM_COPY_ERROR'
│   │   │   │   │       │       │       └── DECL_REF_EXPR:'NCV_MEM_COPY_ERROR'
│   │   │   │   │       │       └── UNARY_OPERATOR:''
│   │   │   │   │       │           └── PAREN_EXPR:''
│   │   │   │   │       │               └── BINARY_OPERATOR:''
│   │   │   │   │       │                   ├── MEMBER_REF_EXPR:''
│   │   │   │   │       │                   │   └── DECL_REF_EXPR:'dst'
│   │   │   │   │       │                   └── MEMBER_REF_EXPR:''
│   │   │   │   │       │                       └── CXX_THROW_EXPR:''
│   │   │   │   │       └── UNEXPOSED_EXPR:''
│   │   │   │   │           └── INTEGER_LITERAL:''
│   │   │   │   └── COMPOUND_STMT:''
│   │   │   │       └── DO_STMT:''
│   │   │   │           ├── COMPOUND_STMT:''
│   │   │   │           │   ├── DO_STMT:''
│   │   │   │           │   │   ├── COMPOUND_STMT:''
│   │   │   │           │   │   │   └── IF_STMT:''
│   │   │   │           │   │   │       ├── COMPOUND_STMT:''
│   │   │   │           │   │   │       │   └── DECL_STMT:''
│   │   │   │           │   │   │       │       └── VAR_DECL:'oss'
│   │   │   │           │   │   │       │           ├── NAMESPACE_REF:'std'
│   │   │   │           │   │   │       │           └── TYPE_REF:'std::ostringstream'
│   │   │   │           │   │   │       └── UNARY_OPERATOR:''
│   │   │   │           │   │   │           └── PAREN_EXPR:''
│   │   │   │           │   │   │               └── BINARY_OPERATOR:''
│   │   │   │           │   │   │                   ├── BINARY_OPERATOR:''
│   │   │   │           │   │   │                   │   ├── BINARY_OPERATOR:''
│   │   │   │           │   │   │                   │   │   ├── BINARY_OPERATOR:''
│   │   │   │           │   │   │                   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │           │   │   │                   │   │   │   │   └── DECL_REF_EXPR:'dst'
│   │   │   │           │   │   │                   │   │   │   └── OBJC_STRING_LITERAL:''
│   │   │   │           │   │   │                   │   │   │       └── TYPE_REF:'T'
│   │   │   │           │   │   │                   │   │   └── DECL_REF_EXPR:'howMuch'
│   │   │   │           │   │   │                   │   └── BINARY_OPERATOR:''
│   │   │   │           │   │   │                   │       ├── BINARY_OPERATOR:''
│   │   │   │           │   │   │                   │       │   ├── MEMBER_REF_EXPR:''
│   │   │   │           │   │   │                   │       │   │   └── CXX_THROW_EXPR:''
│   │   │   │           │   │   │                   │       │   └── OBJC_STRING_LITERAL:''
│   │   │   │           │   │   │                   │       │       └── TYPE_REF:'T'
│   │   │   │           │   │   │                   │       └── DECL_REF_EXPR:'howMuch'
│   │   │   │           │   │   │                   └── BINARY_OPERATOR:''
│   │   │   │           │   │   │                       ├── UNEXPOSED_EXPR:''
│   │   │   │           │   │   │                       │   └── INTEGER_LITERAL:''
│   │   │   │           │   │   │                       └── UNEXPOSED_EXPR:'howMuch'
│   │   │   │           │   │   │                           └── DECL_REF_EXPR:'howMuch'
│   │   │   │           │   │   └── UNEXPOSED_EXPR:''
│   │   │   │           │   │       └── INTEGER_LITERAL:''
│   │   │   │           │   └── IF_STMT:''
│   │   │   │           │       ├── RETURN_STMT:''
│   │   │   │           │       │   └── UNEXPOSED_EXPR:'NCV_MEM_COPY_ERROR'
│   │   │   │           │       │       └── DECL_REF_EXPR:'NCV_MEM_COPY_ERROR'
│   │   │   │           │       └── UNARY_OPERATOR:''
│   │   │   │           │           └── PAREN_EXPR:''
│   │   │   │           │               └── BINARY_OPERATOR:''
│   │   │   │           │                   ├── BINARY_OPERATOR:''
│   │   │   │           │                   │   ├── BINARY_OPERATOR:''
│   │   │   │           │                   │   │   ├── BINARY_OPERATOR:''
│   │   │   │           │                   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │           │                   │   │   │   │   └── DECL_REF_EXPR:'dst'
│   │   │   │           │                   │   │   │   └── OBJC_STRING_LITERAL:''
│   │   │   │           │                   │   │   │       └── TYPE_REF:'T'
│   │   │   │           │                   │   │   └── DECL_REF_EXPR:'howMuch'
│   │   │   │           │                   │   └── BINARY_OPERATOR:''
│   │   │   │           │                   │       ├── BINARY_OPERATOR:''
│   │   │   │           │                   │       │   ├── MEMBER_REF_EXPR:''
│   │   │   │           │                   │       │   │   └── CXX_THROW_EXPR:''
│   │   │   │           │                   │       │   └── OBJC_STRING_LITERAL:''
│   │   │   │           │                   │       │       └── TYPE_REF:'T'
│   │   │   │           │                   │       └── DECL_REF_EXPR:'howMuch'
│   │   │   │           │                   └── BINARY_OPERATOR:''
│   │   │   │           │                       ├── UNEXPOSED_EXPR:''
│   │   │   │           │                       │   └── INTEGER_LITERAL:''
│   │   │   │           │                       └── UNEXPOSED_EXPR:'howMuch'
│   │   │   │           │                           └── DECL_REF_EXPR:'howMuch'
│   │   │   │           └── UNEXPOSED_EXPR:''
│   │   │   │               └── INTEGER_LITERAL:''
│   │   │   ├── IF_STMT:''
│   │   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   │   ├── DECL_REF_EXPR:'NCVMemoryTypeNone'
│   │   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   │   └── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── UNEXPOSED_EXPR:'ncvStat'
│   │   │           └── DECL_REF_EXPR:'ncvStat'
│   │   ├── PARM_DECL:'cuStream'
│   │   ├── PARM_DECL:'dst'
│   │   │   ├── TEMPLATE_REF:'NCVVector'
│   │   │   └── TYPE_REF:'T'
│   │   ├── PARM_DECL:'howMuch'
│   │   │   ├── NAMESPACE_REF:'std'
│   │   │   ├── TYPE_REF:'std::size_t'
│   │   │   └── UNEXPOSED_EXPR:''
│   │   │       └── INTEGER_LITERAL:''
│   │   └── TYPE_REF:'NCVStatus'
│   ├── CXX_METHOD:'length'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── MEMBER_REF_EXPR:''
│   │   │           └── CXX_THROW_EXPR:''
│   │   ├── NAMESPACE_REF:'std'
│   │   └── TYPE_REF:'std::size_t'
│   ├── CXX_METHOD:'memType'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── MEMBER_REF_EXPR:''
│   │   │           └── CXX_THROW_EXPR:''
│   │   └── TYPE_REF:'enum NCVMemoryType'
│   ├── CXX_METHOD:'ptr'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── MEMBER_REF_EXPR:''
│   │   │           └── CXX_THROW_EXPR:''
│   │   └── TYPE_REF:'T'
│   ├── DESTRUCTOR:'~NCVVector<T>'
│   │   └── COMPOUND_STMT:''
│   ├── FIELD_DECL:'_length'
│   │   ├── NAMESPACE_REF:'std'
│   │   └── TYPE_REF:'std::size_t'
│   ├── FIELD_DECL:'_memtype'
│   │   └── TYPE_REF:'enum NCVMemoryType'
│   ├── FIELD_DECL:'_ptr'
│   │   └── TYPE_REF:'T'
│   └── TEMPLATE_TYPE_PARAMETER:'T'
├── CLASS_TEMPLATE:'NCVVectorAlloc'
│   ├── CONSTRUCTOR:'NCVVectorAlloc<T>'
│   ├── CONSTRUCTOR:'NCVVectorAlloc<T>'
│   │   └── PARM_DECL:''
│   │       └── TYPE_REF:'NCVVectorAlloc<T>'
│   ├── CONSTRUCTOR:'NCVVectorAlloc<T>'
│   │   ├── COMPOUND_STMT:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CALL_EXPR:'alloc'
│   │   │   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   │   │   ├── OBJC_STRING_LITERAL:''
│   │   │   │   │   │   │   └── TYPE_REF:'T'
│   │   │   │   │   │   └── UNEXPOSED_EXPR:'length'
│   │   │   │   │   │       └── UNEXPOSED_EXPR:'length'
│   │   │   │   │   │           └── DECL_REF_EXPR:'length'
│   │   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │   │   │   └── CXX_THROW_EXPR:''
│   │   │   │   │   └── MEMBER_REF_EXPR:'alloc'
│   │   │   │   │       └── DECL_REF_EXPR:'allocator'
│   │   │   │   └── DECL_REF_EXPR:'ncvStat'
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CSTYLE_CAST_EXPR:''
│   │   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │   │   │       └── MEMBER_REF_EXPR:''
│   │   │   │   │   │           └── CXX_THROW_EXPR:''
│   │   │   │   │   └── TYPE_REF:'T'
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── DECL_REF_EXPR:'length'
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │   │   └── CXX_THROW_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── MEMBER_REF_EXPR:''
│   │   │   │           └── MEMBER_REF_EXPR:''
│   │   │   │               └── CXX_THROW_EXPR:''
│   │   │   ├── CALL_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── CALL_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── MEMBER_REF_EXPR:''
│   │   │   │           └── CXX_THROW_EXPR:''
│   │   │   ├── DECL_STMT:''
│   │   │   │   └── VAR_DECL:'ncvStat'
│   │   │   │       └── TYPE_REF:'NCVStatus'
│   │   │   └── DO_STMT:''
│   │   │       ├── COMPOUND_STMT:''
│   │   │       │   ├── DO_STMT:''
│   │   │       │   │   ├── COMPOUND_STMT:''
│   │   │       │   │   │   └── IF_STMT:''
│   │   │       │   │   │       ├── COMPOUND_STMT:''
│   │   │       │   │   │       │   └── DECL_STMT:''
│   │   │       │   │   │       │       └── VAR_DECL:'oss'
│   │   │       │   │   │       │           ├── NAMESPACE_REF:'std'
│   │   │       │   │   │       │           └── TYPE_REF:'std::ostringstream'
│   │   │       │   │   │       └── UNARY_OPERATOR:''
│   │   │       │   │   │           └── PAREN_EXPR:''
│   │   │       │   │   │               └── BINARY_OPERATOR:''
│   │   │       │   │   │                   ├── UNEXPOSED_EXPR:'NCV_SUCCESS'
│   │   │       │   │   │                   │   └── DECL_REF_EXPR:'NCV_SUCCESS'
│   │   │       │   │   │                   └── UNEXPOSED_EXPR:'ncvStat'
│   │   │       │   │   │                       └── DECL_REF_EXPR:'ncvStat'
│   │   │       │   │   └── UNEXPOSED_EXPR:''
│   │   │       │   │       └── INTEGER_LITERAL:''
│   │   │       │   └── IF_STMT:''
│   │   │       │       ├── RETURN_STMT:''
│   │   │       │       └── UNARY_OPERATOR:''
│   │   │       │           └── PAREN_EXPR:''
│   │   │       │               └── BINARY_OPERATOR:''
│   │   │       │                   ├── UNEXPOSED_EXPR:'NCV_SUCCESS'
│   │   │       │                   │   └── DECL_REF_EXPR:'NCV_SUCCESS'
│   │   │       │                   └── UNEXPOSED_EXPR:'ncvStat'
│   │   │       │                       └── DECL_REF_EXPR:'ncvStat'
│   │   │       └── UNEXPOSED_EXPR:''
│   │   │           └── INTEGER_LITERAL:''
│   │   ├── DECL_REF_EXPR:'allocator'
│   │   ├── MEMBER_REF:'allocator'
│   │   ├── PARM_DECL:'allocator'
│   │   │   └── TYPE_REF:'class INCVMemAllocator'
│   │   └── PARM_DECL:'length'
│   │       └── TYPE_REF:'Ncv32u'
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_BASE_SPECIFIER:'NCVVector<T>'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'T'
│   ├── CXX_METHOD:'getAllocatorsAlignment'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── CALL_EXPR:'alignment'
│   │   │           └── MEMBER_REF_EXPR:'alignment'
│   │   │               └── UNEXPOSED_EXPR:'allocator'
│   │   │                   └── MEMBER_REF_EXPR:'allocator'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── CXX_METHOD:'getSegment'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── CALL_EXPR:'NCVMemSegment'
│   │   │           └── MEMBER_REF_EXPR:'allocatedMem'
│   │   └── TYPE_REF:'struct NCVMemSegment'
│   ├── CXX_METHOD:'isMemAllocated'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── BINARY_OPERATOR:''
│   │   │           ├── PAREN_EXPR:''
│   │   │           │   └── BINARY_OPERATOR:''
│   │   │           │       ├── CXX_THIS_EXPR:''
│   │   │           │       └── MEMBER_REF_EXPR:''
│   │   │           │           └── MEMBER_REF_EXPR:''
│   │   │           │               └── MEMBER_REF_EXPR:''
│   │   │           │                   └── CXX_THROW_EXPR:''
│   │   │           └── PAREN_EXPR:''
│   │   │               └── CALL_EXPR:''
│   │   │                   └── MEMBER_REF_EXPR:''
│   │   │                       └── MEMBER_REF_EXPR:''
│   │   │                           └── CXX_THROW_EXPR:''
│   │   └── TYPE_REF:'NcvBool'
│   ├── CXX_METHOD:'operator='
│   │   ├── PARM_DECL:''
│   │   │   ├── TEMPLATE_REF:'NCVVectorAlloc'
│   │   │   └── TYPE_REF:'T'
│   │   └── TYPE_REF:'NCVVectorAlloc<T>'
│   ├── DESTRUCTOR:'~NCVVectorAlloc<T>'
│   │   └── COMPOUND_STMT:''
│   │       ├── BINARY_OPERATOR:''
│   │       │   ├── CALL_EXPR:'dealloc'
│   │       │   │   ├── MEMBER_REF_EXPR:''
│   │       │   │   │   └── CXX_THROW_EXPR:''
│   │       │   │   └── MEMBER_REF_EXPR:'dealloc'
│   │       │   │       └── MEMBER_REF_EXPR:'allocator'
│   │       │   └── DECL_REF_EXPR:'ncvStat'
│   │       ├── CALL_EXPR:''
│   │       │   └── MEMBER_REF_EXPR:''
│   │       │       └── CXX_THROW_EXPR:''
│   │       ├── DECL_STMT:''
│   │       │   └── VAR_DECL:'ncvStat'
│   │       │       └── TYPE_REF:'NCVStatus'
│   │       └── DO_STMT:''
│   │           ├── COMPOUND_STMT:''
│   │           │   └── IF_STMT:''
│   │           │       ├── COMPOUND_STMT:''
│   │           │       │   └── DECL_STMT:''
│   │           │       │       └── VAR_DECL:'oss'
│   │           │       │           ├── NAMESPACE_REF:'std'
│   │           │       │           └── TYPE_REF:'std::ostringstream'
│   │           │       └── UNARY_OPERATOR:''
│   │           │           └── PAREN_EXPR:''
│   │           │               └── BINARY_OPERATOR:''
│   │           │                   ├── UNEXPOSED_EXPR:'NCV_SUCCESS'
│   │           │                   │   └── DECL_REF_EXPR:'NCV_SUCCESS'
│   │           │                   └── UNEXPOSED_EXPR:'ncvStat'
│   │           │                       └── DECL_REF_EXPR:'ncvStat'
│   │           └── UNEXPOSED_EXPR:''
│   │               └── INTEGER_LITERAL:''
│   ├── FIELD_DECL:'allocatedMem'
│   │   └── TYPE_REF:'struct NCVMemSegment'
│   ├── FIELD_DECL:'allocator'
│   │   └── TYPE_REF:'class INCVMemAllocator'
│   └── TEMPLATE_TYPE_PARAMETER:'T'
├── CLASS_TEMPLATE:'NCVVectorReuse'
│   ├── CONSTRUCTOR:'NCVVectorReuse<T>'
│   ├── CONSTRUCTOR:'NCVVectorReuse<T>'
│   │   └── PARM_DECL:''
│   │       └── TYPE_REF:'NCVVectorReuse<T>'
│   ├── CONSTRUCTOR:'NCVVectorReuse<T>'
│   │   ├── COMPOUND_STMT:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   │   ├── OBJC_STRING_LITERAL:''
│   │   │   │   │   │   └── TYPE_REF:'T'
│   │   │   │   │   └── UNEXPOSED_EXPR:'size'
│   │   │   │   │       └── MEMBER_REF_EXPR:'size'
│   │   │   │   │           └── DECL_REF_EXPR:'memSegment'
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CSTYLE_CAST_EXPR:''
│   │   │   │   │   ├── MEMBER_REF_EXPR:'ptr'
│   │   │   │   │   │   └── MEMBER_REF_EXPR:'begin'
│   │   │   │   │   │       └── DECL_REF_EXPR:'memSegment'
│   │   │   │   │   └── TYPE_REF:'T'
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │   │   └── CXX_THROW_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:'memtype'
│   │   │   │       └── MEMBER_REF_EXPR:'begin'
│   │   │   │           └── DECL_REF_EXPR:'memSegment'
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   └── CALL_EXPR:''
│   │   │       └── MEMBER_REF_EXPR:''
│   │   │           └── CXX_THROW_EXPR:''
│   │   └── PARM_DECL:'memSegment'
│   │       └── TYPE_REF:'struct NCVMemSegment'
│   ├── CONSTRUCTOR:'NCVVectorReuse<T>'
│   │   ├── COMPOUND_STMT:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── DECL_REF_EXPR:'length'
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CSTYLE_CAST_EXPR:''
│   │   │   │   │   ├── MEMBER_REF_EXPR:'ptr'
│   │   │   │   │   │   └── MEMBER_REF_EXPR:'begin'
│   │   │   │   │   │       └── DECL_REF_EXPR:'memSegment'
│   │   │   │   │   └── TYPE_REF:'T'
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── MEMBER_REF_EXPR:''
│   │   │   │   │   └── CXX_THROW_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:'memtype'
│   │   │   │       └── MEMBER_REF_EXPR:'begin'
│   │   │   │           └── DECL_REF_EXPR:'memSegment'
│   │   │   ├── BINARY_OPERATOR:''
│   │   │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   ├── CALL_EXPR:''
│   │   │   │   └── MEMBER_REF_EXPR:''
│   │   │   │       └── CXX_THROW_EXPR:''
│   │   │   └── DO_STMT:''
│   │   │       ├── COMPOUND_STMT:''
│   │   │       │   ├── DO_STMT:''
│   │   │       │   │   ├── COMPOUND_STMT:''
│   │   │       │   │   │   └── IF_STMT:''
│   │   │       │   │   │       ├── COMPOUND_STMT:''
│   │   │       │   │   │       │   └── DECL_STMT:''
│   │   │       │   │   │       │       └── VAR_DECL:'oss'
│   │   │       │   │   │       │           ├── NAMESPACE_REF:'std'
│   │   │       │   │   │       │           └── TYPE_REF:'std::ostringstream'
│   │   │       │   │   │       └── UNARY_OPERATOR:''
│   │   │       │   │   │           └── PAREN_EXPR:''
│   │   │       │   │   │               └── BINARY_OPERATOR:''
│   │   │       │   │   │                   ├── BINARY_OPERATOR:''
│   │   │       │   │   │                   │   ├── OBJC_STRING_LITERAL:''
│   │   │       │   │   │                   │   │   └── TYPE_REF:'T'
│   │   │       │   │   │                   │   └── UNEXPOSED_EXPR:'length'
│   │   │       │   │   │                   │       └── UNEXPOSED_EXPR:'length'
│   │   │       │   │   │                   │           └── DECL_REF_EXPR:'length'
│   │   │       │   │   │                   └── UNEXPOSED_EXPR:'size'
│   │   │       │   │   │                       └── MEMBER_REF_EXPR:'size'
│   │   │       │   │   │                           └── DECL_REF_EXPR:'memSegment'
│   │   │       │   │   └── UNEXPOSED_EXPR:''
│   │   │       │   │       └── INTEGER_LITERAL:''
│   │   │       │   └── IF_STMT:''
│   │   │       │       ├── RETURN_STMT:''
│   │   │       │       └── UNARY_OPERATOR:''
│   │   │       │           └── PAREN_EXPR:''
│   │   │       │               └── BINARY_OPERATOR:''
│   │   │       │                   ├── BINARY_OPERATOR:''
│   │   │       │                   │   ├── OBJC_STRING_LITERAL:''
│   │   │       │                   │   │   └── TYPE_REF:'T'
│   │   │       │                   │   └── UNEXPOSED_EXPR:'length'
│   │   │       │                   │       └── UNEXPOSED_EXPR:'length'
│   │   │       │                   │           └── DECL_REF_EXPR:'length'
│   │   │       │                   └── UNEXPOSED_EXPR:'size'
│   │   │       │                       └── MEMBER_REF_EXPR:'size'
│   │   │       │                           └── DECL_REF_EXPR:'memSegment'
│   │   │       └── UNEXPOSED_EXPR:''
│   │   │           └── INTEGER_LITERAL:''
│   │   ├── PARM_DECL:'length'
│   │   │   └── TYPE_REF:'Ncv32u'
│   │   └── PARM_DECL:'memSegment'
│   │       └── TYPE_REF:'struct NCVMemSegment'
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_ACCESS_SPEC_DECL:''
│   ├── CXX_BASE_SPECIFIER:'NCVVector<T>'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'T'
│   ├── CXX_METHOD:'isMemReused'
│   │   ├── COMPOUND_STMT:''
│   │   │   └── RETURN_STMT:''
│   │   │       └── MEMBER_REF_EXPR:''
│   │   │           └── CXX_THROW_EXPR:''
│   │   └── TYPE_REF:'NcvBool'
│   ├── FIELD_DECL:'bReused'
│   │   └── TYPE_REF:'NcvBool'
│   └── TEMPLATE_TYPE_PARAMETER:'T'
├── DESTRUCTOR:'~INCVMemAllocator'
│   ├── COMPOUND_STMT:''
│   └── TYPE_REF:'class INCVMemAllocator'
├── ENUM_DECL:''
│   ├── ENUM_CONSTANT_DECL:'NCV_ALLOCATOR_BAD_ALLOC'
│   ├── ENUM_CONSTANT_DECL:'NCV_ALLOCATOR_BAD_DEALLOC'
│   ├── ENUM_CONSTANT_DECL:'NCV_ALLOCATOR_BAD_REUSE'
│   ├── ENUM_CONSTANT_DECL:'NCV_ALLOCATOR_DEALLOC_ORDER'
│   ├── ENUM_CONSTANT_DECL:'NCV_ALLOCATOR_INSUFFICIENT_CAPACITY'
│   ├── ENUM_CONSTANT_DECL:'NCV_ALLOCATOR_NOT_INITIALIZED'
│   ├── ENUM_CONSTANT_DECL:'NCV_CUDA_ERROR'
│   ├── ENUM_CONSTANT_DECL:'NCV_DIMENSIONS_INVALID'
│   ├── ENUM_CONSTANT_DECL:'NCV_FILE_ERROR'
│   ├── ENUM_CONSTANT_DECL:'NCV_HAAR_INVALID_PIXEL_STEP'
│   ├── ENUM_CONSTANT_DECL:'NCV_HAAR_TOO_LARGE_FEATURES'
│   ├── ENUM_CONSTANT_DECL:'NCV_HAAR_TOO_MANY_FEATURES_IN_CASCADE'
│   ├── ENUM_CONSTANT_DECL:'NCV_HAAR_TOO_MANY_FEATURES_IN_CLASSIFIER'
│   ├── ENUM_CONSTANT_DECL:'NCV_HAAR_XML_LOADING_EXCEPTION'
│   ├── ENUM_CONSTANT_DECL:'NCV_INCONSISTENT_INPUT'
│   ├── ENUM_CONSTANT_DECL:'NCV_INVALID_ROI'
│   ├── ENUM_CONSTANT_DECL:'NCV_INVALID_SCALE'
│   ├── ENUM_CONSTANT_DECL:'NCV_INVALID_STEP'
│   ├── ENUM_CONSTANT_DECL:'NCV_LAST_STATUS'
│   ├── ENUM_CONSTANT_DECL:'NCV_MEM_COPY_ERROR'
│   ├── ENUM_CONSTANT_DECL:'NCV_MEM_INSUFFICIENT_CAPACITY'
│   ├── ENUM_CONSTANT_DECL:'NCV_MEM_RESIDENCE_ERROR'
│   ├── ENUM_CONSTANT_DECL:'NCV_NOIMPL_HAAR_TILTED_FEATURES'
│   ├── ENUM_CONSTANT_DECL:'NCV_NOT_IMPLEMENTED'
│   ├── ENUM_CONSTANT_DECL:'NCV_NPP_ERROR'
│   ├── ENUM_CONSTANT_DECL:'NCV_NULL_PTR'
│   ├── ENUM_CONSTANT_DECL:'NCV_SUCCESS'
│   ├── ENUM_CONSTANT_DECL:'NCV_TEXTURE_BIND_ERROR'
│   ├── ENUM_CONSTANT_DECL:'NCV_UNKNOWN_ERROR'
│   ├── ENUM_CONSTANT_DECL:'NCV_WARNING_HAAR_DETECTIONS_VECTOR_OVERFLOW'
│   ├── ENUM_CONSTANT_DECL:'NPPST_CUDA_KERNEL_EXECUTION_ERROR'
│   ├── ENUM_CONSTANT_DECL:'NPPST_ERROR'
│   ├── ENUM_CONSTANT_DECL:'NPPST_INVALID_ROI'
│   ├── ENUM_CONSTANT_DECL:'NPPST_INVALID_SCALE'
│   ├── ENUM_CONSTANT_DECL:'NPPST_INVALID_STEP'
│   ├── ENUM_CONSTANT_DECL:'NPPST_MEMCPY_ERROR'
│   ├── ENUM_CONSTANT_DECL:'NPPST_MEMFREE_ERR'
│   ├── ENUM_CONSTANT_DECL:'NPPST_MEM_ALLOC_ERR'
│   ├── ENUM_CONSTANT_DECL:'NPPST_MEM_INSUFFICIENT_BUFFER'
│   ├── ENUM_CONSTANT_DECL:'NPPST_MEM_INTERNAL_ERROR'
│   ├── ENUM_CONSTANT_DECL:'NPPST_MEM_RESIDENCE_ERROR'
│   ├── ENUM_CONSTANT_DECL:'NPPST_NULL_POINTER_ERROR'
│   ├── ENUM_CONSTANT_DECL:'NPPST_SUCCESS'
│   │   └── UNEXPOSED_EXPR:''
│   │       └── DECL_REF_EXPR:'NCV_SUCCESS'
│   └── ENUM_CONSTANT_DECL:'NPPST_TEXTURE_BIND_ERROR'
├── ENUM_DECL:'NCVMemoryType'
│   ├── ENUM_CONSTANT_DECL:'NCVMemoryTypeDevice'
│   ├── ENUM_CONSTANT_DECL:'NCVMemoryTypeHostPageable'
│   ├── ENUM_CONSTANT_DECL:'NCVMemoryTypeHostPinned'
│   └── ENUM_CONSTANT_DECL:'NCVMemoryTypeNone'
├── FUNCTION_DECL:'alignUp'
│   ├── PARM_DECL:'alignment'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'what'
│   │   └── TYPE_REF:'Ncv32u'
│   └── TYPE_REF:'Ncv32u'
├── FUNCTION_DECL:'memSegCopyHelper'
│   ├── PARM_DECL:'cuStream'
│   ├── PARM_DECL:'dst'
│   ├── PARM_DECL:'dstType'
│   │   └── TYPE_REF:'enum NCVMemoryType'
│   ├── PARM_DECL:'src'
│   ├── PARM_DECL:'srcType'
│   │   └── TYPE_REF:'enum NCVMemoryType'
│   ├── PARM_DECL:'sz'
│   │   ├── NAMESPACE_REF:'std'
│   │   └── TYPE_REF:'std::size_t'
│   └── TYPE_REF:'NCVStatus'
├── FUNCTION_DECL:'memSegCopyHelper2D'
│   ├── PARM_DECL:'cuStream'
│   ├── PARM_DECL:'dst'
│   ├── PARM_DECL:'dstPitch'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'dstType'
│   │   └── TYPE_REF:'enum NCVMemoryType'
│   ├── PARM_DECL:'height'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'src'
│   ├── PARM_DECL:'srcPitch'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'srcType'
│   │   └── TYPE_REF:'enum NCVMemoryType'
│   ├── PARM_DECL:'widthbytes'
│   │   └── TYPE_REF:'Ncv32u'
│   └── TYPE_REF:'NCVStatus'
├── FUNCTION_DECL:'ncvDebugOutput'
│   └── PARM_DECL:'msg'
│       ├── NAMESPACE_REF:'std'
│       └── TYPE_REF:'std::string'
├── FUNCTION_DECL:'ncvDrawRects_32u_device'
│   ├── PARM_DECL:'color'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'cuStream'
│   ├── PARM_DECL:'d_dst'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'d_rects'
│   │   └── TYPE_REF:'struct NcvRect32u'
│   ├── PARM_DECL:'dstHeight'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'dstStride'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'dstWidth'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'numRects'
│   │   └── TYPE_REF:'Ncv32u'
│   └── TYPE_REF:'NCVStatus'
├── FUNCTION_DECL:'ncvDrawRects_32u_host'
│   ├── PARM_DECL:'color'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'dstHeight'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'dstStride'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'dstWidth'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'h_dst'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'h_rects'
│   │   └── TYPE_REF:'struct NcvRect32u'
│   ├── PARM_DECL:'numRects'
│   │   └── TYPE_REF:'Ncv32u'
│   └── TYPE_REF:'NCVStatus'
├── FUNCTION_DECL:'ncvDrawRects_8u_device'
│   ├── PARM_DECL:'color'
│   │   └── TYPE_REF:'Ncv8u'
│   ├── PARM_DECL:'cuStream'
│   ├── PARM_DECL:'d_dst'
│   │   └── TYPE_REF:'Ncv8u'
│   ├── PARM_DECL:'d_rects'
│   │   └── TYPE_REF:'struct NcvRect32u'
│   ├── PARM_DECL:'dstHeight'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'dstStride'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'dstWidth'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'numRects'
│   │   └── TYPE_REF:'Ncv32u'
│   └── TYPE_REF:'NCVStatus'
├── FUNCTION_DECL:'ncvDrawRects_8u_host'
│   ├── PARM_DECL:'color'
│   │   └── TYPE_REF:'Ncv8u'
│   ├── PARM_DECL:'dstHeight'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'dstStride'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'dstWidth'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'h_dst'
│   │   └── TYPE_REF:'Ncv8u'
│   ├── PARM_DECL:'h_rects'
│   │   └── TYPE_REF:'struct NcvRect32u'
│   ├── PARM_DECL:'numRects'
│   │   └── TYPE_REF:'Ncv32u'
│   └── TYPE_REF:'NCVStatus'
├── FUNCTION_DECL:'ncvGroupRectangles_host'
│   ├── PARM_DECL:'hypotheses'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'struct NcvRect32u'
│   ├── PARM_DECL:'hypothesesWeights'
│   │   ├── TEMPLATE_REF:'NCVVector'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'intersectEps'
│   │   └── TYPE_REF:'Ncv32f'
│   ├── PARM_DECL:'minNeighbors'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── PARM_DECL:'numHypotheses'
│   │   └── TYPE_REF:'Ncv32u'
│   └── TYPE_REF:'NCVStatus'
├── FUNCTION_DECL:'ncvSetDebugOutputHandler'
│   └── PARM_DECL:'func'
│       └── TYPE_REF:'NCVDebugOutputHandler'
├── INCLUSION_DIRECTIVE:'cuda_runtime.h'
├── INCLUSION_DIRECTIVE:'iostream'
├── INCLUSION_DIRECTIVE:'pcl/console/print.h'
├── INCLUSION_DIRECTIVE:'sstream'
├── MACRO_DEFINITION:'CLAMP'
├── MACRO_DEFINITION:'CLAMP_0_255'
├── MACRO_DEFINITION:'CLAMP_BOTTOM'
├── MACRO_DEFINITION:'CLAMP_TOP'
├── MACRO_DEFINITION:'NCV_CT_ASSERT'
├── MACRO_DEFINITION:'NCV_CT_PREP_PASTE'
├── MACRO_DEFINITION:'NCV_CT_PREP_PASTE_AUX'
├── MACRO_DEFINITION:'NCV_EXPORTS'
├── MACRO_DEFINITION:'NCV_RESET_SKIP_COND'
├── MACRO_DEFINITION:'NCV_SET_SKIP_COND'
├── MACRO_DEFINITION:'NCV_SKIP_COND_BEGIN'
├── MACRO_DEFINITION:'NCV_SKIP_COND_END'
├── MACRO_DEFINITION:'PCL_GPU_PEOPLE__NCV_HPP_'
├── MACRO_DEFINITION:'SQR'
├── MACRO_DEFINITION:'SUB_BEGIN'
├── MACRO_DEFINITION:'SUB_CALL'
├── MACRO_DEFINITION:'SUB_END'
├── MACRO_DEFINITION:'__align__'
├── MACRO_DEFINITION:'ncvAssertCUDALastErrorReturn'
├── MACRO_DEFINITION:'ncvAssertCUDAReturn'
├── MACRO_DEFINITION:'ncvAssertPrintCheck'
├── MACRO_DEFINITION:'ncvAssertPrintReturn'
├── MACRO_DEFINITION:'ncvAssertReturn'
├── MACRO_DEFINITION:'ncvAssertReturnNcvStat'
├── MACRO_DEFINITION:'ncvSafeMatAlloc'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_CT_ASSERT'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'NCV_EXPORTS'
├── MACRO_INSTANTIATION:'__unix__'
├── MACRO_INSTANTIATION:'ncvAssertPrintCheck'
├── MACRO_INSTANTIATION:'ncvAssertPrintCheck'
├── MACRO_INSTANTIATION:'ncvAssertPrintCheck'
├── MACRO_INSTANTIATION:'ncvAssertPrintReturn'
├── MACRO_INSTANTIATION:'ncvAssertPrintReturn'
├── MACRO_INSTANTIATION:'ncvAssertPrintReturn'
├── MACRO_INSTANTIATION:'ncvAssertPrintReturn'
├── MACRO_INSTANTIATION:'ncvAssertPrintReturn'
├── MACRO_INSTANTIATION:'ncvAssertPrintReturn'
├── MACRO_INSTANTIATION:'ncvAssertPrintReturn'
├── MACRO_INSTANTIATION:'ncvAssertPrintReturn'
├── MACRO_INSTANTIATION:'ncvAssertReturn'
├── MACRO_INSTANTIATION:'ncvAssertReturn'
├── MACRO_INSTANTIATION:'ncvAssertReturn'
├── MACRO_INSTANTIATION:'ncvAssertReturn'
├── MACRO_INSTANTIATION:'ncvAssertReturn'
├── MACRO_INSTANTIATION:'ncvAssertReturn'
├── MACRO_INSTANTIATION:'ncvAssertReturn'
├── MACRO_INSTANTIATION:'ncvAssertReturn'
├── NAMESPACE:'NcvCTprep'
│   ├── CLASS_TEMPLATE:'CT_ASSERT_FAILURE'
│   │   └── TEMPLATE_NON_TYPE_PARAMETER:'x'
│   ├── CLASS_TEMPLATE:'assertTest'
│   │   └── TEMPLATE_NON_TYPE_PARAMETER:'x'
│   └── STRUCT_DECL:'CT_ASSERT_FAILURE'
│       └── CXX_NULL_PTR_LITERAL_EXPR:''
├── STRUCT_DECL:'NCVMemPtr'
│   ├── CXX_METHOD:'clear'
│   ├── FIELD_DECL:'memtype'
│   │   └── TYPE_REF:'enum NCVMemoryType'
│   └── FIELD_DECL:'ptr'
├── STRUCT_DECL:'NCVMemSegment'
│   ├── CXX_METHOD:'clear'
│   ├── FIELD_DECL:'begin'
│   │   └── TYPE_REF:'struct NCVMemPtr'
│   └── FIELD_DECL:'size'
│       ├── NAMESPACE_REF:'std'
│       └── TYPE_REF:'std::size_t'
├── STRUCT_DECL:'NcvPoint2D32s'
│   ├── FIELD_DECL:'__device__'
│   ├── FIELD_DECL:'x'
│   │   └── TYPE_REF:'Ncv32s'
│   └── FIELD_DECL:'y'
│       └── TYPE_REF:'Ncv32s'
├── STRUCT_DECL:'NcvPoint2D32u'
│   ├── FIELD_DECL:'__device__'
│   ├── FIELD_DECL:'x'
│   │   └── TYPE_REF:'Ncv32u'
│   └── FIELD_DECL:'y'
│       └── TYPE_REF:'Ncv32u'
├── STRUCT_DECL:'NcvRect32s'
│   ├── FIELD_DECL:'__device__'
│   ├── FIELD_DECL:'height'
│   │   └── TYPE_REF:'Ncv32s'
│   ├── FIELD_DECL:'width'
│   │   └── TYPE_REF:'Ncv32s'
│   ├── FIELD_DECL:'x'
│   │   └── TYPE_REF:'Ncv32s'
│   └── FIELD_DECL:'y'
│       └── TYPE_REF:'Ncv32s'
├── STRUCT_DECL:'NcvRect32u'
│   ├── FIELD_DECL:'__device__'
│   ├── FIELD_DECL:'height'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── FIELD_DECL:'width'
│   │   └── TYPE_REF:'Ncv32u'
│   ├── FIELD_DECL:'x'
│   │   └── TYPE_REF:'Ncv32u'
│   └── FIELD_DECL:'y'
│       └── TYPE_REF:'Ncv32u'
├── STRUCT_DECL:'NcvRect8u'
│   ├── FIELD_DECL:'__device__'
│   ├── FIELD_DECL:'height'
│   │   └── TYPE_REF:'Ncv8u'
│   ├── FIELD_DECL:'width'
│   │   └── TYPE_REF:'Ncv8u'
│   ├── FIELD_DECL:'x'
│   │   └── TYPE_REF:'Ncv8u'
│   └── FIELD_DECL:'y'
│       └── TYPE_REF:'Ncv8u'
├── STRUCT_DECL:'NcvSize32s'
│   ├── FIELD_DECL:'__device__'
│   ├── FIELD_DECL:'height'
│   │   └── TYPE_REF:'Ncv32s'
│   └── FIELD_DECL:'width'
│       └── TYPE_REF:'Ncv32s'
├── STRUCT_DECL:'NcvSize32u'
│   ├── FIELD_DECL:'__device__'
│   ├── FIELD_DECL:'height'
│   │   └── TYPE_REF:'Ncv32u'
│   └── FIELD_DECL:'width'
│       └── TYPE_REF:'Ncv32u'
├── TYPEDEF_DECL:'__ct_assert_typedef_191'
│   ├── NAMESPACE_REF:'NcvCTprep'
│   ├── TEMPLATE_REF:'assertTest'
│   └── UNEXPOSED_EXPR:''
│       └── OBJC_STRING_LITERAL:''
│           ├── CSTYLE_CAST_EXPR:''
│           │   └── PAREN_EXPR:''
│           │       └── BINARY_OPERATOR:''
│           │           ├── OBJC_STRING_LITERAL:''
│           │           │   └── TYPE_REF:'NcvBool'
│           │           └── UNEXPOSED_EXPR:''
│           │               └── INTEGER_LITERAL:''
│           ├── NAMESPACE_REF:'NcvCTprep'
│           └── TEMPLATE_REF:'CT_ASSERT_FAILURE'
├── TYPEDEF_DECL:'__ct_assert_typedef_192'
│   ├── NAMESPACE_REF:'NcvCTprep'
│   ├── TEMPLATE_REF:'assertTest'
│   └── UNEXPOSED_EXPR:''
│       └── OBJC_STRING_LITERAL:''
│           ├── CSTYLE_CAST_EXPR:''
│           │   └── PAREN_EXPR:''
│           │       └── BINARY_OPERATOR:''
│           │           ├── OBJC_STRING_LITERAL:''
│           │           │   └── TYPE_REF:'Ncv64s'
│           │           └── UNEXPOSED_EXPR:''
│           │               └── INTEGER_LITERAL:''
│           ├── NAMESPACE_REF:'NcvCTprep'
│           └── TEMPLATE_REF:'CT_ASSERT_FAILURE'
├── TYPEDEF_DECL:'__ct_assert_typedef_193'
│   ├── NAMESPACE_REF:'NcvCTprep'
│   ├── TEMPLATE_REF:'assertTest'
│   └── UNEXPOSED_EXPR:''
│       └── OBJC_STRING_LITERAL:''
│           ├── CSTYLE_CAST_EXPR:''
│           │   └── PAREN_EXPR:''
│           │       └── BINARY_OPERATOR:''
│           │           ├── OBJC_STRING_LITERAL:''
│           │           │   └── TYPE_REF:'Ncv64u'
│           │           └── UNEXPOSED_EXPR:''
│           │               └── INTEGER_LITERAL:''
│           ├── NAMESPACE_REF:'NcvCTprep'
│           └── TEMPLATE_REF:'CT_ASSERT_FAILURE'
├── TYPEDEF_DECL:'__ct_assert_typedef_194'
│   ├── NAMESPACE_REF:'NcvCTprep'
│   ├── TEMPLATE_REF:'assertTest'
│   └── UNEXPOSED_EXPR:''
│       └── OBJC_STRING_LITERAL:''
│           ├── CSTYLE_CAST_EXPR:''
│           │   └── PAREN_EXPR:''
│           │       └── BINARY_OPERATOR:''
│           │           ├── OBJC_STRING_LITERAL:''
│           │           │   └── TYPE_REF:'Ncv32s'
│           │           └── UNEXPOSED_EXPR:''
│           │               └── INTEGER_LITERAL:''
│           ├── NAMESPACE_REF:'NcvCTprep'
│           └── TEMPLATE_REF:'CT_ASSERT_FAILURE'
├── TYPEDEF_DECL:'__ct_assert_typedef_195'
│   ├── NAMESPACE_REF:'NcvCTprep'
│   ├── TEMPLATE_REF:'assertTest'
│   └── UNEXPOSED_EXPR:''
│       └── OBJC_STRING_LITERAL:''
│           ├── CSTYLE_CAST_EXPR:''
│           │   └── PAREN_EXPR:''
│           │       └── BINARY_OPERATOR:''
│           │           ├── OBJC_STRING_LITERAL:''
│           │           │   └── TYPE_REF:'Ncv32u'
│           │           └── UNEXPOSED_EXPR:''
│           │               └── INTEGER_LITERAL:''
│           ├── NAMESPACE_REF:'NcvCTprep'
│           └── TEMPLATE_REF:'CT_ASSERT_FAILURE'
├── TYPEDEF_DECL:'__ct_assert_typedef_196'
│   ├── NAMESPACE_REF:'NcvCTprep'
│   ├── TEMPLATE_REF:'assertTest'
│   └── UNEXPOSED_EXPR:''
│       └── OBJC_STRING_LITERAL:''
│           ├── CSTYLE_CAST_EXPR:''
│           │   └── PAREN_EXPR:''
│           │       └── BINARY_OPERATOR:''
│           │           ├── OBJC_STRING_LITERAL:''
│           │           │   └── TYPE_REF:'Ncv16s'
│           │           └── UNEXPOSED_EXPR:''
│           │               └── INTEGER_LITERAL:''
│           ├── NAMESPACE_REF:'NcvCTprep'
│           └── TEMPLATE_REF:'CT_ASSERT_FAILURE'
├── TYPEDEF_DECL:'__ct_assert_typedef_197'
│   ├── NAMESPACE_REF:'NcvCTprep'
│   ├── TEMPLATE_REF:'assertTest'
│   └── UNEXPOSED_EXPR:''
│       └── OBJC_STRING_LITERAL:''
│           ├── CSTYLE_CAST_EXPR:''
│           │   └── PAREN_EXPR:''
│           │       └── BINARY_OPERATOR:''
│           │           ├── OBJC_STRING_LITERAL:''
│           │           │   └── TYPE_REF:'Ncv16u'
│           │           └── UNEXPOSED_EXPR:''
│           │               └── INTEGER_LITERAL:''
│           ├── NAMESPACE_REF:'NcvCTprep'
│           └── TEMPLATE_REF:'CT_ASSERT_FAILURE'
├── TYPEDEF_DECL:'__ct_assert_typedef_198'
│   ├── NAMESPACE_REF:'NcvCTprep'
│   ├── TEMPLATE_REF:'assertTest'
│   └── UNEXPOSED_EXPR:''
│       └── OBJC_STRING_LITERAL:''
│           ├── CSTYLE_CAST_EXPR:''
│           │   └── PAREN_EXPR:''
│           │       └── BINARY_OPERATOR:''
│           │           ├── OBJC_STRING_LITERAL:''
│           │           │   └── TYPE_REF:'Ncv8s'
│           │           └── UNEXPOSED_EXPR:''
│           │               └── INTEGER_LITERAL:''
│           ├── NAMESPACE_REF:'NcvCTprep'
│           └── TEMPLATE_REF:'CT_ASSERT_FAILURE'
├── TYPEDEF_DECL:'__ct_assert_typedef_199'
│   ├── NAMESPACE_REF:'NcvCTprep'
│   ├── TEMPLATE_REF:'assertTest'
│   └── UNEXPOSED_EXPR:''
│       └── OBJC_STRING_LITERAL:''
│           ├── CSTYLE_CAST_EXPR:''
│           │   └── PAREN_EXPR:''
│           │       └── BINARY_OPERATOR:''
│           │           ├── OBJC_STRING_LITERAL:''
│           │           │   └── TYPE_REF:'Ncv8u'
│           │           └── UNEXPOSED_EXPR:''
│           │               └── INTEGER_LITERAL:''
│           ├── NAMESPACE_REF:'NcvCTprep'
│           └── TEMPLATE_REF:'CT_ASSERT_FAILURE'
├── TYPEDEF_DECL:'__ct_assert_typedef_200'
│   ├── NAMESPACE_REF:'NcvCTprep'
│   ├── TEMPLATE_REF:'assertTest'
│   └── UNEXPOSED_EXPR:''
│       └── OBJC_STRING_LITERAL:''
│           ├── CSTYLE_CAST_EXPR:''
│           │   └── PAREN_EXPR:''
│           │       └── BINARY_OPERATOR:''
│           │           ├── OBJC_STRING_LITERAL:''
│           │           │   └── TYPE_REF:'Ncv32f'
│           │           └── UNEXPOSED_EXPR:''
│           │               └── INTEGER_LITERAL:''
│           ├── NAMESPACE_REF:'NcvCTprep'
│           └── TEMPLATE_REF:'CT_ASSERT_FAILURE'
├── TYPEDEF_DECL:'__ct_assert_typedef_201'
│   ├── NAMESPACE_REF:'NcvCTprep'
│   ├── TEMPLATE_REF:'assertTest'
│   └── UNEXPOSED_EXPR:''
│       └── OBJC_STRING_LITERAL:''
│           ├── CSTYLE_CAST_EXPR:''
│           │   └── PAREN_EXPR:''
│           │       └── BINARY_OPERATOR:''
│           │           ├── OBJC_STRING_LITERAL:''
│           │           │   └── TYPE_REF:'Ncv64f'
│           │           └── UNEXPOSED_EXPR:''
│           │               └── INTEGER_LITERAL:''
│           ├── NAMESPACE_REF:'NcvCTprep'
│           └── TEMPLATE_REF:'CT_ASSERT_FAILURE'
├── TYPEDEF_DECL:'__ct_assert_typedef_202'
├── TYPEDEF_DECL:'__ct_assert_typedef_203'
├── TYPEDEF_DECL:'__ct_assert_typedef_204'
├── TYPEDEF_DECL:'__ct_assert_typedef_205'
├── TYPEDEF_DECL:'__ct_assert_typedef_206'
├── TYPE_ALIAS_DECL:'NCVDebugOutputHandler'
│   └── PARM_DECL:''
│       ├── NAMESPACE_REF:'std'
│       └── TYPE_REF:'std::string'
├── TYPE_ALIAS_DECL:'NCVStatus'
│   └── TYPE_REF:'Ncv32u'
├── TYPE_ALIAS_DECL:'Ncv16s'
├── TYPE_ALIAS_DECL:'Ncv16u'
├── TYPE_ALIAS_DECL:'Ncv32f'
├── TYPE_ALIAS_DECL:'Ncv32s'
├── TYPE_ALIAS_DECL:'Ncv32u'
├── TYPE_ALIAS_DECL:'Ncv64f'
├── TYPE_ALIAS_DECL:'Ncv64s'
├── TYPE_ALIAS_DECL:'Ncv64u'
├── TYPE_ALIAS_DECL:'Ncv8s'
├── TYPE_ALIAS_DECL:'Ncv8u'
├── TYPE_ALIAS_DECL:'NcvBool'
├── VAR_DECL:'K_LOG2_WARP_SIZE'
│   ├── TYPE_REF:'Ncv32u'
│   └── UNEXPOSED_EXPR:''
│       └── INTEGER_LITERAL:''
└── VAR_DECL:'K_WARP_SIZE'
    ├── TYPE_REF:'Ncv32u'
    └── UNEXPOSED_EXPR:''
        └── INTEGER_LITERAL:''
