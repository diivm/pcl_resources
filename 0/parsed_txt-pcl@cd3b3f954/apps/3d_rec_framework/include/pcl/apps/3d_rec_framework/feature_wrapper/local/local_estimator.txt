TRANSLATION_UNIT:'/pcl/apps/3d_rec_framework/include/pcl/apps/3d_rec_framework/feature_wrapper/local/local_estimator.h'
├── INCLUSION_DIRECTIVE:'memory'
├── INCLUSION_DIRECTIVE:'pcl/apps/3d_rec_framework/feature_wrapper/normal_estimator.h'
├── INCLUSION_DIRECTIVE:'pcl/filters/uniform_sampling.h'
├── INCLUSION_DIRECTIVE:'pcl/keypoints/harris_3d.h'
├── INCLUSION_DIRECTIVE:'pcl/keypoints/sift_keypoint.h'
├── INCLUSION_DIRECTIVE:'pcl/keypoints/susan.h'
├── INCLUSION_DIRECTIVE:'pcl/surface/mls.h'
├── NAMESPACE:'pcl'
│   └── STRUCT_DECL:'SIFTKeypointFieldSelector'
│       └── CXX_METHOD:'operator()'
│           ├── COMPOUND_STMT:''
│           └── PARM_DECL:'p'
└── NAMESPACE:'pcl'
    └── NAMESPACE:'rec_3d_framework'
        ├── CLASS_TEMPLATE:'HarrisKeypointExtractor'
        │   ├── CONSTRUCTOR:'HarrisKeypointExtractor<PointInT, NormalT>'
        │   │   └── COMPOUND_STMT:''
        │   │       ├── BINARY_OPERATOR:''
        │   │       │   ├── FLOATING_LITERAL:''
        │   │       │   └── MEMBER_REF_EXPR:'non_max_radius_'
        │   │       └── BINARY_OPERATOR:''
        │   │           ├── FLOATING_LITERAL:''
        │   │           └── MEMBER_REF_EXPR:'threshold_'
        │   ├── CXX_ACCESS_SPEC_DECL:''
        │   ├── CXX_BASE_SPECIFIER:'KeypointExtractor<PointInT>'
        │   │   ├── TEMPLATE_REF:'KeypointExtractor'
        │   │   └── TYPE_REF:'PointInT'
        │   ├── CXX_METHOD:'compute'
        │   │   ├── COMPOUND_STMT:''
        │   │   └── PARM_DECL:'keypoints'
        │   ├── CXX_METHOD:'needNormals'
        │   │   └── COMPOUND_STMT:''
        │   │       └── RETURN_STMT:''
        │   │           └── CXX_NULL_PTR_LITERAL_EXPR:''
        │   ├── CXX_METHOD:'setNonMaximaRadius'
        │   │   ├── COMPOUND_STMT:''
        │   │   │   └── BINARY_OPERATOR:''
        │   │   │       ├── MEMBER_REF_EXPR:'non_max_radius_'
        │   │   │       └── UNEXPOSED_EXPR:'r'
        │   │   │           └── DECL_REF_EXPR:'r'
        │   │   └── PARM_DECL:'r'
        │   ├── CXX_METHOD:'setNormals'
        │   │   ├── COMPOUND_STMT:''
        │   │   └── PARM_DECL:'Ptr'
        │   ├── CXX_METHOD:'setResponseMethod'
        │   │   ├── COMPOUND_STMT:''
        │   │   └── PARM_DECL:''
        │   ├── CXX_METHOD:'setThreshold'
        │   │   ├── COMPOUND_STMT:''
        │   │   │   └── BINARY_OPERATOR:''
        │   │   │       ├── MEMBER_REF_EXPR:'threshold_'
        │   │   │       └── UNEXPOSED_EXPR:'t'
        │   │   │           └── DECL_REF_EXPR:'t'
        │   │   └── PARM_DECL:'t'
        │   ├── FIELD_DECL:'Ptr'
        │   ├── FIELD_DECL:'non_max_radius_'
        │   ├── FIELD_DECL:'threshold_'
        │   ├── TEMPLATE_TYPE_PARAMETER:'NormalT'
        │   ├── TEMPLATE_TYPE_PARAMETER:'PointInT'
        │   ├── USING_DECLARATION:'input_'
        │   │   ├── TEMPLATE_REF:'KeypointExtractor'
        │   │   └── TYPE_REF:'PointInT'
        │   └── USING_DECLARATION:'radius_'
        │       ├── TEMPLATE_REF:'KeypointExtractor'
        │       └── TYPE_REF:'PointInT'
        ├── CLASS_TEMPLATE:'KeypointExtractor'
        │   ├── CXX_ACCESS_SPEC_DECL:''
        │   ├── CXX_ACCESS_SPEC_DECL:''
        │   ├── CXX_METHOD:'compute'
        │   │   └── PARM_DECL:'keypoints'
        │   ├── CXX_METHOD:'needNormals'
        │   │   └── COMPOUND_STMT:''
        │   │       └── RETURN_STMT:''
        │   │           └── CXX_NULL_PTR_LITERAL_EXPR:''
        │   ├── CXX_METHOD:'setInputCloud'
        │   │   ├── COMPOUND_STMT:''
        │   │   └── PARM_DECL:'input'
        │   ├── CXX_METHOD:'setNormals'
        │   │   ├── COMPOUND_STMT:''
        │   │   └── PARM_DECL:'Ptr'
        │   ├── CXX_METHOD:'setSupportRadius'
        │   │   ├── COMPOUND_STMT:''
        │   │   │   └── BINARY_OPERATOR:''
        │   │   │       ├── MEMBER_REF_EXPR:'radius_'
        │   │   │       └── UNEXPOSED_EXPR:'f'
        │   │   │           └── DECL_REF_EXPR:'f'
        │   │   └── PARM_DECL:'f'
        │   ├── DESTRUCTOR:'~KeypointExtractor<PointInT>'
        │   ├── FIELD_DECL:'radius_'
        │   └── TEMPLATE_TYPE_PARAMETER:'PointInT'
        ├── CLASS_TEMPLATE:'LocalEstimator'
        │   ├── CONSTRUCTOR:'LocalEstimator<PointInT, FeatureT>'
        │   │   └── COMPOUND_STMT:''
        │   │       └── BINARY_OPERATOR:''
        │   │           ├── CXX_NULL_PTR_LITERAL_EXPR:''
        │   │           └── MEMBER_REF_EXPR:'adaptative_MLS_'
        │   ├── CXX_ACCESS_SPEC_DECL:''
        │   ├── CXX_ACCESS_SPEC_DECL:''
        │   ├── CXX_METHOD:'addKeypointExtractor'
        │   │   ├── COMPOUND_STMT:''
        │   │   └── PARM_DECL:'ke'
        │   ├── CXX_METHOD:'computeKeypoints'
        │   │   ├── COMPOUND_STMT:''
        │   │   ├── PARM_DECL:'Ptr'
        │   │   ├── PARM_DECL:'cloud'
        │   │   └── PARM_DECL:'keypoints'
        │   ├── CXX_METHOD:'estimate'
        │   │   ├── PARM_DECL:'in'
        │   │   ├── PARM_DECL:'keypoints'
        │   │   ├── PARM_DECL:'processed'
        │   │   └── PARM_DECL:'signatures'
        │   ├── CXX_METHOD:'setAdaptativeMLS'
        │   │   ├── COMPOUND_STMT:''
        │   │   │   └── BINARY_OPERATOR:''
        │   │   │       ├── MEMBER_REF_EXPR:'adaptative_MLS_'
        │   │   │       └── UNEXPOSED_EXPR:'b'
        │   │   │           └── DECL_REF_EXPR:'b'
        │   │   └── PARM_DECL:'b'
        │   ├── CXX_METHOD:'setKeypointExtractors'
        │   │   ├── COMPOUND_STMT:''
        │   │   └── PARM_DECL:''
        │   ├── CXX_METHOD:'setNormalEstimator'
        │   │   ├── COMPOUND_STMT:''
        │   │   └── PARM_DECL:'ne'
        │   ├── CXX_METHOD:'setSupportRadius'
        │   │   ├── COMPOUND_STMT:''
        │   │   │   └── BINARY_OPERATOR:''
        │   │   │       ├── MEMBER_REF_EXPR:'support_radius_'
        │   │   │       └── UNEXPOSED_EXPR:'r'
        │   │   │           └── DECL_REF_EXPR:'r'
        │   │   └── PARM_DECL:'r'
        │   ├── DESTRUCTOR:'~LocalEstimator<PointInT, FeatureT>'
        │   ├── FIELD_DECL:'adaptative_MLS_'
        │   ├── FIELD_DECL:'normal_estimator_'
        │   ├── FIELD_DECL:'support_radius_'
        │   ├── TEMPLATE_TYPE_PARAMETER:'FeatureT'
        │   └── TEMPLATE_TYPE_PARAMETER:'PointInT'
        ├── CLASS_TEMPLATE:'SIFTKeypointExtractor'
        │   ├── CXX_ACCESS_SPEC_DECL:''
        │   ├── CXX_BASE_SPECIFIER:'KeypointExtractor<PointInT>'
        │   │   ├── TEMPLATE_REF:'KeypointExtractor'
        │   │   └── TYPE_REF:'PointInT'
        │   ├── CXX_METHOD:'compute'
        │   │   ├── COMPOUND_STMT:''
        │   │   └── PARM_DECL:'keypoints'
        │   ├── TEMPLATE_TYPE_PARAMETER:'PointInT'
        │   ├── USING_DECLARATION:'input_'
        │   │   ├── TEMPLATE_REF:'KeypointExtractor'
        │   │   └── TYPE_REF:'PointInT'
        │   └── USING_DECLARATION:'radius_'
        │       ├── TEMPLATE_REF:'KeypointExtractor'
        │       └── TYPE_REF:'PointInT'
        ├── CLASS_TEMPLATE:'SIFTSurfaceKeypointExtractor'
        │   ├── CXX_ACCESS_SPEC_DECL:''
        │   ├── CXX_BASE_SPECIFIER:'KeypointExtractor<PointInT>'
        │   │   ├── TEMPLATE_REF:'KeypointExtractor'
        │   │   └── TYPE_REF:'PointInT'
        │   ├── CXX_METHOD:'compute'
        │   │   ├── COMPOUND_STMT:''
        │   │   └── PARM_DECL:'keypoints'
        │   ├── CXX_METHOD:'needNormals'
        │   │   └── COMPOUND_STMT:''
        │   │       └── RETURN_STMT:''
        │   │           └── CXX_NULL_PTR_LITERAL_EXPR:''
        │   ├── CXX_METHOD:'setNormals'
        │   │   ├── COMPOUND_STMT:''
        │   │   └── PARM_DECL:'Ptr'
        │   ├── FIELD_DECL:'Ptr'
        │   ├── TEMPLATE_TYPE_PARAMETER:'PointInT'
        │   ├── USING_DECLARATION:'input_'
        │   │   ├── TEMPLATE_REF:'KeypointExtractor'
        │   │   └── TYPE_REF:'PointInT'
        │   └── USING_DECLARATION:'radius_'
        │       ├── TEMPLATE_REF:'KeypointExtractor'
        │       └── TYPE_REF:'PointInT'
        ├── CLASS_TEMPLATE:'SUSANKeypointExtractor'
        │   ├── CONSTRUCTOR:'SUSANKeypointExtractor<PointInT, NormalT>'
        │   │   └── COMPOUND_STMT:''
        │   ├── CXX_ACCESS_SPEC_DECL:''
        │   ├── CXX_BASE_SPECIFIER:'KeypointExtractor<PointInT>'
        │   │   ├── TEMPLATE_REF:'KeypointExtractor'
        │   │   └── TYPE_REF:'PointInT'
        │   ├── CXX_METHOD:'compute'
        │   │   ├── COMPOUND_STMT:''
        │   │   └── PARM_DECL:'keypoints'
        │   ├── CXX_METHOD:'needNormals'
        │   │   └── COMPOUND_STMT:''
        │   │       └── RETURN_STMT:''
        │   │           └── CXX_NULL_PTR_LITERAL_EXPR:''
        │   ├── CXX_METHOD:'setNormals'
        │   │   ├── COMPOUND_STMT:''
        │   │   └── PARM_DECL:'Ptr'
        │   ├── FIELD_DECL:'Ptr'
        │   ├── TEMPLATE_TYPE_PARAMETER:'NormalT'
        │   ├── TEMPLATE_TYPE_PARAMETER:'PointInT'
        │   ├── USING_DECLARATION:'input_'
        │   │   ├── TEMPLATE_REF:'KeypointExtractor'
        │   │   └── TYPE_REF:'PointInT'
        │   └── USING_DECLARATION:'radius_'
        │       ├── TEMPLATE_REF:'KeypointExtractor'
        │       └── TYPE_REF:'PointInT'
        └── CLASS_TEMPLATE:'UniformSamplingExtractor'
            ├── CXX_ACCESS_SPEC_DECL:''
            ├── CXX_ACCESS_SPEC_DECL:''
            ├── CXX_BASE_SPECIFIER:'KeypointExtractor<PointInT>'
            │   ├── TEMPLATE_REF:'KeypointExtractor'
            │   └── TYPE_REF:'PointInT'
            ├── CXX_METHOD:'compute'
            │   ├── COMPOUND_STMT:''
            │   ├── CXX_OVERRIDE_ATTR:''
            │   └── PARM_DECL:'keypoints'
            ├── CXX_METHOD:'filterPlanar'
            │   ├── COMPOUND_STMT:''
            │   ├── PARM_DECL:'input'
            │   └── PARM_DECL:'keypoints_cloud'
            ├── CXX_METHOD:'setFilterPlanar'
            │   ├── COMPOUND_STMT:''
            │   │   └── BINARY_OPERATOR:''
            │   │       ├── MEMBER_REF_EXPR:'filter_planar_'
            │   │       └── UNEXPOSED_EXPR:'b'
            │   │           └── DECL_REF_EXPR:'b'
            │   └── PARM_DECL:'b'
            ├── CXX_METHOD:'setSamplingDensity'
            │   ├── COMPOUND_STMT:''
            │   │   └── BINARY_OPERATOR:''
            │   │       ├── MEMBER_REF_EXPR:'sampling_density_'
            │   │       └── UNEXPOSED_EXPR:'f'
            │   │           └── DECL_REF_EXPR:'f'
            │   └── PARM_DECL:'f'
            ├── FIELD_DECL:'filter_planar_'
            ├── FIELD_DECL:'sampling_density_'
            ├── TEMPLATE_TYPE_PARAMETER:'PointInT'
            ├── USING_DECLARATION:'input_'
            │   ├── TEMPLATE_REF:'KeypointExtractor'
            │   └── TYPE_REF:'PointInT'
            └── USING_DECLARATION:'radius_'
                ├── TEMPLATE_REF:'KeypointExtractor'
                └── TYPE_REF:'PointInT'
