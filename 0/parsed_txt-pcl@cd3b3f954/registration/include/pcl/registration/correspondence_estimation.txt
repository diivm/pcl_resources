TRANSLATION_UNIT:'/pcl/registration/include/pcl/registration/correspondence_estimation.h'
├── INCLUSION_DIRECTIVE:'pcl/common/io.h'
├── INCLUSION_DIRECTIVE:'pcl/memory.h'
├── INCLUSION_DIRECTIVE:'pcl/pcl_base.h'
├── INCLUSION_DIRECTIVE:'pcl/pcl_macros.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/correspondence_types.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/impl/correspondence_estimation.hpp'
├── INCLUSION_DIRECTIVE:'pcl/search/kdtree.h'
├── INCLUSION_DIRECTIVE:'string'
└── NAMESPACE:'pcl'
    └── NAMESPACE:'registration'
        ├── CLASS_TEMPLATE:'CorrespondenceEstimation'
        │   ├── CONSTRUCTOR:'CorrespondenceEstimation<PointSource, PointTarget, Scalar>'
        │   │   └── COMPOUND_STMT:''
        │   │       └── BINARY_OPERATOR:''
        │   │           ├── MEMBER_REF_EXPR:''
        │   │           │   └── OVERLOADED_DECL_REF:'corr_name_'
        │   │           └── STRING_LITERAL:'"CorrespondenceEstimation"'
        │   ├── CXX_ACCESS_SPEC_DECL:''
        │   ├── CXX_BASE_SPECIFIER:'CorrespondenceEstimationBase<PointSource, PointTarget, Scalar>'
        │   │   ├── TEMPLATE_REF:'CorrespondenceEstimationBase'
        │   │   ├── TYPE_REF:'PointSource'
        │   │   ├── TYPE_REF:'PointTarget'
        │   │   └── TYPE_REF:'Scalar'
        │   ├── CXX_METHOD:'clone'
        │   │   ├── COMPOUND_STMT:''
        │   │   │   └── DECL_STMT:''
        │   │   │       └── VAR_DECL:'copy'
        │   │   ├── CXX_OVERRIDE_ATTR:''
        │   │   ├── TEMPLATE_REF:'CorrespondenceEstimationBase'
        │   │   ├── TYPE_REF:'PointSource'
        │   │   ├── TYPE_REF:'PointTarget'
        │   │   └── TYPE_REF:'Scalar'
        │   ├── CXX_METHOD:'determineCorrespondences'
        │   │   ├── CXX_OVERRIDE_ATTR:''
        │   │   ├── PARM_DECL:'correspondences'
        │   │   └── PARM_DECL:'max_distance'
        │   │       └── UNEXPOSED_EXPR:''
        │   ├── CXX_METHOD:'determineReciprocalCorrespondences'
        │   │   ├── CXX_OVERRIDE_ATTR:''
        │   │   ├── PARM_DECL:'correspondences'
        │   │   └── PARM_DECL:'max_distance'
        │   │       └── UNEXPOSED_EXPR:''
        │   ├── DESTRUCTOR:'~CorrespondenceEstimation<PointSource, PointTarget, Scalar>'
        │   │   └── COMPOUND_STMT:''
        │   ├── TEMPLATE_TYPE_PARAMETER:'PointSource'
        │   ├── TEMPLATE_TYPE_PARAMETER:'PointTarget'
        │   ├── TEMPLATE_TYPE_PARAMETER:'Scalar'
        │   ├── USING_DECLARATION:'corr_name_'
        │   │   ├── TEMPLATE_REF:'CorrespondenceEstimationBase'
        │   │   ├── TYPE_REF:'PointSource'
        │   │   ├── TYPE_REF:'PointTarget'
        │   │   └── TYPE_REF:'Scalar'
        │   ├── USING_DECLARATION:'getClassName'
        │   │   ├── TEMPLATE_REF:'CorrespondenceEstimationBase'
        │   │   ├── TYPE_REF:'PointSource'
        │   │   ├── TYPE_REF:'PointTarget'
        │   │   └── TYPE_REF:'Scalar'
        │   ├── USING_DECLARATION:'indices_'
        │   │   ├── TEMPLATE_REF:'CorrespondenceEstimationBase'
        │   │   ├── TYPE_REF:'PointSource'
        │   │   ├── TYPE_REF:'PointTarget'
        │   │   └── TYPE_REF:'Scalar'
        │   ├── USING_DECLARATION:'initCompute'
        │   │   ├── TEMPLATE_REF:'CorrespondenceEstimationBase'
        │   │   ├── TYPE_REF:'PointSource'
        │   │   ├── TYPE_REF:'PointTarget'
        │   │   └── TYPE_REF:'Scalar'
        │   ├── USING_DECLARATION:'initComputeReciprocal'
        │   │   ├── TEMPLATE_REF:'CorrespondenceEstimationBase'
        │   │   ├── TYPE_REF:'PointSource'
        │   │   ├── TYPE_REF:'PointTarget'
        │   │   └── TYPE_REF:'Scalar'
        │   ├── USING_DECLARATION:'input_'
        │   │   ├── TEMPLATE_REF:'CorrespondenceEstimationBase'
        │   │   ├── TYPE_REF:'PointSource'
        │   │   ├── TYPE_REF:'PointTarget'
        │   │   └── TYPE_REF:'Scalar'
        │   ├── USING_DECLARATION:'input_fields_'
        │   │   ├── TEMPLATE_REF:'CorrespondenceEstimationBase'
        │   │   ├── TYPE_REF:'PointSource'
        │   │   ├── TYPE_REF:'PointTarget'
        │   │   └── TYPE_REF:'Scalar'
        │   ├── USING_DECLARATION:'input_transformed_'
        │   │   ├── TEMPLATE_REF:'CorrespondenceEstimationBase'
        │   │   ├── TYPE_REF:'PointSource'
        │   │   ├── TYPE_REF:'PointTarget'
        │   │   └── TYPE_REF:'Scalar'
        │   ├── USING_DECLARATION:'point_representation_'
        │   │   ├── TEMPLATE_REF:'CorrespondenceEstimationBase'
        │   │   ├── TYPE_REF:'PointSource'
        │   │   ├── TYPE_REF:'PointTarget'
        │   │   └── TYPE_REF:'Scalar'
        │   ├── USING_DECLARATION:'target_'
        │   │   ├── TEMPLATE_REF:'CorrespondenceEstimationBase'
        │   │   ├── TYPE_REF:'PointSource'
        │   │   ├── TYPE_REF:'PointTarget'
        │   │   └── TYPE_REF:'Scalar'
        │   ├── USING_DECLARATION:'target_indices_'
        │   │   ├── TEMPLATE_REF:'CorrespondenceEstimationBase'
        │   │   ├── TYPE_REF:'PointSource'
        │   │   ├── TYPE_REF:'PointTarget'
        │   │   └── TYPE_REF:'Scalar'
        │   ├── USING_DECLARATION:'tree_'
        │   │   ├── TEMPLATE_REF:'CorrespondenceEstimationBase'
        │   │   ├── TYPE_REF:'PointSource'
        │   │   ├── TYPE_REF:'PointTarget'
        │   │   └── TYPE_REF:'Scalar'
        │   └── USING_DECLARATION:'tree_reciprocal_'
        │       ├── TEMPLATE_REF:'CorrespondenceEstimationBase'
        │       ├── TYPE_REF:'PointSource'
        │       ├── TYPE_REF:'PointTarget'
        │       └── TYPE_REF:'Scalar'
        └── CLASS_TEMPLATE:'CorrespondenceEstimationBase'
            ├── CONSTRUCTOR:'CorrespondenceEstimationBase<PointSource, PointTarget, Scalar>'
            ├── CXX_ACCESS_SPEC_DECL:''
            ├── CXX_ACCESS_SPEC_DECL:''
            ├── CXX_METHOD:'clone'
            ├── CXX_METHOD:'determineCorrespondences'
            │   ├── PARM_DECL:'correspondences'
            │   └── PARM_DECL:'max_distance'
            │       └── UNEXPOSED_EXPR:''
            ├── CXX_METHOD:'determineReciprocalCorrespondences'
            │   ├── PARM_DECL:'correspondences'
            │   └── PARM_DECL:'max_distance'
            │       └── UNEXPOSED_EXPR:''
            ├── CXX_METHOD:'getClassName'
            │   └── COMPOUND_STMT:''
            ├── CXX_METHOD:'getIndicesSource'
            │   └── COMPOUND_STMT:''
            ├── CXX_METHOD:'getIndicesTarget'
            │   └── COMPOUND_STMT:''
            ├── CXX_METHOD:'getInputSource'
            │   └── COMPOUND_STMT:''
            ├── CXX_METHOD:'getInputTarget'
            │   └── COMPOUND_STMT:''
            ├── CXX_METHOD:'getSearchMethodSource'
            │   └── COMPOUND_STMT:''
            ├── CXX_METHOD:'getSearchMethodTarget'
            │   └── COMPOUND_STMT:''
            ├── CXX_METHOD:'initCompute'
            ├── CXX_METHOD:'initComputeReciprocal'
            ├── CXX_METHOD:'requiresSourceNormals'
            │   └── COMPOUND_STMT:''
            │       └── RETURN_STMT:''
            │           └── PAREN_EXPR:''
            │               └── CXX_NULL_PTR_LITERAL_EXPR:''
            ├── CXX_METHOD:'requiresTargetNormals'
            │   └── COMPOUND_STMT:''
            │       └── RETURN_STMT:''
            │           └── PAREN_EXPR:''
            │               └── CXX_NULL_PTR_LITERAL_EXPR:''
            ├── CXX_METHOD:'setIndicesSource'
            │   ├── COMPOUND_STMT:''
            │   └── PARM_DECL:'indices'
            ├── CXX_METHOD:'setIndicesTarget'
            │   ├── COMPOUND_STMT:''
            │   │   └── BINARY_OPERATOR:''
            │   │       ├── CXX_NULL_PTR_LITERAL_EXPR:''
            │   │       └── MEMBER_REF_EXPR:'target_cloud_updated_'
            │   └── PARM_DECL:'indices'
            ├── CXX_METHOD:'setInputSource'
            │   ├── COMPOUND_STMT:''
            │   │   ├── BINARY_OPERATOR:''
            │   │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
            │   │   │   └── MEMBER_REF_EXPR:'source_cloud_updated_'
            │   │   └── DECL_STMT:''
            │   │       └── VAR_DECL:'cloud'
            │   └── PARM_DECL:'cloud'
            ├── CXX_METHOD:'setInputTarget'
            │   └── PARM_DECL:'cloud'
            ├── CXX_METHOD:'setPointRepresentation'
            │   ├── COMPOUND_STMT:''
            │   └── PARM_DECL:'point_representation'
            ├── CXX_METHOD:'setSearchMethodSource'
            │   ├── COMPOUND_STMT:''
            │   │   ├── BINARY_OPERATOR:''
            │   │   │   ├── MEMBER_REF_EXPR:'force_no_recompute_reciprocal_'
            │   │   │   └── UNEXPOSED_EXPR:'force_no_recompute'
            │   │   │       └── DECL_REF_EXPR:'force_no_recompute'
            │   │   └── BINARY_OPERATOR:''
            │   │       ├── CXX_NULL_PTR_LITERAL_EXPR:''
            │   │       └── MEMBER_REF_EXPR:'source_cloud_updated_'
            │   ├── PARM_DECL:'force_no_recompute'
            │   │   └── CXX_NULL_PTR_LITERAL_EXPR:''
            │   └── PARM_DECL:'tree'
            ├── CXX_METHOD:'setSearchMethodTarget'
            │   ├── COMPOUND_STMT:''
            │   │   ├── BINARY_OPERATOR:''
            │   │   │   ├── MEMBER_REF_EXPR:'force_no_recompute_'
            │   │   │   └── UNEXPOSED_EXPR:'force_no_recompute'
            │   │   │       └── DECL_REF_EXPR:'force_no_recompute'
            │   │   └── BINARY_OPERATOR:''
            │   │       ├── CXX_NULL_PTR_LITERAL_EXPR:''
            │   │       └── MEMBER_REF_EXPR:'target_cloud_updated_'
            │   ├── PARM_DECL:'force_no_recompute'
            │   │   └── CXX_NULL_PTR_LITERAL_EXPR:''
            │   └── PARM_DECL:'tree'
            ├── CXX_METHOD:'setSourceNormals'
            │   ├── COMPOUND_STMT:''
            │   └── PARM_DECL:''
            ├── CXX_METHOD:'setTargetNormals'
            │   ├── COMPOUND_STMT:''
            │   └── PARM_DECL:''
            ├── DESTRUCTOR:'~CorrespondenceEstimationBase<PointSource, PointTarget, Scalar>'
            │   └── COMPOUND_STMT:''
            ├── FIELD_DECL:'corr_name_'
            ├── FIELD_DECL:'force_no_recompute_'
            ├── FIELD_DECL:'force_no_recompute_reciprocal_'
            ├── FIELD_DECL:'input_fields_'
            ├── FIELD_DECL:'input_transformed_'
            ├── FIELD_DECL:'point_representation_'
            ├── FIELD_DECL:'source_cloud_updated_'
            ├── FIELD_DECL:'target_'
            ├── FIELD_DECL:'target_cloud_updated_'
            ├── FIELD_DECL:'target_indices_'
            ├── FIELD_DECL:'tree_'
            ├── FIELD_DECL:'tree_reciprocal_'
            ├── TEMPLATE_TYPE_PARAMETER:'PointSource'
            ├── TEMPLATE_TYPE_PARAMETER:'PointTarget'
            └── TEMPLATE_TYPE_PARAMETER:'Scalar'
