TRANSLATION_UNIT:'/pcl/registration/include/pcl/registration/gicp.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/bfgs.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/icp.h'
├── INCLUSION_DIRECTIVE:'pcl/registration/impl/gicp.hpp'
└── NAMESPACE:'pcl'
    └── CLASS_TEMPLATE:'GeneralizedIterativeClosestPoint'
        ├── CONSTRUCTOR:'GeneralizedIterativeClosestPoint<PointSource, PointTarget>'
        │   ├── COMPOUND_STMT:''
        │   ├── FLOATING_LITERAL:''
        │   ├── FLOATING_LITERAL:''
        │   ├── FLOATING_LITERAL:''
        │   ├── FLOATING_LITERAL:''
        │   ├── INTEGER_LITERAL:''
        │   ├── INTEGER_LITERAL:''
        │   ├── MEMBER_REF:'gicp_epsilon_'
        │   ├── MEMBER_REF:'k_correspondences_'
        │   ├── MEMBER_REF:'max_inner_iterations_'
        │   ├── MEMBER_REF:'rotation_epsilon_'
        │   ├── MEMBER_REF:'rotation_gradient_tolerance_'
        │   └── MEMBER_REF:'translation_gradient_tolerance_'
        ├── CXX_ACCESS_SPEC_DECL:''
        ├── CXX_ACCESS_SPEC_DECL:''
        ├── CXX_METHOD:'applyState'
        │   ├── PARM_DECL:'t'
        │   └── PARM_DECL:'x'
        ├── CXX_METHOD:'computeRDerivative'
        │   ├── PARM_DECL:'R'
        │   ├── PARM_DECL:'g'
        │   └── PARM_DECL:'x'
        ├── CXX_METHOD:'computeTransformation'
        │   ├── CXX_OVERRIDE_ATTR:''
        │   ├── PARM_DECL:'guess'
        │   └── PARM_DECL:'output'
        ├── CXX_METHOD:'estimateRigidTransformationBFGS'
        │   ├── PARM_DECL:'cloud_src'
        │   ├── PARM_DECL:'cloud_tgt'
        │   ├── PARM_DECL:'indices_src'
        │   ├── PARM_DECL:'indices_tgt'
        │   └── PARM_DECL:'transformation_matrix'
        ├── CXX_METHOD:'getCorrespondenceRandomness'
        │   └── COMPOUND_STMT:''
        │       └── RETURN_STMT:''
        │           └── UNEXPOSED_EXPR:'k_correspondences_'
        │               └── MEMBER_REF_EXPR:'k_correspondences_'
        ├── CXX_METHOD:'getMaximumOptimizerIterations'
        │   └── COMPOUND_STMT:''
        │       └── RETURN_STMT:''
        │           └── UNEXPOSED_EXPR:'max_inner_iterations_'
        │               └── MEMBER_REF_EXPR:'max_inner_iterations_'
        ├── CXX_METHOD:'getRotationEpsilon'
        │   └── COMPOUND_STMT:''
        │       └── RETURN_STMT:''
        │           └── UNEXPOSED_EXPR:'rotation_epsilon_'
        │               └── MEMBER_REF_EXPR:'rotation_epsilon_'
        ├── CXX_METHOD:'getRotationGradientTolerance'
        │   └── COMPOUND_STMT:''
        │       └── RETURN_STMT:''
        │           └── UNEXPOSED_EXPR:'rotation_gradient_tolerance_'
        │               └── MEMBER_REF_EXPR:'rotation_gradient_tolerance_'
        ├── CXX_METHOD:'getTranslationGradientTolerance'
        │   └── COMPOUND_STMT:''
        │       └── RETURN_STMT:''
        │           └── UNEXPOSED_EXPR:'translation_gradient_tolerance_'
        │               └── MEMBER_REF_EXPR:'translation_gradient_tolerance_'
        ├── CXX_METHOD:'mahalanobis'
        │   └── COMPOUND_STMT:''
        ├── CXX_METHOD:'matricesInnerProd'
        │   ├── COMPOUND_STMT:''
        │   │   ├── DECL_STMT:''
        │   │   │   └── VAR_DECL:'r'
        │   │   │       └── FLOATING_LITERAL:''
        │   │   ├── DECL_STMT:''
        │   │   │   └── VAR_DECL:'n'
        │   │   └── RETURN_STMT:''
        │   │       └── UNEXPOSED_EXPR:'r'
        │   │           └── DECL_REF_EXPR:'r'
        │   ├── PARM_DECL:'mat1'
        │   └── PARM_DECL:'mat2'
        ├── CXX_METHOD:'searchForNeighbors'
        │   ├── COMPOUND_STMT:''
        │   │   ├── DECL_STMT:''
        │   │   │   └── VAR_DECL:'k'
        │   │   ├── IF_STMT:''
        │   │   │   ├── BINARY_OPERATOR:''
        │   │   │   │   ├── INTEGER_LITERAL:''
        │   │   │   │   └── UNEXPOSED_EXPR:'k'
        │   │   │   │       └── DECL_REF_EXPR:'k'
        │   │   │   └── RETURN_STMT:''
        │   │   │       └── PAREN_EXPR:''
        │   │   │           └── CXX_NULL_PTR_LITERAL_EXPR:''
        │   │   └── RETURN_STMT:''
        │   │       └── PAREN_EXPR:''
        │   │           └── CXX_NULL_PTR_LITERAL_EXPR:''
        │   ├── PARM_DECL:'distance'
        │   ├── PARM_DECL:'index'
        │   └── PARM_DECL:'query'
        │       └── TYPE_REF:'PointSource'
        ├── CXX_METHOD:'setCorrespondenceRandomness'
        │   ├── COMPOUND_STMT:''
        │   │   └── BINARY_OPERATOR:''
        │   │       ├── MEMBER_REF_EXPR:'k_correspondences_'
        │   │       └── UNEXPOSED_EXPR:'k'
        │   │           └── DECL_REF_EXPR:'k'
        │   └── PARM_DECL:'k'
        ├── CXX_METHOD:'setInputSource'
        │   ├── COMPOUND_STMT:''
        │   │   ├── DECL_STMT:''
        │   │   │   └── VAR_DECL:'input'
        │   │   └── IF_STMT:''
        │   │       └── COMPOUND_STMT:''
        │   │           └── RETURN_STMT:''
        │   ├── CXX_OVERRIDE_ATTR:''
        │   └── PARM_DECL:'cloud'
        ├── CXX_METHOD:'setInputTarget'
        │   ├── COMPOUND_STMT:''
        │   ├── CXX_OVERRIDE_ATTR:''
        │   └── PARM_DECL:'target'
        ├── CXX_METHOD:'setMaximumOptimizerIterations'
        │   ├── COMPOUND_STMT:''
        │   │   └── BINARY_OPERATOR:''
        │   │       ├── MEMBER_REF_EXPR:'max_inner_iterations_'
        │   │       └── UNEXPOSED_EXPR:'max'
        │   │           └── DECL_REF_EXPR:'max'
        │   └── PARM_DECL:'max'
        ├── CXX_METHOD:'setRotationEpsilon'
        │   ├── COMPOUND_STMT:''
        │   │   └── BINARY_OPERATOR:''
        │   │       ├── MEMBER_REF_EXPR:'rotation_epsilon_'
        │   │       └── UNEXPOSED_EXPR:'epsilon'
        │   │           └── DECL_REF_EXPR:'epsilon'
        │   └── PARM_DECL:'epsilon'
        ├── CXX_METHOD:'setRotationGradientTolerance'
        │   ├── COMPOUND_STMT:''
        │   │   └── BINARY_OPERATOR:''
        │   │       ├── MEMBER_REF_EXPR:'rotation_gradient_tolerance_'
        │   │       └── UNEXPOSED_EXPR:'tolerance'
        │   │           └── DECL_REF_EXPR:'tolerance'
        │   └── PARM_DECL:'tolerance'
        ├── CXX_METHOD:'setSourceCovariances'
        │   ├── COMPOUND_STMT:''
        │   └── PARM_DECL:'covariances'
        ├── CXX_METHOD:'setTargetCovariances'
        │   ├── COMPOUND_STMT:''
        │   └── PARM_DECL:'covariances'
        ├── CXX_METHOD:'setTranslationGradientTolerance'
        │   ├── COMPOUND_STMT:''
        │   │   └── BINARY_OPERATOR:''
        │   │       ├── MEMBER_REF_EXPR:'translation_gradient_tolerance_'
        │   │       └── UNEXPOSED_EXPR:'tolerance'
        │   │           └── DECL_REF_EXPR:'tolerance'
        │   └── PARM_DECL:'tolerance'
        ├── FIELD_DECL:'base_transformation_'
        ├── FIELD_DECL:'gicp_epsilon_'
        ├── FIELD_DECL:'input_covariances_'
        ├── FIELD_DECL:'k_correspondences_'
        ├── FIELD_DECL:'mahalanobis_'
        ├── FIELD_DECL:'max_inner_iterations_'
        ├── FIELD_DECL:'rigid_transformation_estimation_'
        ├── FIELD_DECL:'rotation_epsilon_'
        ├── FIELD_DECL:'rotation_gradient_tolerance_'
        ├── FIELD_DECL:'target_covariances_'
        ├── FIELD_DECL:'tmp_idx_src_'
        ├── FIELD_DECL:'tmp_idx_tgt_'
        ├── FIELD_DECL:'tmp_src_'
        ├── FIELD_DECL:'tmp_tgt_'
        ├── FIELD_DECL:'translation_gradient_tolerance_'
        ├── FUNCTION_TEMPLATE:'computeCovariances'
        │   ├── PARM_DECL:''
        │   └── TEMPLATE_TYPE_PARAMETER:'PointT'
        ├── STRUCT_DECL:'OptimizationFunctorWithIndices'
        │   ├── CONSTRUCTOR:'OptimizationFunctorWithIndices'
        │   │   ├── COMPOUND_STMT:''
        │   │   ├── MEMBER_REF:'gicp_'
        │   │   ├── PARM_DECL:'gicp'
        │   │   │   └── TYPE_REF:'GeneralizedIterativeClosestPoint<PointSource, PointTarget>'
        │   │   └── UNEXPOSED_EXPR:''
        │   │       └── DECL_REF_EXPR:'gicp'
        │   ├── CXX_METHOD:'checkGradient'
        │   │   └── CXX_OVERRIDE_ATTR:''
        │   ├── CXX_METHOD:'df'
        │   │   ├── CXX_OVERRIDE_ATTR:''
        │   │   ├── PARM_DECL:'df'
        │   │   └── PARM_DECL:'x'
        │   ├── CXX_METHOD:'fdf'
        │   │   ├── CXX_OVERRIDE_ATTR:''
        │   │   ├── PARM_DECL:'df'
        │   │   ├── PARM_DECL:'f'
        │   │   └── PARM_DECL:'x'
        │   ├── CXX_METHOD:'operator()'
        │   │   ├── CXX_OVERRIDE_ATTR:''
        │   │   └── PARM_DECL:'x'
        │   └── FIELD_DECL:'gicp_'
        │       └── TYPE_REF:'GeneralizedIterativeClosestPoint<PointSource, PointTarget>'
        ├── TEMPLATE_TYPE_PARAMETER:'PointSource'
        └── TEMPLATE_TYPE_PARAMETER:'PointTarget'
