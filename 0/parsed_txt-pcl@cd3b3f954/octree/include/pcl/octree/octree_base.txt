TRANSLATION_UNIT:'/pcl/octree/include/pcl/octree/octree_base.h'
├── INCLUSION_DIRECTIVE:'pcl/octree/octree_container.h'
├── INCLUSION_DIRECTIVE:'pcl/octree/octree_iterator.h'
├── INCLUSION_DIRECTIVE:'pcl/octree/octree_key.h'
├── INCLUSION_DIRECTIVE:'pcl/octree/octree_nodes.h'
├── INCLUSION_DIRECTIVE:'pcl/pcl_macros.h'
├── INCLUSION_DIRECTIVE:'vector'
└── NAMESPACE:'pcl'
    └── NAMESPACE:'octree'
        └── CLASS_TEMPLATE:'OctreeBase'
            ├── CONSTRUCTOR:'OctreeBase<LeafContainerT, BranchContainerT>'
            ├── CONSTRUCTOR:'OctreeBase<LeafContainerT, BranchContainerT>'
            │   ├── COMPOUND_STMT:''
            │   ├── MEMBER_REF:'dynamic_depth_enabled_'
            │   ├── PARM_DECL:'source'
            │   │   └── TYPE_REF:'OctreeBase<LeafContainerT, BranchContainerT>'
            │   └── UNEXPOSED_EXPR:''
            │       └── MEMBER_REF_EXPR:''
            │           └── DECL_REF_EXPR:'source'
            ├── CXX_ACCESS_SPEC_DECL:''
            ├── CXX_ACCESS_SPEC_DECL:''
            ├── CXX_ACCESS_SPEC_DECL:''
            ├── CXX_ACCESS_SPEC_DECL:''
            ├── CXX_METHOD:'begin'
            │   └── COMPOUND_STMT:''
            ├── CXX_METHOD:'branchHasChild'
            │   ├── COMPOUND_STMT:''
            │   ├── PARM_DECL:'branch_arg'
            │   └── PARM_DECL:'child_idx_arg'
            ├── CXX_METHOD:'breadth_begin'
            │   └── COMPOUND_STMT:''
            ├── CXX_METHOD:'breadth_end'
            │   └── COMPOUND_STMT:''
            │       └── RETURN_STMT:''
            │           └── CALL_EXPR:''
            │               ├── CXX_THIS_EXPR:''
            │               ├── CXX_THROW_EXPR:''
            │               ├── DECL_REF_EXPR:''
            │               │   └── OVERLOADED_DECL_REF:'BreadthFirstIterator'
            │               └── INTEGER_LITERAL:''
            ├── CXX_METHOD:'createBranchChild'
            │   └── COMPOUND_STMT:''
            │       └── DECL_STMT:''
            │           └── VAR_DECL:'new_branch_child'
            ├── CXX_METHOD:'createLeaf'
            │   ├── PARM_DECL:'idx_x_arg'
            │   ├── PARM_DECL:'idx_y_arg'
            │   ├── PARM_DECL:'idx_z_arg'
            │   └── TYPE_REF:'LeafContainerT'
            ├── CXX_METHOD:'createLeaf'
            │   ├── COMPOUND_STMT:''
            │   │   ├── DECL_STMT:''
            │   │   │   └── VAR_DECL:'leaf_node'
            │   │   ├── DECL_STMT:''
            │   │   │   └── VAR_DECL:'leaf_node_parent'
            │   │   ├── DECL_STMT:''
            │   │   │   └── VAR_DECL:'ret'
            │   │   │       └── TYPE_REF:'LeafContainerT'
            │   │   └── RETURN_STMT:''
            │   │       └── DECL_REF_EXPR:'ret'
            │   ├── PARM_DECL:'key_arg'
            │   └── TYPE_REF:'LeafContainerT'
            ├── CXX_METHOD:'createLeafChild'
            │   └── COMPOUND_STMT:''
            │       └── DECL_STMT:''
            │           └── VAR_DECL:'new_leaf_child'
            ├── CXX_METHOD:'createLeafRecursive'
            ├── CXX_METHOD:'deleteBranch'
            │   ├── COMPOUND_STMT:''
            │   └── PARM_DECL:'branch_arg'
            ├── CXX_METHOD:'deleteBranchChild'
            │   ├── COMPOUND_STMT:''
            │   │   └── IF_STMT:''
            │   │       └── COMPOUND_STMT:''
            │   │           └── DECL_STMT:''
            │   │               └── VAR_DECL:'branch_child'
            │   ├── PARM_DECL:'branch_arg'
            │   └── PARM_DECL:'child_idx_arg'
            ├── CXX_METHOD:'deleteLeafRecursive'
            │   ├── PARM_DECL:'branch_arg'
            │   ├── PARM_DECL:'depth_mask_arg'
            │   └── PARM_DECL:'key_arg'
            ├── CXX_METHOD:'deleteTree'
            ├── CXX_METHOD:'depth_begin'
            │   └── COMPOUND_STMT:''
            ├── CXX_METHOD:'depth_end'
            │   └── COMPOUND_STMT:''
            │       └── RETURN_STMT:''
            │           └── CALL_EXPR:''
            │               ├── CXX_THIS_EXPR:''
            │               ├── CXX_THROW_EXPR:''
            │               ├── DECL_REF_EXPR:''
            │               │   └── OVERLOADED_DECL_REF:'DepthFirstIterator'
            │               └── INTEGER_LITERAL:''
            ├── CXX_METHOD:'deserializeTree'
            │   └── PARM_DECL:'binary_tree_input_arg'
            ├── CXX_METHOD:'deserializeTree'
            │   ├── PARM_DECL:'binary_tree_input_arg'
            │   └── PARM_DECL:'leaf_container_vector_arg'
            ├── CXX_METHOD:'deserializeTreeCallback'
            │   ├── COMPOUND_STMT:''
            │   ├── PARM_DECL:''
            │   │   └── TYPE_REF:'LeafContainerT'
            │   └── PARM_DECL:''
            ├── CXX_METHOD:'deserializeTreeRecursive'
            │   ├── PARM_DECL:''
            │   ├── PARM_DECL:'branch_arg'
            │   ├── PARM_DECL:'depth_mask_arg'
            │   └── PARM_DECL:'key_arg'
            ├── CXX_METHOD:'end'
            │   └── COMPOUND_STMT:''
            │       └── RETURN_STMT:''
            │           └── CALL_EXPR:''
            │               ├── CXX_THIS_EXPR:''
            │               ├── CXX_THROW_EXPR:''
            │               ├── DECL_REF_EXPR:''
            │               │   └── OVERLOADED_DECL_REF:'Iterator'
            │               └── INTEGER_LITERAL:''
            ├── CXX_METHOD:'existLeaf'
            │   ├── PARM_DECL:'idx_x_arg'
            │   ├── PARM_DECL:'idx_y_arg'
            │   └── PARM_DECL:'idx_z_arg'
            ├── CXX_METHOD:'existLeaf'
            │   ├── COMPOUND_STMT:''
            │   └── PARM_DECL:'key_arg'
            ├── CXX_METHOD:'findLeaf'
            │   ├── PARM_DECL:'idx_x_arg'
            │   ├── PARM_DECL:'idx_y_arg'
            │   ├── PARM_DECL:'idx_z_arg'
            │   └── TYPE_REF:'LeafContainerT'
            ├── CXX_METHOD:'findLeaf'
            │   ├── COMPOUND_STMT:''
            │   │   ├── DECL_STMT:''
            │   │   │   └── VAR_DECL:'result'
            │   │   │       ├── CXX_THIS_EXPR:''
            │   │   │       └── TYPE_REF:'LeafContainerT'
            │   │   └── RETURN_STMT:''
            │   │       └── DECL_REF_EXPR:'result'
            │   ├── PARM_DECL:'key_arg'
            │   └── TYPE_REF:'LeafContainerT'
            ├── CXX_METHOD:'findLeafRecursive'
            │   ├── PARM_DECL:'branch_arg'
            │   ├── PARM_DECL:'depth_mask_arg'
            │   ├── PARM_DECL:'key_arg'
            │   └── PARM_DECL:'result_arg'
            │       └── TYPE_REF:'LeafContainerT'
            ├── CXX_METHOD:'fixed_depth_begin'
            │   └── COMPOUND_STMT:''
            ├── CXX_METHOD:'fixed_depth_end'
            │   └── COMPOUND_STMT:''
            │       └── RETURN_STMT:''
            │           └── CALL_EXPR:''
            │               ├── CXX_THIS_EXPR:''
            │               ├── CXX_THROW_EXPR:''
            │               ├── DECL_REF_EXPR:''
            │               │   └── OVERLOADED_DECL_REF:'FixedDepthIterator'
            │               └── INTEGER_LITERAL:''
            ├── CXX_METHOD:'getBranchBitPattern'
            │   ├── COMPOUND_STMT:''
            │   │   ├── BINARY_OPERATOR:''
            │   │   │   ├── DECL_REF_EXPR:'node_bits'
            │   │   │   └── UNEXPOSED_EXPR:''
            │   │   │       └── INTEGER_LITERAL:''
            │   │   ├── DECL_STMT:''
            │   │   │   └── VAR_DECL:'node_bits'
            │   │   ├── FOR_STMT:''
            │   │   │   ├── BINARY_OPERATOR:''
            │   │   │   │   ├── INTEGER_LITERAL:''
            │   │   │   │   └── UNEXPOSED_EXPR:'i'
            │   │   │   │       └── UNEXPOSED_EXPR:'i'
            │   │   │   │           └── DECL_REF_EXPR:'i'
            │   │   │   ├── COMPOUND_STMT:''
            │   │   │   │   └── DECL_STMT:''
            │   │   │   │       └── VAR_DECL:'child'
            │   │   │   ├── DECL_STMT:''
            │   │   │   │   └── VAR_DECL:'i'
            │   │   │   │       └── UNEXPOSED_EXPR:''
            │   │   │   │           └── INTEGER_LITERAL:''
            │   │   │   └── UNARY_OPERATOR:''
            │   │   │       └── DECL_REF_EXPR:'i'
            │   │   └── RETURN_STMT:''
            │   │       └── UNEXPOSED_EXPR:''
            │   │           └── PAREN_EXPR:''
            │   │               └── DECL_REF_EXPR:'node_bits'
            │   └── PARM_DECL:'branch_arg'
            ├── CXX_METHOD:'getBranchChildPtr'
            │   └── COMPOUND_STMT:''
            ├── CXX_METHOD:'getBranchCount'
            │   └── COMPOUND_STMT:''
            ├── CXX_METHOD:'getLeafCount'
            │   └── COMPOUND_STMT:''
            ├── CXX_METHOD:'getRootNode'
            │   └── COMPOUND_STMT:''
            │       └── RETURN_STMT:''
            │           └── MEMBER_REF_EXPR:''
            │               └── CXX_THROW_EXPR:''
            ├── CXX_METHOD:'getTreeDepth'
            │   └── COMPOUND_STMT:''
            │       └── RETURN_STMT:''
            │           └── MEMBER_REF_EXPR:''
            │               └── CXX_THROW_EXPR:''
            ├── CXX_METHOD:'leaf_breadth_begin'
            │   └── COMPOUND_STMT:''
            ├── CXX_METHOD:'leaf_breadth_end'
            │   └── COMPOUND_STMT:''
            │       └── RETURN_STMT:''
            │           └── CALL_EXPR:''
            │               ├── CXX_THIS_EXPR:''
            │               ├── CXX_THROW_EXPR:''
            │               ├── DECL_REF_EXPR:''
            │               │   └── OVERLOADED_DECL_REF:'LeafNodeBreadthFirstIterator'
            │               └── INTEGER_LITERAL:''
            ├── CXX_METHOD:'leaf_depth_begin'
            │   └── COMPOUND_STMT:''
            ├── CXX_METHOD:'leaf_depth_end'
            │   └── COMPOUND_STMT:''
            │       └── RETURN_STMT:''
            │           └── CALL_EXPR:''
            │               ├── CXX_THIS_EXPR:''
            │               ├── CXX_THROW_EXPR:''
            │               ├── DECL_REF_EXPR:''
            │               │   └── OVERLOADED_DECL_REF:'LeafNodeDepthFirstIterator'
            │               └── INTEGER_LITERAL:''
            ├── CXX_METHOD:'octreeCanResize'
            │   └── COMPOUND_STMT:''
            │       └── RETURN_STMT:''
            │           └── PAREN_EXPR:''
            │               └── CXX_NULL_PTR_LITERAL_EXPR:''
            ├── CXX_METHOD:'operator='
            │   ├── COMPOUND_STMT:''
            │   │   └── RETURN_STMT:''
            │   │       └── PAREN_EXPR:''
            │   │           └── UNARY_OPERATOR:''
            │   │               └── CXX_THROW_EXPR:''
            │   ├── PARM_DECL:'source'
            │   │   └── TYPE_REF:'OctreeBase<LeafContainerT, BranchContainerT>'
            │   └── TYPE_REF:'OctreeBase<LeafContainerT, BranchContainerT>'
            ├── CXX_METHOD:'removeLeaf'
            │   ├── PARM_DECL:'idx_x_arg'
            │   ├── PARM_DECL:'idx_y_arg'
            │   └── PARM_DECL:'idx_z_arg'
            ├── CXX_METHOD:'removeLeaf'
            │   ├── COMPOUND_STMT:''
            │   └── PARM_DECL:'key_arg'
            ├── CXX_METHOD:'serializeLeafs'
            │   └── PARM_DECL:'leaf_container_vector_arg'
            ├── CXX_METHOD:'serializeTree'
            │   └── PARM_DECL:'binary_tree_out_arg'
            ├── CXX_METHOD:'serializeTree'
            │   ├── PARM_DECL:'binary_tree_out_arg'
            │   └── PARM_DECL:'leaf_container_vector_arg'
            ├── CXX_METHOD:'serializeTreeCallback'
            │   ├── COMPOUND_STMT:''
            │   ├── PARM_DECL:''
            │   │   └── TYPE_REF:'LeafContainerT'
            │   └── PARM_DECL:''
            ├── CXX_METHOD:'serializeTreeRecursive'
            │   ├── PARM_DECL:''
            │   ├── PARM_DECL:'binary_tree_out_arg'
            │   ├── PARM_DECL:'branch_arg'
            │   └── PARM_DECL:'key_arg'
            ├── CXX_METHOD:'setBranchChildPtr'
            │   ├── COMPOUND_STMT:''
            │   ├── PARM_DECL:'branch_arg'
            │   ├── PARM_DECL:'child_idx_arg'
            │   └── PARM_DECL:'new_child_arg'
            ├── CXX_METHOD:'setMaxVoxelIndex'
            │   └── PARM_DECL:'max_voxel_index_arg'
            ├── CXX_METHOD:'setTreeDepth'
            │   └── PARM_DECL:'max_depth_arg'
            ├── DESTRUCTOR:'~OctreeBase<LeafContainerT, BranchContainerT>'
            ├── FIELD_DECL:'branch_count_'
            ├── FIELD_DECL:'depth_mask_'
            ├── FIELD_DECL:'dynamic_depth_enabled_'
            ├── FIELD_DECL:'leaf_count_'
            ├── FIELD_DECL:'max_key_'
            ├── FIELD_DECL:'octree_depth_'
            ├── FIELD_DECL:'root_node_'
            ├── FRIEND_DECL:''
            │   └── TYPE_REF:'class pcl::octree::OctreeIteratorBase'
            ├── FRIEND_DECL:''
            │   └── TYPE_REF:'class pcl::octree::OctreeDepthFirstIterator'
            ├── FRIEND_DECL:''
            │   └── TYPE_REF:'class pcl::octree::OctreeBreadthFirstIterator'
            ├── FRIEND_DECL:''
            │   └── TYPE_REF:'class pcl::octree::OctreeFixedDepthIterator'
            ├── FRIEND_DECL:''
            │   └── TYPE_REF:'class pcl::octree::OctreeLeafNodeDepthFirstIterator'
            ├── FRIEND_DECL:''
            │   └── TYPE_REF:'class pcl::octree::OctreeLeafNodeBreadthFirstIterator'
            ├── TEMPLATE_TYPE_PARAMETER:'BranchContainerT'
            ├── TEMPLATE_TYPE_PARAMETER:'LeafContainerT'
            ├── TYPE_ALIAS_DECL:'BranchContainer'
            │   └── TYPE_REF:'BranchContainerT'
            ├── TYPE_ALIAS_DECL:'LeafContainer'
            │   └── TYPE_REF:'LeafContainerT'
            └── TYPE_ALIAS_DECL:'OctreeT'
                ├── TEMPLATE_REF:'OctreeBase'
                ├── TYPE_REF:'BranchContainerT'
                └── TYPE_REF:'LeafContainerT'
