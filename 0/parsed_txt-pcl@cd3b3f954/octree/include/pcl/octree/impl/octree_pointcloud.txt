TRANSLATION_UNIT:'/pcl/octree/include/pcl/octree/impl/octree_pointcloud.hpp'
├── FUNCTION_TEMPLATE:'OctreePointCloud'
│   ├── COMPOUND_STMT:''
│   │   └── PAREN_EXPR:''
│   │       └── CONDITIONAL_OPERATOR:''
│   │           ├── CALL_EXPR:''
│   │           │   ├── DECL_REF_EXPR:''
│   │           │   │   └── OVERLOADED_DECL_REF:'__assert_fail'
│   │           │   ├── INTEGER_LITERAL:''
│   │           │   ├── STRING_LITERAL:'"/pcl/octree/include/pcl/octree/impl/octree_pointcloud.hpp"'
│   │           │   ├── STRING_LITERAL:'"resolution > 0.0f"'
│   │           │   └── UNARY_OPERATOR:''
│   │           │       └── UNEXPOSED_EXPR:''
│   │           ├── CXX_FUNCTIONAL_CAST_EXPR:''
│   │           │   └── INTEGER_LITERAL:''
│   │           └── CXX_STATIC_CAST_EXPR:''
│   │               └── BINARY_OPERATOR:''
│   │                   ├── UNEXPOSED_EXPR:''
│   │                   │   └── FLOATING_LITERAL:''
│   │                   └── UNEXPOSED_EXPR:'resolution'
│   │                       └── DECL_REF_EXPR:'resolution'
│   ├── TEMPLATE_TYPE_PARAMETER:'BranchContainerT'
│   ├── TEMPLATE_TYPE_PARAMETER:'LeafContainerT'
│   ├── TEMPLATE_TYPE_PARAMETER:'OctreeT'
│   └── TEMPLATE_TYPE_PARAMETER:'PointT'
├── INCLUSION_DIRECTIVE:'cassert'
├── INCLUSION_DIRECTIVE:'pcl/common/common.h'
├── INCLUSION_DIRECTIVE:'pcl/common/point_tests.h'
├── INCLUSION_DIRECTIVE:'pcl/octree/impl/octree_base.hpp'
├── INCLUSION_DIRECTIVE:'pcl/types.h'
├── MACRO_DEFINITION:'PCL_INSTANTIATE_OctreePointCloudDoubleBufferWithEmptyLeaf'
├── MACRO_DEFINITION:'PCL_INSTANTIATE_OctreePointCloudDoubleBufferWithLeafDataT'
├── MACRO_DEFINITION:'PCL_INSTANTIATE_OctreePointCloudDoubleBufferWithLeafDataTVector'
├── MACRO_DEFINITION:'PCL_INSTANTIATE_OctreePointCloudSingleBufferWithEmptyLeaf'
├── MACRO_DEFINITION:'PCL_INSTANTIATE_OctreePointCloudSingleBufferWithLeafDataT'
├── MACRO_DEFINITION:'PCL_INSTANTIATE_OctreePointCloudSingleBufferWithLeafDataTVector'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
├── MACRO_INSTANTIATION:'assert'
└── MACRO_INSTANTIATION:'assert'
