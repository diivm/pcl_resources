TRANSLATION_UNIT:'/pcl/common/include/pcl/common/transformation_from_correspondences.h'
├── INCLUSION_DIRECTIVE:'Eigen/Core'
├── INCLUSION_DIRECTIVE:'Eigen/Geometry'
├── INCLUSION_DIRECTIVE:'pcl/common/impl/transformation_from_correspondences.hpp'
└── NAMESPACE:'pcl'
    └── CLASS_DECL:'TransformationFromCorrespondences'
        ├── CONSTRUCTOR:'TransformationFromCorrespondences'
        │   └── COMPOUND_STMT:''
        │       └── CALL_EXPR:'reset'
        │           └── MEMBER_REF_EXPR:'reset'
        ├── CXX_ACCESS_SPEC_DECL:''
        ├── CXX_ACCESS_SPEC_DECL:''
        ├── CXX_METHOD:'add'
        │   ├── PARM_DECL:'corresponding_point'
        │   │   ├── NAMESPACE_REF:'Eigen'
        │   │   └── TYPE_REF:'Eigen::Vector3f'
        │   ├── PARM_DECL:'point'
        │   │   ├── NAMESPACE_REF:'Eigen'
        │   │   └── TYPE_REF:'Eigen::Vector3f'
        │   └── PARM_DECL:'weight'
        │       └── UNEXPOSED_EXPR:''
        │           └── FLOATING_LITERAL:''
        ├── CXX_METHOD:'getAccumulatedWeight'
        │   └── COMPOUND_STMT:''
        │       └── RETURN_STMT:''
        │           └── UNEXPOSED_EXPR:'accumulated_weight_'
        │               └── MEMBER_REF_EXPR:'accumulated_weight_'
        ├── CXX_METHOD:'getNoOfSamples'
        │   └── COMPOUND_STMT:''
        │       └── RETURN_STMT:''
        │           └── UNEXPOSED_EXPR:'no_of_samples_'
        │               └── MEMBER_REF_EXPR:'no_of_samples_'
        ├── CXX_METHOD:'getTransformation'
        │   ├── NAMESPACE_REF:'Eigen'
        │   └── TYPE_REF:'Eigen::Affine3f'
        ├── CXX_METHOD:'reset'
        ├── FIELD_DECL:'accumulated_weight_'
        │   └── UNEXPOSED_EXPR:''
        │       └── INTEGER_LITERAL:''
        ├── FIELD_DECL:'covariance_'
        ├── FIELD_DECL:'mean1_'
        │   ├── NAMESPACE_REF:'Eigen'
        │   └── TYPE_REF:'Eigen::Vector3f'
        ├── FIELD_DECL:'mean2_'
        │   ├── NAMESPACE_REF:'Eigen'
        │   └── TYPE_REF:'Eigen::Vector3f'
        └── FIELD_DECL:'no_of_samples_'
            └── UNEXPOSED_EXPR:''
                └── INTEGER_LITERAL:''
