TRANSLATION_UNIT:'/pcl/common/include/pcl/common/io.h'
├── INCLUSION_DIRECTIVE:'locale'
├── INCLUSION_DIRECTIVE:'numeric'
├── INCLUSION_DIRECTIVE:'pcl/PointIndices.h'
├── INCLUSION_DIRECTIVE:'pcl/PolygonMesh.h'
├── INCLUSION_DIRECTIVE:'pcl/common/impl/io.hpp'
├── INCLUSION_DIRECTIVE:'pcl/pcl_macros.h'
├── INCLUSION_DIRECTIVE:'pcl/point_cloud.h'
├── INCLUSION_DIRECTIVE:'string'
└── NAMESPACE:'pcl'
    ├── ENUM_DECL:'InterpolationType'
    │   ├── ENUM_CONSTANT_DECL:'BORDER_CONSTANT'
    │   │   └── UNEXPOSED_EXPR:''
    │   │       └── INTEGER_LITERAL:''
    │   ├── ENUM_CONSTANT_DECL:'BORDER_DEFAULT'
    │   │   └── UNEXPOSED_EXPR:''
    │   │       └── DECL_REF_EXPR:'BORDER_REFLECT_101'
    │   ├── ENUM_CONSTANT_DECL:'BORDER_REFLECT'
    │   │   └── UNEXPOSED_EXPR:''
    │   │       └── INTEGER_LITERAL:''
    │   ├── ENUM_CONSTANT_DECL:'BORDER_REFLECT_101'
    │   │   └── UNEXPOSED_EXPR:''
    │   │       └── INTEGER_LITERAL:''
    │   ├── ENUM_CONSTANT_DECL:'BORDER_REPLICATE'
    │   │   └── UNEXPOSED_EXPR:''
    │   │       └── INTEGER_LITERAL:''
    │   ├── ENUM_CONSTANT_DECL:'BORDER_TRANSPARENT'
    │   │   └── UNEXPOSED_EXPR:''
    │   │       └── INTEGER_LITERAL:''
    │   └── ENUM_CONSTANT_DECL:'BORDER_WRAP'
    │       └── UNEXPOSED_EXPR:''
    │           └── INTEGER_LITERAL:''
    ├── FUNCTION_DECL:'concatenate'
    │   └── COMPOUND_STMT:''
    ├── FUNCTION_DECL:'concatenate'
    │   └── COMPOUND_STMT:''
    ├── FUNCTION_DECL:'concatenateFields'
    ├── FUNCTION_DECL:'copyPointCloud'
    ├── FUNCTION_DECL:'copyPointCloud'
    ├── FUNCTION_DECL:'copyPointCloud'
    ├── FUNCTION_DECL:'getEigenAsPointCloud'
    ├── FUNCTION_DECL:'getFieldIndex'
    │   ├── COMPOUND_STMT:''
    │   │   ├── DECL_STMT:''
    │   │   │   └── VAR_DECL:'result'
    │   │   └── IF_STMT:''
    │   │       └── RETURN_STMT:''
    │   │           └── UNARY_OPERATOR:''
    │   │               └── INTEGER_LITERAL:''
    │   ├── PARM_DECL:'cloud'
    │   └── PARM_DECL:'field_name'
    ├── FUNCTION_DECL:'getFieldSize'
    │   ├── COMPOUND_STMT:''
    │   │   └── SWITCH_STMT:''
    │   │       ├── COMPOUND_STMT:''
    │   │       │   ├── DEFAULT_STMT:''
    │   │       │   │   └── RETURN_STMT:''
    │   │       │   │       └── PAREN_EXPR:''
    │   │       │   │           └── INTEGER_LITERAL:''
    │   │       │   ├── RETURN_STMT:''
    │   │       │   │   └── PAREN_EXPR:''
    │   │       │   │       └── INTEGER_LITERAL:''
    │   │       │   ├── RETURN_STMT:''
    │   │       │   │   └── PAREN_EXPR:''
    │   │       │   │       └── INTEGER_LITERAL:''
    │   │       │   ├── RETURN_STMT:''
    │   │       │   │   └── PAREN_EXPR:''
    │   │       │   │       └── INTEGER_LITERAL:''
    │   │       │   └── RETURN_STMT:''
    │   │       │       └── PAREN_EXPR:''
    │   │       │           └── INTEGER_LITERAL:''
    │   │       └── UNEXPOSED_EXPR:'datatype'
    │   │           └── DECL_REF_EXPR:'datatype'
    │   └── PARM_DECL:'datatype'
    ├── FUNCTION_DECL:'getFieldType'
    │   ├── COMPOUND_STMT:''
    │   │   ├── RETURN_STMT:''
    │   │   │   └── PAREN_EXPR:''
    │   │   │       └── UNARY_OPERATOR:''
    │   │   │           └── INTEGER_LITERAL:''
    │   │   └── SWITCH_STMT:''
    │   │       ├── COMPOUND_STMT:''
    │   │       │   ├── BREAK_STMT:''
    │   │       │   ├── BREAK_STMT:''
    │   │       │   ├── BREAK_STMT:''
    │   │       │   ├── BREAK_STMT:''
    │   │       │   ├── CASE_STMT:''
    │   │       │   │   └── INTEGER_LITERAL:''
    │   │       │   ├── CASE_STMT:''
    │   │       │   │   └── INTEGER_LITERAL:''
    │   │       │   ├── CASE_STMT:''
    │   │       │   │   └── INTEGER_LITERAL:''
    │   │       │   └── CASE_STMT:''
    │   │       │       └── INTEGER_LITERAL:''
    │   │       └── UNEXPOSED_EXPR:'size'
    │   │           └── DECL_REF_EXPR:'size'
    │   ├── PARM_DECL:'size'
    │   └── PARM_DECL:'type'
    ├── FUNCTION_DECL:'getFieldType'
    │   ├── COMPOUND_STMT:''
    │   │   └── SWITCH_STMT:''
    │   │       ├── COMPOUND_STMT:''
    │   │       │   ├── DEFAULT_STMT:''
    │   │       │   │   └── RETURN_STMT:''
    │   │       │   │       └── PAREN_EXPR:''
    │   │       │   │           └── CHARACTER_LITERAL:''
    │   │       │   ├── RETURN_STMT:''
    │   │       │   │   └── PAREN_EXPR:''
    │   │       │   │       └── CHARACTER_LITERAL:''
    │   │       │   ├── RETURN_STMT:''
    │   │       │   │   └── PAREN_EXPR:''
    │   │       │   │       └── CHARACTER_LITERAL:''
    │   │       │   └── RETURN_STMT:''
    │   │       │       └── PAREN_EXPR:''
    │   │       │           └── CHARACTER_LITERAL:''
    │   │       └── UNEXPOSED_EXPR:'type'
    │   │           └── DECL_REF_EXPR:'type'
    │   └── PARM_DECL:'type'
    ├── FUNCTION_DECL:'getFieldsList'
    │   └── COMPOUND_STMT:''
    ├── FUNCTION_DECL:'getFieldsSizes'
    ├── FUNCTION_DECL:'getPointCloudAsEigen'
    ├── FUNCTION_DECL:'interpolatePointIndex'
    ├── FUNCTION_TEMPLATE:'concatenate'
    │   ├── COMPOUND_STMT:''
    │   └── TEMPLATE_TYPE_PARAMETER:'PointT'
    ├── FUNCTION_TEMPLATE:'concatenateFields'
    │   ├── PARM_DECL:'cloud1_in'
    │   ├── PARM_DECL:'cloud2_in'
    │   ├── PARM_DECL:'cloud_out'
    │   ├── TEMPLATE_TYPE_PARAMETER:'PointIn1T'
    │   ├── TEMPLATE_TYPE_PARAMETER:'PointIn2T'
    │   └── TEMPLATE_TYPE_PARAMETER:'PointOutT'
    ├── FUNCTION_TEMPLATE:'copyPointCloud'
    │   ├── PARM_DECL:'cloud_in'
    │   ├── PARM_DECL:'cloud_out'
    │   ├── PARM_DECL:'indices'
    │   ├── TEMPLATE_TYPE_PARAMETER:'IndicesVectorAllocator'
    │   └── TEMPLATE_TYPE_PARAMETER:'PointT'
    ├── FUNCTION_TEMPLATE:'copyPointCloud'
    │   ├── PARM_DECL:'cloud_in'
    │   ├── PARM_DECL:'cloud_out'
    │   ├── PARM_DECL:'indices'
    │   └── TEMPLATE_TYPE_PARAMETER:'PointT'
    ├── FUNCTION_TEMPLATE:'copyPointCloud'
    │   ├── PARM_DECL:'cloud_in'
    │   ├── PARM_DECL:'cloud_out'
    │   ├── PARM_DECL:'indices'
    │   └── TEMPLATE_TYPE_PARAMETER:'PointT'
    ├── FUNCTION_TEMPLATE:'copyPointCloud'
    │   ├── PARM_DECL:'cloud_in'
    │   ├── PARM_DECL:'cloud_out'
    │   ├── TEMPLATE_TYPE_PARAMETER:'PointInT'
    │   └── TEMPLATE_TYPE_PARAMETER:'PointOutT'
    ├── FUNCTION_TEMPLATE:'copyPointCloud'
    │   ├── PARM_DECL:'cloud_in'
    │   ├── PARM_DECL:'cloud_out'
    │   ├── PARM_DECL:'indices'
    │   ├── TEMPLATE_TYPE_PARAMETER:'IndicesVectorAllocator'
    │   ├── TEMPLATE_TYPE_PARAMETER:'PointInT'
    │   └── TEMPLATE_TYPE_PARAMETER:'PointOutT'
    ├── FUNCTION_TEMPLATE:'copyPointCloud'
    │   ├── PARM_DECL:'cloud_in'
    │   ├── PARM_DECL:'cloud_out'
    │   ├── PARM_DECL:'indices'
    │   ├── TEMPLATE_TYPE_PARAMETER:'PointInT'
    │   └── TEMPLATE_TYPE_PARAMETER:'PointOutT'
    ├── FUNCTION_TEMPLATE:'copyPointCloud'
    │   ├── PARM_DECL:'cloud_in'
    │   ├── PARM_DECL:'cloud_out'
    │   ├── PARM_DECL:'indices'
    │   ├── TEMPLATE_TYPE_PARAMETER:'PointInT'
    │   └── TEMPLATE_TYPE_PARAMETER:'PointOutT'
    ├── FUNCTION_TEMPLATE:'copyPointCloud'
    │   ├── PARM_DECL:'border_type'
    │   │   ├── NAMESPACE_REF:'pcl'
    │   │   └── TYPE_REF:'enum pcl::InterpolationType'
    │   ├── PARM_DECL:'bottom'
    │   ├── PARM_DECL:'cloud_in'
    │   ├── PARM_DECL:'cloud_out'
    │   ├── PARM_DECL:'left'
    │   ├── PARM_DECL:'right'
    │   ├── PARM_DECL:'top'
    │   ├── PARM_DECL:'value'
    │   │   └── TYPE_REF:'PointT'
    │   └── TEMPLATE_TYPE_PARAMETER:'PointT'
    ├── FUNCTION_TEMPLATE:'getFieldIndex'
    │   ├── PARM_DECL:'field_name'
    │   ├── PARM_DECL:'fields'
    │   └── TEMPLATE_TYPE_PARAMETER:'PointT'
    ├── FUNCTION_TEMPLATE:'getFieldIndex'
    │   ├── PARM_DECL:'field_name'
    │   ├── PARM_DECL:'fields'
    │   └── TEMPLATE_TYPE_PARAMETER:'PointT'
    ├── FUNCTION_TEMPLATE:'getFields'
    │   └── TEMPLATE_TYPE_PARAMETER:'PointT'
    ├── FUNCTION_TEMPLATE:'getFieldsList'
    │   └── TEMPLATE_TYPE_PARAMETER:'PointT'
    ├── FUNCTION_TEMPLATE:'isSamePointType'
    │   ├── COMPOUND_STMT:''
    │   ├── TEMPLATE_TYPE_PARAMETER:'Point1T'
    │   └── TEMPLATE_TYPE_PARAMETER:'Point2T'
    └── NAMESPACE:'io'
        ├── FUNCTION_DECL:'swapByte'
        │   ├── COMPOUND_STMT:''
        │   │   └── BINARY_OPERATOR:''
        │   │       ├── ARRAY_SUBSCRIPT_EXPR:''
        │   │       │   ├── INTEGER_LITERAL:''
        │   │       │   └── UNEXPOSED_EXPR:'bytes'
        │   │       │       └── DECL_REF_EXPR:'bytes'
        │   │       └── UNEXPOSED_EXPR:''
        │   │           └── ARRAY_SUBSCRIPT_EXPR:''
        │   │               ├── INTEGER_LITERAL:''
        │   │               └── UNEXPOSED_EXPR:'bytes'
        │   │                   └── DECL_REF_EXPR:'bytes'
        │   └── PARM_DECL:'bytes'
        ├── FUNCTION_DECL:'swapByte'
        │   ├── COMPOUND_STMT:''
        │   └── PARM_DECL:'bytes'
        ├── FUNCTION_DECL:'swapByte'
        │   ├── COMPOUND_STMT:''
        │   └── PARM_DECL:'bytes'
        ├── FUNCTION_DECL:'swapByte'
        │   ├── COMPOUND_STMT:''
        │   └── PARM_DECL:'bytes'
        ├── FUNCTION_TEMPLATE:'swapByte'
        │   ├── PARM_DECL:'bytes'
        │   └── TEMPLATE_NON_TYPE_PARAMETER:'N'
        └── FUNCTION_TEMPLATE:'swapByte'
            ├── COMPOUND_STMT:''
            │   └── CALL_EXPR:''
            │       ├── CXX_REINTERPRET_CAST_EXPR:''
            │       │   └── UNARY_OPERATOR:''
            │       │       └── DECL_REF_EXPR:'value'
            │       └── DECL_REF_EXPR:''
            │           ├── NAMESPACE_REF:'io'
            │           ├── NAMESPACE_REF:'pcl'
            │           ├── OBJC_STRING_LITERAL:''
            │           │   └── TYPE_REF:'T'
            │           └── OVERLOADED_DECL_REF:'swapByte'
            ├── PARM_DECL:'value'
            │   └── TYPE_REF:'T'
            └── TEMPLATE_TYPE_PARAMETER:'T'
