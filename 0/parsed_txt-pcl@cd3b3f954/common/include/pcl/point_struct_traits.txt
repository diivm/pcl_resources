TRANSLATION_UNIT:'/pcl/common/include/pcl/point_struct_traits.h'
├── INCLUSION_DIRECTIVE:'boost/mpl/assert.hpp'
├── INCLUSION_DIRECTIVE:'boost/mpl/identity.hpp'
├── INCLUSION_DIRECTIVE:'boost/mpl/vector.hpp'
├── INCLUSION_DIRECTIVE:'boost/preprocessor/seq/enum.hpp'
├── INCLUSION_DIRECTIVE:'boost/preprocessor/stringize.hpp'
├── INCLUSION_DIRECTIVE:'boost/preprocessor/tuple/elem.hpp'
├── INCLUSION_DIRECTIVE:'cstddef'
├── INCLUSION_DIRECTIVE:'cstdint'
├── INCLUSION_DIRECTIVE:'type_traits'
├── MACRO_DEFINITION:'POINT_CLOUD_REGISTER_FIELD_DATATYPE'
├── MACRO_DEFINITION:'POINT_CLOUD_REGISTER_FIELD_NAME'
├── MACRO_DEFINITION:'POINT_CLOUD_REGISTER_FIELD_OFFSET'
├── MACRO_DEFINITION:'POINT_CLOUD_REGISTER_POINT_FIELD_LIST'
├── MACRO_INSTANTIATION:'BOOST_MPL_ASSERT_MSG'
├── MACRO_INSTANTIATION:'BOOST_MPL_ASSERT_MSG'
├── MACRO_INSTANTIATION:'BOOST_MPL_ASSERT_MSG'
├── MACRO_INSTANTIATION:'BOOST_MPL_ASSERT_MSG'
├── NAMESPACE:'pcl'
│   └── NAMESPACE:'traits'
│       ├── CLASS_TEMPLATE:'POD'
│       │   ├── TEMPLATE_TYPE_PARAMETER:'PointT'
│       │   └── TYPE_ALIAS_DECL:'type'
│       │       └── TYPE_REF:'PointT'
│       ├── CLASS_TEMPLATE:'asEnum'
│       │   └── TEMPLATE_TYPE_PARAMETER:'T'
│       ├── CLASS_TEMPLATE:'decomposeArray'
│       │   ├── TEMPLATE_TYPE_PARAMETER:'T'
│       │   └── VAR_DECL:'value'
│       └── CLASS_TEMPLATE:'name'
│           ├── CXX_BASE_SPECIFIER:'name<typename POD<PointT>::type, Tag, dummy>'
│           │   ├── DECL_REF_EXPR:'dummy'
│           │   ├── TEMPLATE_REF:'POD'
│           │   ├── TEMPLATE_REF:'name'
│           │   ├── TYPE_REF:'PointT'
│           │   └── TYPE_REF:'Tag'
│           ├── ENUM_DECL:''
│           │   └── ENUM_CONSTANT_DECL:'mpl_assertion_in_line_115'
│           ├── STRUCT_DECL:'POINT_TYPE_NOT_PROPERLY_REGISTERED'
│           ├── STRUCT_DECL:'POINT_TYPE_NOT_PROPERLY_REGISTERED115'
│           │   ├── CXX_BASE_SPECIFIER:'boost::mpl::assert_'
│           │   │   ├── NAMESPACE_REF:'boost'
│           │   │   ├── NAMESPACE_REF:'mpl'
│           │   │   └── TYPE_REF:'struct mpl_::assert_'
│           │   └── CXX_METHOD:'assert_arg'
│           │       ├── COMPOUND_STMT:''
│           │       │   └── RETURN_STMT:''
│           │       │       └── INTEGER_LITERAL:''
│           │       ├── NAMESPACE_REF:'boost'
│           │       ├── NAMESPACE_REF:'mpl'
│           │       ├── PARM_DECL:''
│           │       │   └── TYPE_REF:'PointT'
│           │       └── TYPE_REF:'struct mpl_::failed'
│           ├── TEMPLATE_NON_TYPE_PARAMETER:'dummy'
│           │   └── INTEGER_LITERAL:''
│           ├── TEMPLATE_TYPE_PARAMETER:'PointT'
│           ├── TEMPLATE_TYPE_PARAMETER:'Tag'
│           └── TYPEDEF_DECL:'mpl_assert_arg115'
│               └── STRUCT_DECL:'POINT_TYPE_NOT_PROPERLY_REGISTERED115'
│                   ├── CXX_BASE_SPECIFIER:'boost::mpl::assert_'
│                   │   ├── NAMESPACE_REF:'boost'
│                   │   ├── NAMESPACE_REF:'mpl'
│                   │   └── TYPE_REF:'struct mpl_::assert_'
│                   └── CXX_METHOD:'assert_arg'
│                       ├── COMPOUND_STMT:''
│                       │   └── RETURN_STMT:''
│                       │       └── INTEGER_LITERAL:''
│                       ├── NAMESPACE_REF:'boost'
│                       ├── NAMESPACE_REF:'mpl'
│                       ├── PARM_DECL:''
│                       │   └── TYPE_REF:'PointT'
│                       └── TYPE_REF:'struct mpl_::failed'
├── NAMESPACE:'pcl'
│   └── NAMESPACE:'traits'
│       └── CLASS_TEMPLATE:'offset'
│           ├── CXX_BASE_SPECIFIER:'offset<typename POD<PointT>::type, Tag>'
│           │   ├── TEMPLATE_REF:'POD'
│           │   ├── TEMPLATE_REF:'offset'
│           │   ├── TYPE_REF:'PointT'
│           │   └── TYPE_REF:'Tag'
│           ├── ENUM_DECL:''
│           │   └── ENUM_CONSTANT_DECL:'mpl_assertion_in_line_147'
│           ├── STRUCT_DECL:'POINT_TYPE_NOT_PROPERLY_REGISTERED'
│           ├── STRUCT_DECL:'POINT_TYPE_NOT_PROPERLY_REGISTERED147'
│           │   ├── CXX_BASE_SPECIFIER:'boost::mpl::assert_'
│           │   │   ├── NAMESPACE_REF:'boost'
│           │   │   ├── NAMESPACE_REF:'mpl'
│           │   │   └── TYPE_REF:'struct mpl_::assert_'
│           │   └── CXX_METHOD:'assert_arg'
│           │       ├── COMPOUND_STMT:''
│           │       │   └── RETURN_STMT:''
│           │       │       └── INTEGER_LITERAL:''
│           │       ├── NAMESPACE_REF:'boost'
│           │       ├── NAMESPACE_REF:'mpl'
│           │       ├── PARM_DECL:''
│           │       │   └── TYPE_REF:'PointT'
│           │       └── TYPE_REF:'struct mpl_::failed'
│           ├── TEMPLATE_TYPE_PARAMETER:'PointT'
│           ├── TEMPLATE_TYPE_PARAMETER:'Tag'
│           └── TYPEDEF_DECL:'mpl_assert_arg147'
│               └── STRUCT_DECL:'POINT_TYPE_NOT_PROPERLY_REGISTERED147'
│                   ├── CXX_BASE_SPECIFIER:'boost::mpl::assert_'
│                   │   ├── NAMESPACE_REF:'boost'
│                   │   ├── NAMESPACE_REF:'mpl'
│                   │   └── TYPE_REF:'struct mpl_::assert_'
│                   └── CXX_METHOD:'assert_arg'
│                       ├── COMPOUND_STMT:''
│                       │   └── RETURN_STMT:''
│                       │       └── INTEGER_LITERAL:''
│                       ├── NAMESPACE_REF:'boost'
│                       ├── NAMESPACE_REF:'mpl'
│                       ├── PARM_DECL:''
│                       │   └── TYPE_REF:'PointT'
│                       └── TYPE_REF:'struct mpl_::failed'
├── NAMESPACE:'pcl'
│   └── NAMESPACE:'traits'
│       └── CLASS_TEMPLATE:'datatype'
│           ├── CXX_BASE_SPECIFIER:'datatype<typename POD<PointT>::type, Tag>'
│           │   ├── TEMPLATE_REF:'POD'
│           │   ├── TEMPLATE_REF:'datatype'
│           │   ├── TYPE_REF:'PointT'
│           │   └── TYPE_REF:'Tag'
│           ├── ENUM_DECL:''
│           │   └── ENUM_CONSTANT_DECL:'mpl_assertion_in_line_174'
│           ├── STRUCT_DECL:'POINT_TYPE_NOT_PROPERLY_REGISTERED'
│           ├── STRUCT_DECL:'POINT_TYPE_NOT_PROPERLY_REGISTERED174'
│           │   ├── CXX_BASE_SPECIFIER:'boost::mpl::assert_'
│           │   │   ├── NAMESPACE_REF:'boost'
│           │   │   ├── NAMESPACE_REF:'mpl'
│           │   │   └── TYPE_REF:'struct mpl_::assert_'
│           │   └── CXX_METHOD:'assert_arg'
│           │       ├── COMPOUND_STMT:''
│           │       │   └── RETURN_STMT:''
│           │       │       └── INTEGER_LITERAL:''
│           │       ├── NAMESPACE_REF:'boost'
│           │       ├── NAMESPACE_REF:'mpl'
│           │       ├── PARM_DECL:''
│           │       │   └── TYPE_REF:'PointT'
│           │       └── TYPE_REF:'struct mpl_::failed'
│           ├── TEMPLATE_TYPE_PARAMETER:'PointT'
│           ├── TEMPLATE_TYPE_PARAMETER:'Tag'
│           └── TYPEDEF_DECL:'mpl_assert_arg174'
│               └── STRUCT_DECL:'POINT_TYPE_NOT_PROPERLY_REGISTERED174'
│                   ├── CXX_BASE_SPECIFIER:'boost::mpl::assert_'
│                   │   ├── NAMESPACE_REF:'boost'
│                   │   ├── NAMESPACE_REF:'mpl'
│                   │   └── TYPE_REF:'struct mpl_::assert_'
│                   └── CXX_METHOD:'assert_arg'
│                       ├── COMPOUND_STMT:''
│                       │   └── RETURN_STMT:''
│                       │       └── INTEGER_LITERAL:''
│                       ├── NAMESPACE_REF:'boost'
│                       ├── NAMESPACE_REF:'mpl'
│                       ├── PARM_DECL:''
│                       │   └── TYPE_REF:'PointT'
│                       └── TYPE_REF:'struct mpl_::failed'
└── NAMESPACE:'pcl'
    └── NAMESPACE:'traits'
        └── CLASS_TEMPLATE:'fieldList'
            ├── CXX_BASE_SPECIFIER:'fieldList<typename POD<PointT>::type>'
            │   ├── TEMPLATE_REF:'POD'
            │   ├── TEMPLATE_REF:'fieldList'
            │   └── TYPE_REF:'PointT'
            ├── ENUM_DECL:''
            │   └── ENUM_CONSTANT_DECL:'mpl_assertion_in_line_202'
            ├── STRUCT_DECL:'POINT_TYPE_NOT_PROPERLY_REGISTERED'
            ├── STRUCT_DECL:'POINT_TYPE_NOT_PROPERLY_REGISTERED202'
            │   ├── CXX_BASE_SPECIFIER:'boost::mpl::assert_'
            │   │   ├── NAMESPACE_REF:'boost'
            │   │   ├── NAMESPACE_REF:'mpl'
            │   │   └── TYPE_REF:'struct mpl_::assert_'
            │   └── CXX_METHOD:'assert_arg'
            │       ├── COMPOUND_STMT:''
            │       │   └── RETURN_STMT:''
            │       │       └── INTEGER_LITERAL:''
            │       ├── NAMESPACE_REF:'boost'
            │       ├── NAMESPACE_REF:'mpl'
            │       ├── PARM_DECL:''
            │       │   └── TYPE_REF:'PointT'
            │       └── TYPE_REF:'struct mpl_::failed'
            ├── TEMPLATE_TYPE_PARAMETER:'PointT'
            └── TYPEDEF_DECL:'mpl_assert_arg202'
                └── STRUCT_DECL:'POINT_TYPE_NOT_PROPERLY_REGISTERED202'
                    ├── CXX_BASE_SPECIFIER:'boost::mpl::assert_'
                    │   ├── NAMESPACE_REF:'boost'
                    │   ├── NAMESPACE_REF:'mpl'
                    │   └── TYPE_REF:'struct mpl_::assert_'
                    └── CXX_METHOD:'assert_arg'
                        ├── COMPOUND_STMT:''
                        │   └── RETURN_STMT:''
                        │       └── INTEGER_LITERAL:''
                        ├── NAMESPACE_REF:'boost'
                        ├── NAMESPACE_REF:'mpl'
                        ├── PARM_DECL:''
                        │   └── TYPE_REF:'PointT'
                        └── TYPE_REF:'struct mpl_::failed'
