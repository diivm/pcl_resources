TRANSLATION_UNIT:'/pcl/common/include/pcl/for_each_type.h'
├── INCLUSION_DIRECTIVE:'boost/mpl/assert.hpp'
├── INCLUSION_DIRECTIVE:'boost/mpl/aux_/unwrap.hpp'
├── INCLUSION_DIRECTIVE:'boost/mpl/begin_end.hpp'
├── INCLUSION_DIRECTIVE:'boost/mpl/contains.hpp'
├── INCLUSION_DIRECTIVE:'boost/mpl/deref.hpp'
├── INCLUSION_DIRECTIVE:'boost/mpl/is_sequence.hpp'
├── INCLUSION_DIRECTIVE:'boost/mpl/next_prior.hpp'
├── INCLUSION_DIRECTIVE:'boost/mpl/not.hpp'
├── INCLUSION_DIRECTIVE:'boost/mpl/remove_if.hpp'
├── INCLUSION_DIRECTIVE:'type_traits'
├── MACRO_INSTANTIATION:'BOOST_MPL_ASSERT'
├── MACRO_INSTANTIATION:'__GNUC__'
└── NAMESPACE:'pcl'
    ├── CLASS_TEMPLATE:'for_each_type_impl'
    │   ├── FUNCTION_TEMPLATE:'execute'
    │   │   ├── COMPOUND_STMT:''
    │   │   ├── PARM_DECL:''
    │   │   │   └── TYPE_REF:'F'
    │   │   ├── TEMPLATE_TYPE_PARAMETER:'F'
    │   │   ├── TEMPLATE_TYPE_PARAMETER:'Iterator'
    │   │   └── TEMPLATE_TYPE_PARAMETER:'LastIterator'
    │   └── TEMPLATE_NON_TYPE_PARAMETER:'done'
    │       └── CXX_NULL_PTR_LITERAL_EXPR:''
    ├── CLASS_TEMPLATE:'intersect'
    │   ├── TEMPLATE_TYPE_PARAMETER:'Sequence1'
    │   └── TEMPLATE_TYPE_PARAMETER:'Sequence2'
    ├── FUNCTION_TEMPLATE:'for_each_type'
    │   ├── COMPOUND_STMT:''
    │   │   ├── DECL_STMT:''
    │   │   │   └── ENUM_DECL:''
    │   │   │       └── ENUM_CONSTANT_DECL:'mpl_assertion_in_line_93'
    │   │   │           └── OBJC_STRING_LITERAL:''
    │   │   │               └── PAREN_EXPR:''
    │   │   │                   └── CALL_EXPR:''
    │   │   │                       ├── CALL_EXPR:''
    │   │   │                       │   ├── CSTYLE_CAST_EXPR:''
    │   │   │                       │   │   ├── INTEGER_LITERAL:''
    │   │   │                       │   │   └── PARM_DECL:''
    │   │   │                       │   │       ├── NAMESPACE_REF:'boost'
    │   │   │                       │   │       ├── NAMESPACE_REF:'mpl'
    │   │   │                       │   │       ├── TEMPLATE_REF:'is_sequence'
    │   │   │                       │   │       └── TYPE_REF:'Sequence'
    │   │   │                       │   ├── DECL_REF_EXPR:''
    │   │   │                       │   │   ├── NAMESPACE_REF:'boost'
    │   │   │                       │   │   ├── NAMESPACE_REF:'mpl'
    │   │   │                       │   │   └── OVERLOADED_DECL_REF:'assert_arg'
    │   │   │                       │   └── INTEGER_LITERAL:''
    │   │   │                       └── DECL_REF_EXPR:''
    │   │   │                           ├── CXX_NULL_PTR_LITERAL_EXPR:''
    │   │   │                           ├── NAMESPACE_REF:'boost'
    │   │   │                           ├── NAMESPACE_REF:'mpl'
    │   │   │                           └── OVERLOADED_DECL_REF:'assertion_failed'
    │   │   ├── DECL_STMT:''
    │   │   │   └── TYPE_ALIAS_DECL:'first'
    │   │   │       ├── NAMESPACE_REF:'boost'
    │   │   │       ├── NAMESPACE_REF:'mpl'
    │   │   │       ├── TEMPLATE_REF:'begin'
    │   │   │       └── TYPE_REF:'Sequence'
    │   │   └── DECL_STMT:''
    │   │       └── TYPE_ALIAS_DECL:'last'
    │   │           ├── NAMESPACE_REF:'boost'
    │   │           ├── NAMESPACE_REF:'mpl'
    │   │           ├── TEMPLATE_REF:'end'
    │   │           └── TYPE_REF:'Sequence'
    │   ├── PARM_DECL:'f'
    │   │   └── TYPE_REF:'F'
    │   ├── TEMPLATE_TYPE_PARAMETER:'F'
    │   └── TEMPLATE_TYPE_PARAMETER:'Sequence'
    └── STRUCT_DECL:'for_each_type_impl'
        ├── CXX_NULL_PTR_LITERAL_EXPR:''
        └── FUNCTION_TEMPLATE:'execute'
            ├── COMPOUND_STMT:''
            │   ├── CALL_EXPR:''
            │   │   └── MEMBER_REF_EXPR:''
            │   │       ├── CALL_EXPR:''
            │   │       │   ├── DECL_REF_EXPR:''
            │   │       │   │   ├── NAMESPACE_REF:'aux'
            │   │       │   │   ├── NAMESPACE_REF:'boost'
            │   │       │   │   ├── NAMESPACE_REF:'mpl'
            │   │       │   │   └── OVERLOADED_DECL_REF:'unwrap'
            │   │       │   ├── DECL_REF_EXPR:'f'
            │   │       │   └── INTEGER_LITERAL:''
            │   │       └── TYPE_REF:'arg'
            │   ├── DECL_STMT:''
            │   │   └── TYPE_ALIAS_DECL:'arg'
            │   │       ├── NAMESPACE_REF:'boost'
            │   │       ├── NAMESPACE_REF:'mpl'
            │   │       ├── TEMPLATE_REF:'deref'
            │   │       └── TYPE_REF:'Iterator'
            │   └── DECL_STMT:''
            │       └── TYPE_ALIAS_DECL:'iter'
            │           ├── NAMESPACE_REF:'boost'
            │           ├── NAMESPACE_REF:'mpl'
            │           ├── TEMPLATE_REF:'next'
            │           └── TYPE_REF:'Iterator'
            ├── PARM_DECL:'f'
            │   └── TYPE_REF:'F'
            ├── TEMPLATE_TYPE_PARAMETER:'F'
            ├── TEMPLATE_TYPE_PARAMETER:'Iterator'
            └── TEMPLATE_TYPE_PARAMETER:'LastIterator'
