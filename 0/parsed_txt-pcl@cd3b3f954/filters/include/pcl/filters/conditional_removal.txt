TRANSLATION_UNIT:'/pcl/filters/include/pcl/filters/conditional_removal.h'
├── INCLUSION_DIRECTIVE:'pcl/filters/filter.h'
├── INCLUSION_DIRECTIVE:'pcl/memory.h'
├── INCLUSION_DIRECTIVE:'pcl/pcl_config.h'
└── NAMESPACE:'pcl'
    ├── CLASS_TEMPLATE:'ComparisonBase'
    │   ├── CONSTRUCTOR:'ComparisonBase<PointT>'
    │   │   ├── COMPOUND_STMT:''
    │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
    │   │   ├── MEMBER_REF:'capable_'
    │   │   └── MEMBER_REF:'op_'
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_METHOD:'evaluate'
    │   │   └── PARM_DECL:'point'
    │   │       └── TYPE_REF:'PointT'
    │   ├── CXX_METHOD:'isCapable'
    │   │   └── COMPOUND_STMT:''
    │   │       └── RETURN_STMT:''
    │   │           └── UNEXPOSED_EXPR:''
    │   │               └── PAREN_EXPR:''
    │   │                   └── MEMBER_REF_EXPR:'capable_'
    │   ├── DESTRUCTOR:'~ComparisonBase<PointT>'
    │   │   └── COMPOUND_STMT:''
    │   ├── FIELD_DECL:'capable_'
    │   ├── FIELD_DECL:'field_name_'
    │   ├── FIELD_DECL:'offset_'
    │   ├── FIELD_DECL:'op_'
    │   │   ├── NAMESPACE_REF:'ComparisonOps'
    │   │   └── TYPE_REF:'enum pcl::ComparisonOps::CompareOp'
    │   └── TEMPLATE_TYPE_PARAMETER:'PointT'
    ├── CLASS_TEMPLATE:'ConditionAnd'
    │   ├── CONSTRUCTOR:'ConditionAnd<PointT>'
    │   │   ├── COMPOUND_STMT:''
    │   │   ├── TEMPLATE_REF:'ConditionBase'
    │   │   ├── TYPE_REF:'PointT'
    │   │   └── UNEXPOSED_EXPR:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_BASE_SPECIFIER:'ConditionBase<PointT>'
    │   │   ├── TEMPLATE_REF:'ConditionBase'
    │   │   └── TYPE_REF:'PointT'
    │   ├── CXX_METHOD:'evaluate'
    │   │   ├── CXX_OVERRIDE_ATTR:''
    │   │   └── PARM_DECL:'point'
    │   │       └── TYPE_REF:'PointT'
    │   ├── TEMPLATE_TYPE_PARAMETER:'PointT'
    │   ├── USING_DECLARATION:'comparisons_'
    │   │   ├── TEMPLATE_REF:'ConditionBase'
    │   │   └── TYPE_REF:'PointT'
    │   └── USING_DECLARATION:'conditions_'
    │       ├── TEMPLATE_REF:'ConditionBase'
    │       └── TYPE_REF:'PointT'
    ├── CLASS_TEMPLATE:'ConditionBase'
    │   ├── CONSTRUCTOR:'ConditionBase<PointT>'
    │   │   ├── COMPOUND_STMT:''
    │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
    │   │   └── MEMBER_REF:'capable_'
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_METHOD:'addComparison'
    │   │   └── PARM_DECL:'comparison'
    │   │       └── TYPE_REF:'pcl::ConditionBase::ComparisonBaseConstPtr'
    │   ├── CXX_METHOD:'addCondition'
    │   │   └── PARM_DECL:'condition'
    │   ├── CXX_METHOD:'evaluate'
    │   │   └── PARM_DECL:'point'
    │   │       └── TYPE_REF:'PointT'
    │   ├── CXX_METHOD:'isCapable'
    │   │   └── COMPOUND_STMT:''
    │   │       └── RETURN_STMT:''
    │   │           └── UNEXPOSED_EXPR:''
    │   │               └── PAREN_EXPR:''
    │   │                   └── MEMBER_REF_EXPR:'capable_'
    │   ├── DESTRUCTOR:'~ConditionBase<PointT>'
    │   ├── FIELD_DECL:'capable_'
    │   ├── FIELD_DECL:'comparisons_'
    │   ├── FIELD_DECL:'conditions_'
    │   ├── TEMPLATE_TYPE_PARAMETER:'PointT'
    │   ├── TYPE_ALIAS_DECL:'ComparisonBase'
    │   │   ├── NAMESPACE_REF:'pcl'
    │   │   ├── TEMPLATE_REF:'ComparisonBase'
    │   │   └── TYPE_REF:'PointT'
    │   ├── TYPE_ALIAS_DECL:'ComparisonBaseConstPtr'
    │   │   └── TYPE_REF:'pcl::ConditionBase::ComparisonBase'
    │   └── TYPE_ALIAS_DECL:'ComparisonBasePtr'
    │       └── TYPE_REF:'pcl::ConditionBase::ComparisonBase'
    ├── CLASS_TEMPLATE:'ConditionOr'
    │   ├── CONSTRUCTOR:'ConditionOr<PointT>'
    │   │   ├── COMPOUND_STMT:''
    │   │   ├── TEMPLATE_REF:'ConditionBase'
    │   │   ├── TYPE_REF:'PointT'
    │   │   └── UNEXPOSED_EXPR:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_BASE_SPECIFIER:'ConditionBase<PointT>'
    │   │   ├── TEMPLATE_REF:'ConditionBase'
    │   │   └── TYPE_REF:'PointT'
    │   ├── CXX_METHOD:'evaluate'
    │   │   ├── CXX_OVERRIDE_ATTR:''
    │   │   └── PARM_DECL:'point'
    │   │       └── TYPE_REF:'PointT'
    │   ├── TEMPLATE_TYPE_PARAMETER:'PointT'
    │   ├── USING_DECLARATION:'comparisons_'
    │   │   ├── TEMPLATE_REF:'ConditionBase'
    │   │   └── TYPE_REF:'PointT'
    │   └── USING_DECLARATION:'conditions_'
    │       ├── TEMPLATE_REF:'ConditionBase'
    │       └── TYPE_REF:'PointT'
    ├── CLASS_TEMPLATE:'ConditionalRemoval'
    │   ├── CONSTRUCTOR:'ConditionalRemoval<PointT>'
    │   │   ├── COMPOUND_STMT:''
    │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
    │   │   ├── CXX_NULL_PTR_LITERAL_EXPR:''
    │   │   ├── MEMBER_REF:'capable_'
    │   │   ├── MEMBER_REF:'condition_'
    │   │   ├── MEMBER_REF:'keep_organized_'
    │   │   ├── PARM_DECL:'extract_removed_indices'
    │   │   │   └── UNEXPOSED_EXPR:''
    │   │   │       └── CXX_NULL_PTR_LITERAL_EXPR:''
    │   │   └── UNEXPOSED_EXPR:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_METHOD:'applyFilter'
    │   │   ├── CXX_OVERRIDE_ATTR:''
    │   │   └── PARM_DECL:'output'
    │   ├── CXX_METHOD:'getKeepOrganized'
    │   │   └── COMPOUND_STMT:''
    │   │       └── RETURN_STMT:''
    │   │           └── UNEXPOSED_EXPR:''
    │   │               └── PAREN_EXPR:''
    │   │                   └── MEMBER_REF_EXPR:'keep_organized_'
    │   ├── CXX_METHOD:'setCondition'
    │   │   └── PARM_DECL:'condition'
    │   │       └── TYPE_REF:'pcl::ConditionalRemoval::ConditionBasePtr'
    │   ├── CXX_METHOD:'setKeepOrganized'
    │   │   ├── COMPOUND_STMT:''
    │   │   │   └── BINARY_OPERATOR:''
    │   │   │       ├── MEMBER_REF_EXPR:'keep_organized_'
    │   │   │       └── UNEXPOSED_EXPR:'val'
    │   │   │           └── DECL_REF_EXPR:'val'
    │   │   └── PARM_DECL:'val'
    │   ├── CXX_METHOD:'setUserFilterValue'
    │   │   ├── COMPOUND_STMT:''
    │   │   │   └── BINARY_OPERATOR:''
    │   │   │       ├── MEMBER_REF_EXPR:'user_filter_value_'
    │   │   │       └── UNEXPOSED_EXPR:'val'
    │   │   │           └── DECL_REF_EXPR:'val'
    │   │   └── PARM_DECL:'val'
    │   ├── FIELD_DECL:'capable_'
    │   ├── FIELD_DECL:'condition_'
    │   │   └── TYPE_REF:'pcl::ConditionalRemoval::ConditionBasePtr'
    │   ├── FIELD_DECL:'keep_organized_'
    │   ├── FIELD_DECL:'user_filter_value_'
    │   ├── TEMPLATE_TYPE_PARAMETER:'PointT'
    │   ├── TYPE_ALIAS_DECL:'ConditionBase'
    │   │   ├── NAMESPACE_REF:'pcl'
    │   │   ├── TEMPLATE_REF:'ConditionBase'
    │   │   └── TYPE_REF:'PointT'
    │   ├── TYPE_ALIAS_DECL:'ConditionBaseConstPtr'
    │   │   └── TYPE_REF:'pcl::ConditionalRemoval::ConditionBase'
    │   └── TYPE_ALIAS_DECL:'ConditionBasePtr'
    │       └── TYPE_REF:'pcl::ConditionalRemoval::ConditionBase'
    ├── CLASS_TEMPLATE:'FieldComparison'
    │   ├── CONSTRUCTOR:'FieldComparison<PointT>'
    │   │   ├── PARM_DECL:'compare_val'
    │   │   ├── PARM_DECL:'field_name'
    │   │   └── PARM_DECL:'op'
    │   │       ├── NAMESPACE_REF:'ComparisonOps'
    │   │       └── TYPE_REF:'enum pcl::ComparisonOps::CompareOp'
    │   ├── CONSTRUCTOR:'FieldComparison<PointT>'
    │   │   ├── COMPOUND_STMT:''
    │   │   ├── MEMBER_REF:'compare_val_'
    │   │   ├── MEMBER_REF:'point_data_'
    │   │   ├── PARM_DECL:'src'
    │   │   │   └── TYPE_REF:'FieldComparison<PointT>'
    │   │   ├── TEMPLATE_REF:'ComparisonBase'
    │   │   ├── TYPE_REF:'PointT'
    │   │   ├── UNEXPOSED_EXPR:''
    │   │   ├── UNEXPOSED_EXPR:''
    │   │   │   └── MEMBER_REF_EXPR:''
    │   │   │       └── DECL_REF_EXPR:'src'
    │   │   └── UNEXPOSED_EXPR:''
    │   │       └── MEMBER_REF_EXPR:''
    │   │           └── DECL_REF_EXPR:'src'
    │   ├── CONSTRUCTOR:'FieldComparison<PointT>'
    │   │   ├── COMPOUND_STMT:''
    │   │   ├── MEMBER_REF:'compare_val_'
    │   │   ├── MEMBER_REF:'point_data_'
    │   │   └── UNEXPOSED_EXPR:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_BASE_SPECIFIER:'ComparisonBase<PointT>'
    │   │   ├── TEMPLATE_REF:'ComparisonBase'
    │   │   └── TYPE_REF:'PointT'
    │   ├── CXX_METHOD:'evaluate'
    │   │   ├── CXX_OVERRIDE_ATTR:''
    │   │   └── PARM_DECL:'point'
    │   │       └── TYPE_REF:'PointT'
    │   ├── CXX_METHOD:'operator='
    │   │   ├── COMPOUND_STMT:''
    │   │   │   ├── BINARY_OPERATOR:''
    │   │   │   │   ├── MEMBER_REF_EXPR:''
    │   │   │   │   │   └── DECL_REF_EXPR:'src'
    │   │   │   │   └── MEMBER_REF_EXPR:'compare_val_'
    │   │   │   ├── BINARY_OPERATOR:''
    │   │   │   │   ├── MEMBER_REF_EXPR:''
    │   │   │   │   │   └── DECL_REF_EXPR:'src'
    │   │   │   │   └── MEMBER_REF_EXPR:'point_data_'
    │   │   │   └── RETURN_STMT:''
    │   │   │       └── PAREN_EXPR:''
    │   │   │           └── UNARY_OPERATOR:''
    │   │   │               └── CXX_THROW_EXPR:''
    │   │   ├── PARM_DECL:'src'
    │   │   │   └── TYPE_REF:'FieldComparison<PointT>'
    │   │   └── TYPE_REF:'FieldComparison<PointT>'
    │   ├── DESTRUCTOR:'~FieldComparison<PointT>'
    │   ├── FIELD_DECL:'compare_val_'
    │   ├── FIELD_DECL:'point_data_'
    │   │   ├── TEMPLATE_REF:'PointDataAtOffset'
    │   │   └── TYPE_REF:'PointT'
    │   ├── TEMPLATE_TYPE_PARAMETER:'PointT'
    │   ├── USING_DECLARATION:'capable_'
    │   │   ├── TEMPLATE_REF:'ComparisonBase'
    │   │   └── TYPE_REF:'PointT'
    │   ├── USING_DECLARATION:'field_name_'
    │   │   ├── TEMPLATE_REF:'ComparisonBase'
    │   │   └── TYPE_REF:'PointT'
    │   └── USING_DECLARATION:'op_'
    │       ├── TEMPLATE_REF:'ComparisonBase'
    │       └── TYPE_REF:'PointT'
    ├── CLASS_TEMPLATE:'PackedHSIComparison'
    │   ├── CONSTRUCTOR:'PackedHSIComparison<PointT>'
    │   │   ├── PARM_DECL:'compare_val'
    │   │   ├── PARM_DECL:'component_name'
    │   │   └── PARM_DECL:'op'
    │   │       ├── NAMESPACE_REF:'ComparisonOps'
    │   │       └── TYPE_REF:'enum pcl::ComparisonOps::CompareOp'
    │   ├── CONSTRUCTOR:'PackedHSIComparison<PointT>'
    │   │   ├── COMPOUND_STMT:''
    │   │   ├── MEMBER_REF:'compare_val_'
    │   │   ├── MEMBER_REF:'component_id_'
    │   │   └── UNEXPOSED_EXPR:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_BASE_SPECIFIER:'ComparisonBase<PointT>'
    │   │   ├── TEMPLATE_REF:'ComparisonBase'
    │   │   └── TYPE_REF:'PointT'
    │   ├── CXX_METHOD:'evaluate'
    │   │   ├── CXX_OVERRIDE_ATTR:''
    │   │   └── PARM_DECL:'point'
    │   │       └── TYPE_REF:'PointT'
    │   ├── DESTRUCTOR:'~PackedHSIComparison<PointT>'
    │   │   └── COMPOUND_STMT:''
    │   ├── ENUM_DECL:'ComponentId'
    │   │   ├── ENUM_CONSTANT_DECL:'H'
    │   │   ├── ENUM_CONSTANT_DECL:'I'
    │   │   └── ENUM_CONSTANT_DECL:'S'
    │   ├── FIELD_DECL:'compare_val_'
    │   ├── FIELD_DECL:'component_id_'
    │   │   └── TYPE_REF:'enum pcl::PackedHSIComparison::ComponentId'
    │   ├── FIELD_DECL:'component_name_'
    │   ├── FIELD_DECL:'rgb_offset_'
    │   ├── TEMPLATE_TYPE_PARAMETER:'PointT'
    │   ├── USING_DECLARATION:'capable_'
    │   │   ├── TEMPLATE_REF:'ComparisonBase'
    │   │   └── TYPE_REF:'PointT'
    │   └── USING_DECLARATION:'op_'
    │       ├── TEMPLATE_REF:'ComparisonBase'
    │       └── TYPE_REF:'PointT'
    ├── CLASS_TEMPLATE:'PackedRGBComparison'
    │   ├── CONSTRUCTOR:'PackedRGBComparison<PointT>'
    │   │   ├── PARM_DECL:'compare_val'
    │   │   ├── PARM_DECL:'component_name'
    │   │   └── PARM_DECL:'op'
    │   │       ├── NAMESPACE_REF:'ComparisonOps'
    │   │       └── TYPE_REF:'enum pcl::ComparisonOps::CompareOp'
    │   ├── CONSTRUCTOR:'PackedRGBComparison<PointT>'
    │   │   ├── COMPOUND_STMT:''
    │   │   └── MEMBER_REF:'compare_val_'
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_BASE_SPECIFIER:'ComparisonBase<PointT>'
    │   │   ├── TEMPLATE_REF:'ComparisonBase'
    │   │   └── TYPE_REF:'PointT'
    │   ├── CXX_METHOD:'evaluate'
    │   │   ├── CXX_OVERRIDE_ATTR:''
    │   │   └── PARM_DECL:'point'
    │   │       └── TYPE_REF:'PointT'
    │   ├── DESTRUCTOR:'~PackedRGBComparison<PointT>'
    │   │   └── COMPOUND_STMT:''
    │   ├── FIELD_DECL:'compare_val_'
    │   ├── FIELD_DECL:'component_name_'
    │   ├── FIELD_DECL:'component_offset_'
    │   ├── TEMPLATE_TYPE_PARAMETER:'PointT'
    │   ├── USING_DECLARATION:'capable_'
    │   │   ├── TEMPLATE_REF:'ComparisonBase'
    │   │   └── TYPE_REF:'PointT'
    │   └── USING_DECLARATION:'op_'
    │       ├── TEMPLATE_REF:'ComparisonBase'
    │       └── TYPE_REF:'PointT'
    ├── CLASS_TEMPLATE:'PointDataAtOffset'
    │   ├── CONSTRUCTOR:'PointDataAtOffset<PointT>'
    │   │   ├── COMPOUND_STMT:''
    │   │   ├── PARM_DECL:'datatype'
    │   │   └── PARM_DECL:'offset'
    │   ├── CONSTRUCTOR:'PointDataAtOffset<PointT>'
    │   │   └── COMPOUND_STMT:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_METHOD:'compare'
    │   │   ├── PARM_DECL:'p'
    │   │   │   └── TYPE_REF:'PointT'
    │   │   └── PARM_DECL:'val'
    │   ├── FIELD_DECL:'datatype_'
    │   ├── FIELD_DECL:'offset_'
    │   └── TEMPLATE_TYPE_PARAMETER:'PointT'
    ├── CLASS_TEMPLATE:'TfQuadraticXYZComparison'
    │   ├── CONSTRUCTOR:'TfQuadraticXYZComparison<PointT>'
    │   ├── CONSTRUCTOR:'TfQuadraticXYZComparison<PointT>'
    │   │   ├── PARM_DECL:'comparison_matrix'
    │   │   ├── PARM_DECL:'comparison_scalar'
    │   │   ├── PARM_DECL:'comparison_transform'
    │   │   │   └── UNEXPOSED_EXPR:''
    │   │   ├── PARM_DECL:'comparison_vector'
    │   │   └── PARM_DECL:'op'
    │   │       ├── NAMESPACE_REF:'ComparisonOps'
    │   │       ├── NAMESPACE_REF:'pcl'
    │   │       └── TYPE_REF:'enum pcl::ComparisonOps::CompareOp'
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_ACCESS_SPEC_DECL:''
    │   ├── CXX_BASE_SPECIFIER:'pcl::ComparisonBase<PointT>'
    │   │   ├── NAMESPACE_REF:'pcl'
    │   │   ├── TEMPLATE_REF:'ComparisonBase'
    │   │   └── TYPE_REF:'PointT'
    │   ├── CXX_METHOD:'evaluate'
    │   │   ├── CXX_OVERRIDE_ATTR:''
    │   │   └── PARM_DECL:'point'
    │   │       └── TYPE_REF:'PointT'
    │   ├── CXX_METHOD:'setComparisonMatrix'
    │   │   ├── COMPOUND_STMT:''
    │   │   └── PARM_DECL:'matrix'
    │   ├── CXX_METHOD:'setComparisonMatrix'
    │   │   ├── COMPOUND_STMT:''
    │   │   └── PARM_DECL:'homogeneousMatrix'
    │   ├── CXX_METHOD:'setComparisonOperator'
    │   │   ├── COMPOUND_STMT:''
    │   │   │   └── BINARY_OPERATOR:''
    │   │   │       ├── DECL_REF_EXPR:'op'
    │   │   │       └── MEMBER_REF_EXPR:''
    │   │   │           └── OVERLOADED_DECL_REF:'op_'
    │   │   └── PARM_DECL:'op'
    │   │       ├── NAMESPACE_REF:'ComparisonOps'
    │   │       ├── NAMESPACE_REF:'pcl'
    │   │       └── TYPE_REF:'enum pcl::ComparisonOps::CompareOp'
    │   ├── CXX_METHOD:'setComparisonScalar'
    │   │   ├── COMPOUND_STMT:''
    │   │   │   └── BINARY_OPERATOR:''
    │   │   │       ├── MEMBER_REF_EXPR:'comp_scalar_'
    │   │   │       └── UNEXPOSED_EXPR:'scalar'
    │   │   │           └── DECL_REF_EXPR:'scalar'
    │   │   └── PARM_DECL:'scalar'
    │   ├── CXX_METHOD:'setComparisonVector'
    │   │   ├── COMPOUND_STMT:''
    │   │   └── PARM_DECL:'vector'
    │   ├── CXX_METHOD:'setComparisonVector'
    │   │   ├── COMPOUND_STMT:''
    │   │   └── PARM_DECL:'homogeneousVector'
    │   ├── CXX_METHOD:'transformComparison'
    │   │   ├── COMPOUND_STMT:''
    │   │   └── PARM_DECL:'transform'
    │   ├── CXX_METHOD:'transformComparison'
    │   │   ├── COMPOUND_STMT:''
    │   │   └── PARM_DECL:'transform'
    │   ├── DESTRUCTOR:'~TfQuadraticXYZComparison<PointT>'
    │   │   └── COMPOUND_STMT:''
    │   ├── FIELD_DECL:'comp_matr_'
    │   ├── FIELD_DECL:'comp_scalar_'
    │   ├── FIELD_DECL:'comp_vect_'
    │   ├── FIELD_DECL:'tf_comp_matr_'
    │   ├── FIELD_DECL:'tf_comp_vect_'
    │   ├── TEMPLATE_TYPE_PARAMETER:'PointT'
    │   ├── USING_DECLARATION:'capable_'
    │   │   ├── NAMESPACE_REF:'pcl'
    │   │   ├── TEMPLATE_REF:'ComparisonBase'
    │   │   └── TYPE_REF:'PointT'
    │   └── USING_DECLARATION:'op_'
    │       ├── NAMESPACE_REF:'pcl'
    │       ├── TEMPLATE_REF:'ComparisonBase'
    │       └── TYPE_REF:'PointT'
    └── NAMESPACE:'ComparisonOps'
        └── ENUM_DECL:'CompareOp'
            ├── ENUM_CONSTANT_DECL:'EQ'
            ├── ENUM_CONSTANT_DECL:'GE'
            ├── ENUM_CONSTANT_DECL:'GT'
            ├── ENUM_CONSTANT_DECL:'LE'
            └── ENUM_CONSTANT_DECL:'LT'
